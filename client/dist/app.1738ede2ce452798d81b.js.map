{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/moment/locale sync en","webpack:///./client/app/assets/images/redash_icon_small.png","webpack:///./client/app/assets/images sync \\.(png|jpe","webpack:///./client/app/assets/images/db-logos/Cassandra.png","webpack:///./client/app/assets/images/db-logos/arangodb.png","webpack:///./client/app/assets/images/db-logos/athena.png","webpack:///./client/app/assets/images/db-logos/aws_es.png","webpack:///./client/app/assets/images/db-logos/axibasetsd.png","webpack:///./client/app/assets/images/db-logos/azure_kusto.png","webpack:///./client/app/assets/images/db-logos/bigquery.png","webpack:///./client/app/assets/images/db-logos/bigquery_gce.png","webpack:///./client/app/assets/images/db-logos/clickhouse.png","webpack:///./client/app/assets/images/db-logos/cloudwatch.png","webpack:///./client/app/assets/images/db-logos/cloudwatch_insights.png","webpack:///./client/app/assets/images/db-logos/cockroach.png","webpack:///./client/app/assets/images/db-logos/corporate_memory.png","webpack:///./client/app/assets/images/db-logos/couchbase.png","webpack:///./client/app/assets/images/db-logos/csv.png","webpack:///./client/app/assets/images/db-logos/databend.png","webpack:///./client/app/assets/images/db-logos/databricks.png","webpack:///./client/app/assets/images/db-logos/db2.png","webpack:///./client/app/assets/images/db-logos/dgraph.png","webpack:///./client/app/assets/images/db-logos/drill.png","webpack:///./client/app/assets/images/db-logos/druid.png","webpack:///./client/app/assets/images/db-logos/e6data.png","webpack:///./client/app/assets/images/db-logos/elasticsearch.png","webpack:///./client/app/assets/images/db-logos/elasticsearch2.png","webpack:///./client/app/assets/images/db-logos/elasticsearch2_OpenDistroSQLElasticSearch.png","webpack:///./client/app/assets/images/db-logos/elasticsearch2_XPackSQLElasticSearch.png","webpack:///./client/app/assets/images/db-logos/exasol.png","webpack:///./client/app/assets/images/db-logos/excel.png","webpack:///./client/app/assets/images/db-logos/firebolt.png","webpack:///./client/app/assets/images/db-logos/google_analytics.png","webpack:///./client/app/assets/images/db-logos/google_analytics4.png","webpack:///./client/app/assets/images/db-logos/google_search_console.png","webpack:///./client/app/assets/images/db-logos/google_spreadsheets.png","webpack:///./client/app/assets/images/db-logos/graphite.png","webpack:///./client/app/assets/images/db-logos/hive.png","webpack:///./client/app/assets/images/db-logos/hive_http.png","webpack:///./client/app/assets/images/db-logos/ignite.png","webpack:///./client/app/assets/images/db-logos/impala.png","webpack:///./client/app/assets/images/db-logos/influxdb.png","webpack:///./client/app/assets/images/db-logos/influxdbv2.png","webpack:///./client/app/assets/images/db-logos/jirajql.png","webpack:///./client/app/assets/images/db-logos/json.png","webpack:///./client/app/assets/images/db-logos/kibana.png","webpack:///./client/app/assets/images/db-logos/kylin.png","webpack:///./client/app/assets/images/db-logos/mapd.png","webpack:///./client/app/assets/images/db-logos/memsql.png","webpack:///./client/app/assets/images/db-logos/mongodb.png","webpack:///./client/app/assets/images/db-logos/mssql.png","webpack:///./client/app/assets/images/db-logos/mssql_odbc.png","webpack:///./client/app/assets/images/db-logos/mysql.png","webpack:///./client/app/assets/images/db-logos/nz.png","webpack:///./client/app/assets/images/db-logos/oracle.png","webpack:///./client/app/assets/images/db-logos/pg.png","webpack:///./client/app/assets/images/db-logos/phoenix.png","webpack:///./client/app/assets/images/db-logos/pinot.png","webpack:///./client/app/assets/images/db-logos/presto.png","webpack:///./client/app/assets/images/db-logos/prometheus.png","webpack:///./client/app/assets/images/db-logos/python.png","webpack:///./client/app/assets/images/db-logos/rds_mysql.png","webpack:///./client/app/assets/images/db-logos/redshift.png","webpack:///./client/app/assets/images/db-logos/redshift_iam.png","webpack:///./client/app/assets/images/db-logos/results.png","webpack:///./client/app/assets/images/db-logos/risingwave.png","webpack:///./client/app/assets/images/db-logos/rockset.png","webpack:///./client/app/assets/images/db-logos/salesforce.png","webpack:///./client/app/assets/images/db-logos/scylla.png","webpack:///./client/app/assets/images/db-logos/snowflake.png","webpack:///./client/app/assets/images/db-logos/sparql_endpoint.png","webpack:///./client/app/assets/images/db-logos/sqlite.png","webpack:///./client/app/assets/images/db-logos/tinybird.png","webpack:///./client/app/assets/images/db-logos/treasuredata.png","webpack:///./client/app/assets/images/db-logos/trino.png","webpack:///./client/app/assets/images/db-logos/uptycs.png","webpack:///./client/app/assets/images/db-logos/url.png","webpack:///./client/app/assets/images/db-logos/vertica.png","webpack:///./client/app/assets/images/db-logos/yandex_appmetrika.png","webpack:///./client/app/assets/images/db-logos/yandex_disk.png","webpack:///./client/app/assets/images/db-logos/yandex_metrika.png","webpack:///./client/app/assets/images/destinations/asana.png","webpack:///./client/app/assets/images/destinations/chatwork.png","webpack:///./client/app/assets/images/destinations/datadog.png","webpack:///./client/app/assets/images/destinations/discord.png","webpack:///./client/app/assets/images/destinations/email.png","webpack:///./client/app/assets/images/destinations/hangouts_chat.png","webpack:///./client/app/assets/images/destinations/mattermost.png","webpack:///./client/app/assets/images/destinations/microsoft_teams_webhook.png","webpack:///./client/app/assets/images/destinations/pagerduty.png","webpack:///./client/app/assets/images/destinations/slack.png","webpack:///./client/app/assets/images/destinations/webex.png","webpack:///./client/app/assets/images/destinations/webhook.png","webpack:///./client/app/assets/images/favicon-16x16.png","webpack:///./client/app/assets/images/favicon-32x32.png","webpack:///./client/app/assets/images/favicon-96x96.png","webpack:///./client/app/assets/images/fixtures/map-tile.png","webpack:///./client/app/assets/images/google_logo.svg","webpack:///./client/app/assets/images/illustrations/alert.svg","webpack:///./client/app/assets/images/illustrations/dashboard.svg","webpack:///./client/app/assets/images/illustrations/no-query-results.svg","webpack:///./client/app/assets/images/illustrations/query.svg","webpack:///./client/app/assets/images/logo.png","webpack:///./client/app/assets/images/logo_white.png","webpack:///[\\\\/.]test[\\\\./]).)*\\.jsx","webpack:///./client/app/assets/less/main.less?eab9","webpack:///./client/app/assets/less/ant.less?da7c","webpack:///./client/app/components/Link.tsx","webpack:///./client/app/services/location.js","webpack:///./client/app/services/restoreSession.jsx","webpack:///./client/app/services/axios.js","webpack:///./client/app/services/auth.js","webpack:///./client/app/services/policy/index.js","webpack:///./client/app/services/policy/DefaultPolicy.js","webpack:///./client/app/services/organizationStatus.js","webpack:///./client/app/components/DynamicComponent.jsx","webpack:///./client/app/components/PlainButton.tsx","webpack:///./client/app/components/Tooltip.tsx","webpack:///./client/app/lib/hooks/useUniqueId.ts","webpack:///./client/app/lib/hooks/useLazyRef.ts","webpack:///./client/app/components/BigMessage.jsx","webpack:///./client/app/components/HelpTrigger.jsx","webpack:///./client/app/components/DialogWrapper.jsx","webpack:///./client/app/services/url.js","webpack:///./client/app/components/ApplicationArea/ErrorMessageDetails.jsx","webpack:///./client/app/components/ApplicationArea/ErrorMessage.jsx","webpack:///./client/app/components/ApplicationArea/Router.jsx","webpack:///./client/app/components/ApplicationArea/navigateTo.js","webpack:///./client/app/services/recordEvent.js","webpack:///./client/app/config/dashboard-grid-options.js","webpack:///./client/app/services/parameters/Parameter.js","webpack:///./client/app/services/parameters/TextParameter.js","webpack:///./client/app/services/parameters/NumberParameter.js","webpack:///./client/app/services/parameters/EnumParameter.js","webpack:///./client/app/services/query-result.js","webpack:///./client/app/lib/localOptions.js","webpack:///./client/app/services/query.js","webpack:///./client/app/services/parameters/QueryBasedDropdownParameter.js","webpack:///./client/app/services/parameters/DateParameter.js","webpack:///./client/app/services/parameters/DateRangeParameter.js","webpack:///./client/app/services/parameters/index.js","webpack:///./client/app/services/widget.js","webpack:///./client/app/services/dashboard.js","webpack:///./client/app/components/dashboards/CreateDashboardDialog.jsx","webpack:///./client/app/services/settingsMenu.js","webpack:///./client/app/components/ApplicationArea/ApplicationLayout/VersionInfo.jsx","webpack:///./client/app/components/ApplicationArea/ApplicationLayout/DesktopNavbar.jsx","webpack:///./client/app/components/ApplicationArea/ApplicationLayout/MobileNavbar.jsx","webpack:///./client/app/components/ApplicationArea/ApplicationLayout/index.jsx","webpack:///./client/app/components/ApplicationArea/routeWithUserSession.tsx","webpack:///./client/app/components/empty-state/EmptyState.jsx","webpack:///./client/app/services/notification.js","webpack:///./client/app/services/routes.ts","webpack:///./client/app/pages/home/components/FavoritesList.jsx","webpack:///./client/app/pages/home/Home.jsx","webpack:///./client/app/components/PageHeader/index.jsx","webpack:///./client/app/components/admin/Layout.jsx","webpack:///./client/app/components/FavoritesControl.jsx","webpack:///./client/app/components/proptypes.js","webpack:///./client/app/components/TimeAgo.jsx","webpack:///./client/app/lib/utils.js","webpack:///./client/app/components/items-list/components/ItemsTable.jsx","webpack:///./client/app/components/admin/RQStatus.jsx","webpack:///./client/app/pages/admin/Jobs.jsx","webpack:///./client/app/components/Paginator.jsx","webpack:///./client/app/components/tags-control/EditTagsDialog.jsx","webpack:///./client/app/components/tags-control/TagsControl.jsx","webpack:///./client/app/components/queries/SchedulePhrase.jsx","webpack:///./client/app/components/items-list/ItemsList.tsx","webpack:///./client/app/components/items-list/classes/Paginator.js","webpack:///./client/app/components/items-list/classes/Sorter.js","webpack:///./client/app/components/items-list/classes/ItemsFetcher.js","webpack:///./client/app/components/items-list/classes/ItemsSource.js","webpack:///./client/app/components/items-list/classes/StateStorage.js","webpack:///./client/app/components/items-list/components/LoadingState.jsx","webpack:///./client/app/pages/admin/OutdatedQueries.jsx","webpack:///./client/app/components/admin/StatusBlock.jsx","webpack:///./client/app/pages/admin/SystemStatus.jsx","webpack:///./client/app/services/alert.js","webpack:///./client/app/pages/alerts/AlertsList.jsx","webpack:///./client/app/pages/alert/components/MenuButton.jsx","webpack:///./client/app/pages/alert/components/Title.jsx","webpack:///./client/app/pages/alert/components/Criteria.jsx","webpack:///./client/app/pages/alert/components/Rearm.jsx","webpack:///./client/app/lib/hooks/useSearchResults.js","webpack:///./client/app/components/QuerySelector.jsx","webpack:///./client/app/pages/alert/components/Query.jsx","webpack:///./client/app/components/SelectItemsDialog.jsx","webpack:///./client/app/services/destination.js","webpack:///./client/app/services/alert-subscription.js","webpack:///./client/app/components/groups/ListItemAddon.jsx","webpack:///./client/app/components/EmailSettingsWarning.jsx","webpack:///./client/app/pages/alert/components/AlertDestinations.jsx","webpack:///./client/app/pages/alert/components/HorizontalFormItem.jsx","webpack:///./client/app/pages/alert/AlertView.jsx","webpack:///./client/app/pages/alert/components/NotificationTemplate.jsx","webpack:///./client/app/pages/alert/AlertEdit.jsx","webpack:///./client/app/pages/alert/AlertNew.jsx","webpack:///./client/app/pages/alert/Alert.jsx","webpack:///./client/app/services/getTags.js","webpack:///./client/app/components/TagsList.tsx","webpack:///./client/app/components/items-list/components/Sidebar.jsx","webpack:///./client/app/components/items-list/hooks/useItemsListExtraActions.js","webpack:///./client/app/components/layouts/ContentWithSidebar.jsx","webpack:///./client/app/components/NoTaggedObjectsFound.jsx","webpack:///./client/app/pages/dashboards/components/DashboardListEmptyState.tsx","webpack:///./client/app/pages/dashboards/DashboardList.jsx","webpack:///./client/app/services/KeyboardShortcuts.js","webpack:///./client/app/components/ParameterApplyButton.jsx","webpack:///./client/app/lib/calculateTextWidth.ts","webpack:///./client/app/components/SelectWithVirtualScroll.tsx","webpack:///./client/app/components/DateInput.jsx","webpack:///./client/app/components/DateTimeInput.jsx","webpack:///./client/app/components/dynamic-parameters/DynamicButton.jsx","webpack:///./client/app/components/dynamic-parameters/DynamicDatePicker.jsx","webpack:///./client/app/components/dynamic-parameters/DateParameter.jsx","webpack:///./client/app/components/DateRangeInput.jsx","webpack:///./client/app/components/DateTimeRangeInput.jsx","webpack:///./client/app/components/dynamic-parameters/DynamicDateRangePicker.jsx","webpack:///./client/app/components/dynamic-parameters/DateRangeParameter.jsx","webpack:///./client/app/components/QueryBasedParameterInput.jsx","webpack:///./client/app/components/ParameterValueInput.jsx","webpack:///./client/app/components/EditParameterSettingsDialog.jsx","webpack:///./client/app/components/Parameters.jsx","webpack:///./client/app/components/Timer.jsx","webpack:///./client/app/components/visualizations/VisualizationName.jsx","webpack:///./client/app/components/QueryLink.jsx","webpack:///./client/app/components/Filters.jsx","webpack:///./client/app/lib/useQueryResultData.js","webpack:///./client/app/lib/hooks/useImmutableCallback.js","webpack:///./client/app/components/visualizations/visualizationComponents.jsx","webpack:///./client/app/components/visualizations/VisualizationRenderer.jsx","webpack:///./client/app/components/dashboards/ExpandedWidgetDialog.jsx","webpack:///./client/app/components/ParameterMappingInput.jsx","webpack:///./client/app/components/dashboards/EditParameterMappingsDialog.jsx","webpack:///./client/app/components/dashboards/dashboard-widget/Widget.jsx","webpack:///./client/app/components/dashboards/dashboard-widget/VisualizationWidget.jsx","webpack:///./client/app/components/dashboards/TextboxDialog.jsx","webpack:///./client/app/components/dashboards/dashboard-widget/TextboxWidget.jsx","webpack:///./client/app/components/dashboards/dashboard-widget/RestrictedWidget.jsx","webpack:///./client/app/components/dashboards/AutoHeightController.js","webpack:///./client/app/components/dashboards/DashboardGrid.jsx","webpack:///./client/app/services/resizeObserver.js","webpack:///./client/app/components/dashboards/AddWidgetDialog.jsx","webpack:///./client/app/components/PreviewCard.jsx","webpack:///./client/app/services/sanitize.js","webpack:///./client/app/services/user.js","webpack:///./client/app/components/PermissionsEditorDialog/index.jsx","webpack:///./client/app/components/InputWithCopy.jsx","webpack:///./client/app/pages/dashboards/components/ShareDashboardDialog.jsx","webpack:///./client/app/lib/hooks/useFullscreenHandler.js","webpack:///./client/app/pages/dashboards/hooks/useRefreshRateHandler.js","webpack:///./client/app/pages/dashboards/hooks/useEditModeHandler.js","webpack:///./client/app/pages/dashboards/hooks/useDuplicateDashboard.js","webpack:///./client/app/pages/dashboards/hooks/useDashboard.js","webpack:///./client/app/components/EditInPlace.jsx","webpack:///./client/app/pages/dashboards/components/DashboardHeader.jsx","webpack:///./client/app/pages/dashboards/DashboardPage.jsx","webpack:///./client/app/components/ApplicationArea/routeWithApiKeySession.jsx","webpack:///./client/app/pages/dashboards/PublicDashboardPage.jsx","webpack:///./client/app/components/items-list/components/EmptyState.jsx","webpack:///./client/app/components/cards-list/CardsList.tsx","webpack:///./client/app/components/Collapse.jsx","webpack:///./client/app/components/dynamic-form/getFieldLabel.js","webpack:///./client/app/components/AceEditorInput.jsx","webpack:///./client/app/components/dynamic-form/fields/InputField.jsx","webpack:///./client/app/components/dynamic-form/DynamicFormField.jsx","webpack:///./client/app/components/dynamic-form/fields/CheckboxField.jsx","webpack:///./client/app/components/dynamic-form/fields/FileField.jsx","webpack:///./client/app/components/dynamic-form/fields/SelectField.jsx","webpack:///./client/app/components/dynamic-form/fields/NumberField.jsx","webpack:///./client/app/components/dynamic-form/fields/TextAreaField.jsx","webpack:///./client/app/components/dynamic-form/fields/AceEditorField.jsx","webpack:///./client/app/components/dynamic-form/fields/ContentField.jsx","webpack:///./client/app/components/dynamic-form/dynamicFormHelper.js","webpack:///./client/app/components/dynamic-form/DynamicForm.jsx","webpack:///./client/app/components/CreateSourceDialog.jsx","webpack:///./client/app/components/SettingsWrapper.jsx","webpack:///./client/app/services/data-source.js","webpack:///./client/app/pages/data-sources/DataSourcesList.jsx","webpack:///./client/app/pages/data-sources/EditDataSource.jsx","webpack:///./client/app/pages/destinations/DestinationsList.jsx","webpack:///./client/app/pages/destinations/EditDestination.jsx","webpack:///./client/app/components/groups/CreateGroupDialog.jsx","webpack:///./client/app/services/group.js","webpack:///./client/app/components/groups/DeleteGroupButton.jsx","webpack:///./client/app/pages/groups/GroupsList.jsx","webpack:///./client/app/components/groups/GroupName.jsx","webpack:///./client/app/components/groups/DetailsPageSidebar.jsx","webpack:///./client/app/pages/groups/GroupDataSources.jsx","webpack:///./client/app/pages/groups/GroupMembers.jsx","webpack:///./client/app/pages/queries-list/QueriesListEmptyState.jsx","webpack:///./client/app/pages/queries-list/QueriesList.jsx","webpack:///./client/app/components/Resizable/index.jsx","webpack:///./client/app/lib/queryFormat.ts","webpack:///./client/app/pages/queries/hooks/useQueryFlags.js","webpack:///./client/app/pages/queries/hooks/useArchiveQuery.jsx","webpack:///./client/app/pages/queries/hooks/useUpdateQuery.jsx","webpack:///./client/app/pages/queries/hooks/useDuplicateQuery.js","webpack:///./client/app/components/CodeBlock.jsx","webpack:///./client/app/components/queries/ApiKeyDialog/index.jsx","webpack:///./client/app/pages/queries/components/QueryPageHeader.jsx","webpack:///./client/app/pages/queries/hooks/useRenameQuery.js","webpack:///./client/app/pages/queries/hooks/useUpdateQueryTags.js","webpack:///./client/app/pages/queries/hooks/usePublishQuery.js","webpack:///./client/app/pages/queries/hooks/useUnpublishQuery.js","webpack:///./client/app/pages/queries/hooks/useApiKeyDialog.js","webpack:///./client/app/pages/queries/hooks/usePermissionsEditorDialog.js","webpack:///./client/app/pages/queries/components/QueryMetadata.jsx","webpack:///./client/app/pages/queries/components/QueryVisualizationTabs.jsx","webpack:///./client/app/pages/queries/components/QueryExecutionStatus.jsx","webpack:///./client/app/pages/queries/components/QuerySourceAlerts.jsx","webpack:///./client/app/pages/queries/components/wrapQueryPage.jsx","webpack:///./client/app/components/queries/AddToDashboardDialog.jsx","webpack:///./client/app/components/queries/EmbedQueryDialog.jsx","webpack:///./client/app/components/EditVisualizationButton/QueryResultsLink.jsx","webpack:///./client/app/components/EditVisualizationButton/QueryControlDropdown.jsx","webpack:///./client/app/components/EditVisualizationButton/index.jsx","webpack:///./client/app/pages/queries/components/QueryExecutionMetadata.jsx","webpack:///./client/app/pages/queries/hooks/useAddToDashboardDialog.js","webpack:///./client/app/pages/queries/hooks/useEmbedDialog.js","webpack:///./client/app/pages/queries/hooks/useDataSourceSchema.js","webpack:///./client/app/components/queries/SchemaBrowser.jsx","webpack:///./client/app/components/queries/QueryEditor/ace.js","webpack:///./client/app/services/query-snippet.js","webpack:///./client/app/components/queries/QueryEditor/AutocompleteToggle.jsx","webpack:///./client/app/components/queries/QueryEditor/AutoLimitCheckbox.jsx","webpack:///./client/app/components/queries/QueryEditor/QueryEditorControls.jsx","webpack:///./client/app/components/queries/QueryEditor/index.jsx","webpack:///./client/app/lib/accessibility.ts","webpack:///./client/app/services/databricks-data-source.js","webpack:///./client/app/components/queries/editor-components/databricks/useDatabricksSchema.js","webpack:///./client/app/components/queries/editor-components/databricks/DatabricksSchemaBrowser.jsx","webpack:///./client/app/components/queries/editor-components/editorComponents.js","webpack:///./client/app/pages/queries/hooks/useVisualizationTabHandler.js","webpack:///./client/app/pages/queries/hooks/useAutocompleteFlags.js","webpack:///./client/app/pages/queries/hooks/useAutoLimitFlags.js","webpack:///./client/app/components/queries/editor-components/index.js","webpack:///./client/app/services/notifications.js","webpack:///./client/app/pages/queries/hooks/useQueryExecute.js","webpack:///./client/app/pages/queries/hooks/useQueryParameters.js","webpack:///./client/app/components/queries/ScheduleDialog.jsx","webpack:///./client/app/pages/queries/hooks/useEditScheduleDialog.js","webpack:///./client/app/services/visualization.js","webpack:///./client/app/components/visualizations/EditVisualizationDialog.jsx","webpack:///./client/app/pages/queries/hooks/useEditVisualizationDialog.js","webpack:///./client/app/pages/queries/hooks/useDeleteVisualization.js","webpack:///./client/app/pages/queries/hooks/useUpdateQueryDescription.js","webpack:///./client/app/pages/queries/components/QuerySourceTypeIcon.jsx","webpack:///./client/app/pages/queries/components/QuerySourceDropdownItem.jsx","webpack:///./client/app/pages/queries/components/QuerySourceDropdown.jsx","webpack:///./client/app/pages/queries/QuerySource.jsx","webpack:///./client/app/pages/queries/hooks/useQuery.js","webpack:///./client/app/pages/queries/hooks/useQueryDataSources.js","webpack:///./client/app/pages/queries/hooks/useUnsavedChangesAlert.js","webpack:///./client/app/pages/queries/hooks/useAddNewParameterDialog.js","webpack:///./client/app/pages/queries/hooks/useAddVisualizationDialog.js","webpack:///./client/app/pages/queries/components/QueryViewButton.jsx","webpack:///./client/app/pages/queries/QueryView.jsx","webpack:///./client/app/pages/queries/VisualizationEmbed.jsx","webpack:///./client/app/components/query-snippets/QuerySnippetDialog.jsx","webpack:///./client/app/pages/query-snippets/QuerySnippetsList.jsx","webpack:///./client/app/services/organizationSettings.js","webpack:///./client/app/pages/settings/hooks/useOrganizationSettings.js","webpack:///./client/app/pages/settings/components/prop-types.js","webpack:///./client/app/pages/settings/components/GeneralSettings/FormatSettings.jsx","webpack:///./client/app/pages/settings/components/GeneralSettings/PlotlySettings.jsx","webpack:///./client/app/pages/settings/components/GeneralSettings/FeatureFlagsSettings.jsx","webpack:///./client/app/pages/settings/components/GeneralSettings/index.jsx","webpack:///./client/app/pages/settings/components/AuthSettings/PasswordLoginSettings.jsx","webpack:///./client/app/pages/settings/components/AuthSettings/GoogleLoginSettings.jsx","webpack:///./client/app/pages/settings/components/AuthSettings/SAMLSettings.jsx","webpack:///./client/app/pages/settings/components/AuthSettings/index.jsx","webpack:///./client/app/pages/settings/OrganizationSettings.jsx","webpack:///./client/app/styles/formStyle.ts","webpack:///./client/app/services/utils.js","webpack:///./client/app/pages/users/components/CreateUserDialog.jsx","webpack:///./client/app/pages/users/UsersList.jsx","webpack:///./client/app/components/UserGroups.jsx","webpack:///./client/app/pages/users/hooks/useUserGroups.js","webpack:///./client/app/pages/users/components/UserInfoForm.jsx","webpack:///./client/app/pages/users/components/ApiKeyForm.jsx","webpack:///./client/app/pages/users/components/PasswordForm/ChangePasswordDialog.jsx","webpack:///./client/app/pages/users/components/PasswordForm/PasswordLinkAlert.jsx","webpack:///./client/app/pages/users/components/PasswordForm/PasswordResetForm.jsx","webpack:///./client/app/pages/users/components/PasswordForm/ResendInvitationForm.jsx","webpack:///./client/app/pages/users/components/PasswordForm/index.jsx","webpack:///./client/app/pages/users/components/ToggleUserForm.jsx","webpack:///./client/app/pages/users/components/EditableUserProfile.jsx","webpack:///./client/app/pages/users/components/ReadOnlyUserProfile.jsx","webpack:///./client/app/pages/users/UserProfile.jsx","webpack:///./client/app/config/index.js","webpack:///./client/app/components/ApplicationArea/handleNavigationIntent.js","webpack:///./client/app/config/antd-spinner.jsx","webpack:///./client/app/services/offline-listener.js","webpack:///./client/app/index.js","webpack:///./client/app/components/ApplicationArea/index.jsx","webpack:///./client/app/assets/images/avatar.svg"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","map","webpackContext","req","id","webpackContextResolve","e","Error","code","keys","resolve","webpackEmptyContext","Link","_ref2","children","props","_objectWithoutProperties","_excluded2","React","createElement","Component","ButtonLink","_ref","_excluded","WithIcon","_ref3","icon","alt","_excluded3","className","External","_ref4","_ref4$icon","aria-hidden","_ref4$alt","_excluded4","_extends","target","rel","Button","history","createBrowserHistory","normalizeLocation","rawLocation","pathname","search","hash","path","mapValues","qs","parse","isNil","trimStart","url","concat","location","listen","handler","isFunction","unused","action","confirmChange","block","nextLocation","update","newLocation","replace","arguments","undefined","isObject","omitBy","isUndefined","extend","stringify","setPath","setSearch","setHash","locationChanged","showRestoreSessionPrompt","loginUrl","onSuccess","popup","Modal","warning","content","okText","Fragment","centered","mask","maskClosable","keyboard","onOk","closeModal","closed","width","height","windowLeft","windowTop","windowWidth","windowHeight","popupOptions","_objectSpread","screenX","screenY","innerWidth","innerHeight","left","Math","floor","top","menubar","toolbar","resizable","scrollbars","status","open","join","handlePostMessage","event","type","close","removeEventListener","addEventListener","focus","restoreSessionPromise","axios","axiosLib","paramsSerializer","params","xsrfCookieName","xsrfHeaderName","interceptors","response","use","createAuthRefreshInterceptor","error","message","isAxiosError","includes","Promise","reject","statusCodes","parseInt","requestUrl","Auth","getLoginUrl","pauseInstanceWhileRefreshing","request","config","apiKey","getApiKey","headers","Authorization","currentUser","_isAdmin","canEdit","userId","user_id","user","this","isAdmin","canCreate","hasPermission","permission","permissions","clientConfig","messages","logger","debug","session","loaded","AuthUrls","Login","updateSession","sessionData","client_config","isAuthenticated","setLoginUrl","login","next","encodeURI","href","logout","loadSession","setApiKey","then","loadConfig","requireSession","opener","postMessage","origin","catch","policy","refresh","canCreateDataSource","isCreateDataSourceEnabled","canCreateDestination","isCreateDestinationEnabled","canCreateDashboard","isCreateDashboardEnabled","canCreateAlert","canCreateUser","isCreateUserEnabled","isCreateQuerySnippetEnabled","getDashboardRefreshIntervals","dashboardRefreshIntervals","isArray","getQueryRefreshIntervals","queryRefreshIntervals","canRun","constructor","objectCounters","object_counters","componentsRegistry","Map","activeInstances","Set","registerComponent","component","isString","set","forEach","dynamicComponent","forceUpdate","DynamicComponent","componentDidMount","add","componentWillUnmount","delete","render","_this$props","fallback","RealComponent","_defineProperty","PropTypes","string","isRequired","node","PlainButton","rest","classNames","Tooltip","title","restProps","liveTitle","role","aria-live","aria-relevant","AntTooltip","trigger","useUniqueId","prefix","getInitialValue","lazyRef","uniqueId","useRef","current","BigMessage","messageId","aria-labelledby","cx","propTypes","defaultProps","TYPES","HOME","VALUE_SOURCE_OPTIONS","SHARE_DASHBOARD","AUTHENTICATION_OPTIONS","DS_ATHENA","DS_BIGQUERY","DS_URL","DS_MONGODB","DS_GOOGLE_SPREADSHEETS","DS_GOOGLE_ANALYTICS","DS_AXIBASETSD","DS_RESULTS","ALERT_SETUP","MAIL_CONFIG","ALERT_NOTIF_TEMPLATE_GUIDE","FAVORITES","MANAGE_PERMISSIONS","NUMBER_FORMAT_SPECS","GETTING_STARTED","DASHBOARDS","QUERIES","ALERTS","_slicedToArray","DOMAIN","HelpTriggerPropTypes","showTooltip","bool","renderAsLink","HelpTriggerDefaultProps","HelpTrigger","types","_class","allowedDomains","drawerClassName","createRef","visible","loading","currentUrl","clearTimeout","iframeLoadingTimeout","setState","iframeRef","src","setTimeout","some","domain","startsWith","helpTriggerType","shiftKey","ctrlKey","metaKey","preventDefault","loadIframe","getUrl","onPostMessageReceived","targetUrl","tooltip","state","isAllowedDomain","shouldRenderAsLink","style","marginLeft","onClick","openDrawer","Drawer","placement","closable","onClose","closeDrawer","destroyOnClose","CloseOutlinedIcon","ref","ready","onLoad","onIframeLoaded","onLeave","openPageUrl","oneOf","helpTriggerWithTypes","DialogPropType","shape","func","onCancel","afterClose","dismiss","wrap","DialogComponent","showModal","dialog","okButtonProps","cancelButtonProps","pendingCloseTask","handlers","onDismiss","container","document","ReactDOM","processDialogClose","setAdditionalDialogProps","disabled","finally","closeDialog","dismissDialog","body","appendChild","unmountComponentAtNode","removeChild","newProps","openDialog","link","display","fragmentProps","setAttribute","pick","fragments","normalize","ErrorMessageDetails","getErrorMessageByStatus","defaultMessage","getErrorMessage","ErrorMessage","console","errorDetailsProps","data-test","instanceOf","CurrentRouteContext","createContext","stripBase","baseHref","trimEnd","substr","Router","routes","onRouteChange","_useState2","useState","currentRoute","setCurrentRoute","currentPathRef","errorHandlerRef","useEffect","isAbandoned","router","UniversalRouter","resolveRoute","routeParams","route","reset","random","toString","unlisten","Provider","ErrorBoundary","renderError","navigateTo","arrayOf","objectOf","any","events","post","debounce","eventsToSend","recordEvent","objectType","objectId","additionalProperties","object_type","object_id","timestamp","Date","now","screen_resolution","screen","Parameter","parameter","parentQueryId","global","locals","urlPrefix","param","extra","getExecutionValue","setValue","isNull","normalizedValue","pendingValue","isEqual","$$value","isEmptyValue","normalizeValue","updateLocals","each","local","clearPendingValue","setPendingValue","applyPendingValue","hasPendingValue","toUrlParams","isEmpty","fromUrlParams","query","has","toQueryTextFragment","toSaveableObject","omit","TextParameter","super","NumberParameter","toNumber","isNaN","EnumParameter","enumOptions","multiValuesOptions","enumOptionsArray","split","intersection","joinListValues","separator","suffix","parameterValues","v","urlParam","JSON","valueFromJson","filterTypes","getColumnFriendlyName","column","typeSplit","indexOf","parts","getColumnNameWithoutType","a","toUpperCase","QueryResultResource","createOrSaveUrl","ExecutionStatus","statuses","1","2","3","4","handleErrorResponse","queryResult","job","sleep","ms","fetchDataFromJob","jobId","interval","QueryResult","deferred","onStatusChange","promise","query_result","updatedAt","moment","isLoadingResult","columnTypes","rows","row","forOwn","k","newType","isNumber","isValid","test","isDateTime","match","utc","columns","QueryResultError","getId","cancelExecution","getStatus","getError","getLog","log","getUpdatedAt","retrieved_at","updated_at","getRuntime","runtime","getRawData","getData","getColumns","getColumnNames","columnNames","getColumnFriendlyNames","col","getTruncated","truncated","getFilters","filters","filter","friendlyName","values","multiple","uniqBy","isMoment","unix","toPromise","statusCallback","queryId","loadLatestCachedResult","parameters","loadResult","tryCount","query_result_id","pow","refreshStatus","tryNumber","jobResponse","getLink","fileType","getName","queryName","format","applyAutoLimit","maxAge","apply_auto_limit","max_age","dataSourceId","data_source_id","query_id","PREFIX","defaultValue","fullKey","localStorage","getItem","setItem","Mustache","escape","identity","Query","options","isNew","hasDailySchedule","schedule","scheduleInLocalTime","hour","minute","hasResult","latest_query_data","latest_query_data_id","paramsRequired","getParameters","hasParameters","getParametersDefs","prepareQueryResultExecution","execute","missingParams","getMissing","paramsWord","valuesWord","getById","getQueryResult","getByQueryId","getExecutionValues","getAutoLimit","getQueryResultByText","selectedQueryText","queryText","source","encodeURIComponent","getQueryResultPromise","$parameters","Parameters","favorite","unfavorite","clone","newQuery","queryString","updateParameters","initFromQueryString","parseQuery","uniq","collectParams","part","union","cachedQueryText","parameterNames","parametersMap","createParameter","find","parameterDef","zipObject","hasPendingValues","applyPendingValues","errorMessage","getQuery","mapResults","results","QueryService","save","saveOrCreateUrl","recent","archive","myQueries","fork","resultById","asDropdown","associatedDropdown","dropdownQueryId","favorites","localOptions","tags","can_edit","QueryBasedDropdownParameter","loadDropdownValues","DATETIME_FORMATS","date","DYNAMIC_DATES","yesterday","subtract","DynamicDateType","isDynamicDateString","substring","isDynamicDate","getDynamicDateFromString","DateParameter","useCurrentDateTime","findKey","hasDynamicValue","untilNow","from","withNow","DYNAMIC_DATE_RANGES","today","startOf","endOf","this_week","this_month","this_year","last_week","last_month","last_year","last_hour","last_8_hours","last_24_hours","last_7_days","last_14_days","last_30_days","last_60_days","last_90_days","last_12_months","DynamicDateRangeType","isDynamicDateRangeString","isDynamicDateRange","getDynamicDateRangeFromString","DateRangeParameter","start","end","_this$normalizedValue2","keyStart","keyEnd","dates","cloneParameter","WidgetTypeEnum","ParameterMappingType","DashboardLevel","WidgetLevel","StaticValue","Widget","visualizationOptions","widget","autoHeight","sizeX","round","dashboardGridOptions","sizeY","minSizeX","maxSizeX","minSizeY","maxSizeY","visualization","registeredVisualizations","minColumns","isFinite","maxColumns","min","ceil","minRows","maxRows","defaultWidth","defaultColumns","defaultHeight","defaultRows","calculatePositionOptions","position","restricted","truncate","text","load","force","refreshStartedAt","merge","isStaticParam","getParameterMappings","MappingType","mappings","queryParams","localTypes","localParameters","mapping","sortBy","paramOrder","size","parameterMappings","existingParams","mapTo","removedParams","difference","getLocalParameters","urlForDashboard","slug","collectDashboardFilters","dashboard","queryResults","urlParams","_","queryFilters","queryFilter","hasQueryStringValue","dashboard_filters_enabled","prepareWidgetsForDashboard","widgets","defaultWidgetSizeY","max","chain","w","groupBy","reduce","widgetsAtRow","calculateNewWidgetPosition","existingWidgets","newWidget","bottomLine","right","bottom","item","to","Array","constant","range","first","Dashboard","prepareDashboardWidgets","transformSingle","publicAccessEnabled","public_url","transformResponse","DashboardService","legacy","getByToken","token","myDashboards","_ref5","_ref6","_ref7","CreateDashboardDialog","setName","_useState4","setIsValid","_useState6","saveInProgress","setSaveInProgress","footer","cancelText","wrapProps","Input","onChange","trim","onPressEnter","placeholder","aria-label","autoFocus","globalParams","resultingGlobalParams","globalParamOrder","addWidget","textOrVisualization","dashboard_id","isHidden","visualization_id","wrapDialog","SettingsMenuItem","menuItem","pathPrefix","isActive","isAvailable","remove","items","getAvailableItems","getActiveItem","strippedPath","VersionInfo","version","frontendVersion","NavbarSection","Menu","selectable","theme","useNavbarActiveState","useContext","useMemo","dashboards","queries","dataSources","alerts","DesktopNavbar","firstSettingsTab","settingsMenu","activeState","canCreateQuery","logoUrl","Item","DesktopOutlinedIcon","CodeOutlinedIcon","AlertOutlinedIcon","SubMenu","popupClassName","tabIndex","PlusOutlinedIcon","QuestionCircleOutlinedIcon","SettingOutlinedIcon","profile_image_url","Divider","MobileNavbar","getPopupContainer","Dropdown","overlayStyle","minWidth","overlay","ghost","MenuOutlinedIcon","ApplicationLayout","mobileNavbarContainerRef","getMobileNavbarPopupContainer","useCallback","UserSessionWrapper","bodyClass","setIsAuthenticated","isCancelled","all","organizationStatus","classList","toggle","ErrorBoundaryContext","Consumer","handleError","pageTitle","onError","routeWithUserSession","originalRender","Step","show","completed","urlText","commonProps","done","EmptyStateHelpMessage","EmptyState","header","description","illustration","helpMessage","onboardingMode","showAlertStep","showDashboardStep","showDataSourceStep","showInviteStep","getStepsItems","illustrationPath","dataSource","alert","inviteUsers","isCompleted","data_sources","users","showCreateDashboardDialog","step","defaultStepsItems","stepsItems","imageSource","urlTarget","getStepItems","notification","duration","simpleNotification","_sorted","_items","getRouteParamsCount","tokens","pathToRegexp","register","idOrNull","unregister","FavoriteList","resource","itemUrl","emptyState","setItems","setLoading","LoadingOutlinedIcon","is_draft","DashboardAndQueryFavoritesList","DeprecatedEmbedFeatureAlert","Alert","EmailNotVerifiedAlert","verifyEmail","success","Home","pageProps","PageHeader","actions","Layout","activeTab","selectedKeys","FavoritesControl","toggleItem","callback","is_favorite","savedIsFavorite","syntax","doc","doc_url","type_name","Table","RefreshScheduleType","number","time","day_of_week","until","RefreshScheduleDefault","UserProfile","email","profileImageUrl","isDisabled","Destination","created_at","queryHash","is_safe","is_archived","api_key","AlertOptions","op","oneOfType","custom_subject","custom_body","last_triggered_at","rearm","checkMoment","propName","componentName","isRequiredValid","isOptionalValid","Moment","TimeAgo","autoUpdate","variation","startDate","toMoment","dateTimeFormat","fromNow","timer","setInterval","clearInterval","IntervalEnum","NEVER","SECONDS","MINUTES","HOURS","DAYS","WEEKS","MILLISECONDS","formatDateTimeValue","parsed","formatDateTime","formatDate","dateFormat","localizeTime","_time$split2","hrs","mins","secondsToInterval","count","pluralize","durationHumanize","durationInSeconds","ret","_secondsToInterval","rounded","omitSingleValueNumber","toHuman","formatNumber","fractionDigits","toFixed","prettySizeWithUnit","bytes","divisor","units","parseFloat","unit","greatestDivisor","prettyNumberWithUnit","prettySize","_prettySizeWithUnit","formatColumnValue","columnType","sortable","sorter","Columns","overrides","avatar","formatTitle","dateTime","timeAgo","timeAgoCustomProps","custom","ItemsTable","record","rowKey","prepareColumns","orderByField","orderByReverse","toggleSorting","orderByDirection","field","index","onHeaderCell","dataIndex","defaultSortOrder","tableDataProps","onTableRow","onRowClick","showHeader","Skeleton","active","paragraph","indicator","getRowKey","pagination","onRow","CounterCard","Spin","spinning","Card","queryJobsColumns","scheduled","otherJobsColumns","workersColumns","Badge","busy","idle","started","suspended","toLowerCase","queuesColumns","TablePropTypes","WorkersTable","defaultPageSize","pageSizeOptions","showSizeChanger","QueuesTable","QueryJobsTable","OtherJobsTable","Jobs","isLoading","queueCounters","overallCounters","queued","startedJobs","workers","processQueues","_refreshTimer","queues","q","flatMap","queue","enqueued_at","started_at","_this$state","_partition2","partition","startedQueryJobs","otherStartedJobs","Grid","gutter","span","Tabs","activeKey","onTabClick","newTab","animated","TabPane","tab","Paginator","page","showPageSizeSelect","pageSize","onPageSizeChange","totalCount","Pagination","onShowSizeChange","defaultCurrent","total","EditTagsDialog","getAvailableTags","availableTags","setAvailableTags","setIsLoading","setValues","_useState8","selectRef","setSelectRef","compact","Select","tag","Option","TagsControl","onEdit","renderEditButton","editTags","tagSeparator","tagsExtra","modelTagsControl","archivedTooltip","ModelTagsControl","isDraft","isArchived","QueryTagsControl","DashboardTagsControl","SchedulePhrase","seconds","humanized","short","full","_this$props$schedule","dayOfWeek","_this$content","isLink","ControllerType","isLoaded","searchTerm","updateSearch","selectedTags","array","updateSelectedTags","itemsPerPage","totalItemsCount","pageItems","updatePagination","WrappedComponent","createItemsSource","createStateStorage","ItemsListWrapper","stateStorage","itemsSource","_itemsSource","getState","validate","getCallbackContext","onBeforeUpdate","onAfterUpdate","initialState","controller","hoistNonReactStatics","setPage","totalPages","setItemsPerPage","setTotalCount","_ref$validate","getItemsForPage","last","compile","reverse","compiled","Sorter","_parse","setField","setReverse","sortByIteratees","toggleField","sort","customIteratee","ItemsFetcher","_getRequest","context","_originalGetRequest","_processResults","_originalProcessResults","getRequest","doRequest","processResults","_originalDoRequest","fetch","changes","PlainListFetcher","paginator","_allItems","allResults","sorting","PaginatedListFetcher","page_size","order","ItemsSource","_beforeUpdate","_afterUpdate","_changed","_paginator","_sorter","_searchTerm","_selectedTags","customParams","setCustomParams","fetchToken","_currentFetchToken","_fetcher","_pageItems","_params","_ref2$isPlainList","isPlainList","_ref2$sortByIteratees","defaultState","_this$_paginator","prevPage","prevItemsPerPage","_savedOrderByField","allItems","ResourceItemsSource","getResource","getItemProcessor","processItem","StateStorage","_state","defaults","UrlStateStorage","defaultOrderBy","compileOrderBy","_parseOrderBy","parseOrderBy","LoadingState","OutdatedQueries","_this","align","isInitialCall","_updateTimer","currentPage","htmlFor","autoUpdateSwitchId","Switch","checked","lastUpdatedAt","listColumns","OutdatedQueriesPage","itemsList","General","info","toPairs","List","itemLayout","renderItem","DatabaseMetrics","Queues","_ref8","_ref9","Manager","_ref10","lastRefreshAt","startedAt","outdatedQueriesCount","SystemStatus","manager","databaseMetrics","last_refresh_at","outdated_queries_count","database_metrics","metrics","StatusBlock","normalizeCondition","equals","newData","destination_id","destinations","transformRequest","mute","unmute","STATE_CLASS","unknown","ok","triggered","AlertsList","muted","toUpper","AlertsListPage","MenuButton","doDelete","confirmDelete","confirm","okType","autoFocusButton","EllipsisOutlinedIcon","rotate","Title","editMode","defaultName","getDefaultName","AlertType","CONDITIONS","VALID_STRING_CONDITIONS","DisabledInput","Criteria","resultValues","alertOptions","columnValue","head","invalidMessage","columnHint","dropdownMatchSelectWidth","optionLabelProp","label","WarningFilledIcon","AlertOptionsType","DURATIONS","RearmByDuration","durationIdx","setDurationIdx","setCount","durValue","plural","InputNumber","newCount","precision","newIdx","idx","toLower","RearmEditor","selected","setSelected","newSelected","RearmViewer","phrase","Rearm","useSearchResults","_ref$initialResults","initialResults","_ref$debounceTimeout","debounceTimeout","_useState","setResult","_useState3","currentSearchTerm","isDestroyed","_useDebouncedCallback","useDebouncedCallback","_useDebouncedCallback2","doSearch","term","QuerySelector","setSearchTerm","selectedQuery","setSelectedQuery","_useSearchResults2","searchResults","searching","clearIcon","selectQuery","spinIcon","hidden","suffixIcon","showSearch","onSearch","notFoundContent","filterOption","defaultActiveFirstOption","readOnly","maxHeight","marginTop","inactive","QueryFormItem","queryHint","QuestionCircleTwoToneIcon","ItemsList","onItemClick","renderListItem","_renderItem","SelectItemsDialog","dialogTitle","inputPlaceholder","itemKey","renderStagedItem","searchItems","selectedItemsTitle","showCount","extraFooterContent","selectedItems","setSelectedItems","hasResults","isItemSelected","textAlign","color","Search","minHeight","isSelected","QueryType","IMG_ROOT","AlertSubscription","alertId","alert_id","ListItemAddon","isStaged","alreadyInGroup","deselectedIcon","EmailSettingsWarning","featureName","adminOnly","messageDescriptionId","mailSettingsMissing","arrowPointAtCenter","aria-describedby","normalizeSub","sub","destination","ListItem","_ref$destination","unsubscribe","canUnsubscribe","mouseEnterDelay","DestinationType","UserType","AlertDestinations","dests","subs","promises","subscribe","dest","without","DestinationService","currentUserEmailSub","filteredSubs","showAddAlertSubDialog","onUserEmailToggle","HorizontalFormItem","wrapperCol","offset","Form","labelCol","AlertState","lastTriggered","AlertView","unmuting","menuButton","xs","md","AntAlert","NotificationTemplate","subject","setSubject","setBody","hasContent","enabled","setEnabled","showPreview","setShowPreview","renderData","topValue","ALERT_STATUS","ALERT_CONDITION","ALERT_THRESHOLD","ALERT_NAME","ALERT_URL","QUERY_NAME","QUERY_URL","QUERY_RESULT_VALUE","QUERY_RESULT_ROWS","QUERY_RESULT_COLS","normalizeCustomTemplateData","tmpl","TextArea","autoSize","AlertEdit","saving","_isMounted","cancel","pendingRearm","onNotificationTemplateChange","_this$props2","onQuerySelected","onNameChange","onRearmChange","onCriteriaChange","AlertNew","MODES","NEW","VIEW","EDIT","defaultNameBuilder","template","AlertService","setAlertOptions","obj","warn","_this$state2","edit","processTags","getTags","TagsList","tagsUrl","_ref$showUnselectAll","showUnselectAll","onUpdate","allTags","setAllTags","setSelectedTags","toggleTag","newSelectedTags","unselectAll","SearchInput","showIcon","currentValue","setCurrentValue","onInputChange","newValue","InputControl","AntdMenu","MenuIcon","ProfileImage","Tags","unselectAllButtonTitle","useItemsListExtraActions","ExtraActionsComponent","actionsState","setActionsState","areAllItemsSelected","toggleAllItems","checkboxColumn","Checkbox","onStateChange","areExtraActionsAvailable","Sidebar","Content","_ref3$className","NoTaggedObjectsFound","DashboardListEmptyState","my_msg","sidebarMenu","DashboardListExtraActions","DashboardList","_useItemsListExtraAct","tableColumns","DashboardListPage","my","modKey","navigator","platform","altKey","onShortcut","shortcut","retunValue","fn","KeyboardShortcuts","keymap","Mousetrap","bindGlobal","unbind","ParameterApplyButton","paramCount","data-show","canvas","SelectWithVirtualScroll","largestOpt","maxBy","ctx","getContext","containerStyle","getComputedStyle","font","fontSize","fontFamily","textMetrics","measureText","actualWidth","abs","actualBoundingBoxLeft","actualBoundingBoxRight","calculateTextWidth","AntdSelect","allowClear","optionFilterProp","DateInput","forwardRef","onSelect","additionalAttributes","DatePicker","DateTimeInput","withSeconds","showTime","Text","Typography","DynamicButton","selectedDynamicValue","staticValueLabel","menu","findIndex","option","ArrowLeftOutlinedIcon","containerRef","stopPropagation","ThunderboltTwoToneIcon","ThunderboltOutlinedIcon","DynamicDatePicker","dynamicValue","parameterValue","dateComponentRef","dateOptions","dynamicButtonOptions","DateComponent","dynamicDate","onDynamicValueSelect","DYNAMIC_DATE_OPTIONS","RangePicker","DateRangeInput","DateTimeRangeInput","DynamicDateRangePicker","dateRangeComponentRef","dateRangeOptions","isDateTimeRange","DateRangeComponent","isValidDateRangeValue","DYNAMIC_DATETIME_OPTIONS","_regeneratorRuntime","Op","hasOwn","desc","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","define","configurable","writable","err","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","Context","makeInvokeMethod","tryCatch","arg","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","__await","unwrapped","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","return","TypeError","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iterable","iteratorMethod","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","val","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","input","hint","prim","toPrimitive","res","String","Number","_toPrimitive","_toPropertyKey","QueryBasedParameterInput","_loadOptions","componentDidUpdate","prevProps","optionValues","validValues","_context","updatedValue","otherProps","showArrow","multipleValuesProps","maxTagCount","maxTagTextLength","maxTagPlaceholder","num","ParameterValueInput","isDirty","renderDateParameter","renderDateRangeParameter","_this$props3","renderEnumInput","_this$props4","opt","renderQueryBasedInput","_this$props5","renderNumberInput","renderTextInput","renderInput","data-dirty","formItemProps","getDefaultTitle","capitalize","words","NameInput","existingNames","setValidation","helpText","validateStatus","isTypeDateRange","required","help","EditParameterSettingsDialog","setParam","isNameValid","setIsNameValid","initialQuery","setInitialQuery","paramFormId","htmlType","form","layout","onFinish","colon","defaultChecked","quoteOption","updateUrl","str","disableUrlUpdate","parametersChanged","disableUrlUpdateChanged","keyCode","applyChanges","onPendingValuesChange","oldIndex","newIndex","onParametersEdit","onValuesChange","parametersWithPendingValues","updated","updatedParameter","matches","matchAll","hideValues","renderParameter","toCamelCase","editable","showParameterSettings","appendSortableToParent","dirtyParamCount","SortableContainer","axis","useDragHandle","lockToContainerEdges","helperClass","helperContainer","containerEl","updateBeforeSortStart","onBeforeSortStart","onSortEnd","moveParameter","containerProps","onKeyDown","handleKeyDown","SortableElement","data-editable","DragHandle","Timer","startTime","valueOf","diff","VisualizationName","VisualizationType","QueryLink","ALL_VALUES","FilterType","FiltersType","filterData","every","rowValue","filterValues","filterValue","isSame","Filters","_values","f","createFilterChangeHandler","labelInValue","OptGroup","useQueryResultData","queryResultStatus","retrievedAt","metadata","getQueryResultData","useImmutableCallback","callbackRef","noop","wrapComponentWithSettings","updateVisualizationsSettings","HelpTriggerComponent","LinkComponent","choroplethAvailableMaps","countries","countriesDataUrl","fieldNames","name_long","abbrev","iso_a2","iso_a3","iso_n3","usa","usaDataUrl","ns_code","geoid","usps_abbrev","fips_code","subdiv_japan","subdivJapanDataUrl","name_alt","name_local","iso_3166_2","postal","type_en","region","region_code","Renderer","VisRenderer","Editor","VisEditor","combineFilters","localFilters","globalFilters","localFilter","globalFilter","VisualizationRenderer","setFilters","filtersRef","handleFiltersChange","newFilters","b","fromPairs","onFiltersChange","filteredData","showFilters","paginationSize","visualizationName","addonBefore","ExpandedWidgetDialog","editableMappingsToParameterMappings","synchronizeWidgetTitles","sourceMappings","affectedWidgets","sourceMapping","widgetMappings","widgetMapping","ParameterMappingInput","existingParamNames","updateParamMapping","newMapping","renderMappingTypeSelector","noExisting","Radio","Group","updateSourceType","QuestionCircleFilledIcon","renderDashboardAddNew","renderDashboardMapToExisting","paramName","renderStaticValue","renderInputBlock","inputError","_this$renderInputBloc2","visibility","MappingEditor","hide","renderContent","Popover","onVisibleChange","EditOutlinedIcon","TitleEditor","showPopup","getMappingTitle","renderPopover","paramTitle","onEditingTitleChange","maxLength","CheckOutlinedIcon","onPopupVisibleChange","ParameterMappingListInput","getStringValue","mappedTo","Tag","oldMapping","Column","getDefaultValue","existingParamsNames","getSourceTypeLabel","getParamValuesSnapshot","dashboardParameters","EditParameterMappingsDialog","existingParameterNames","alreadyExists","parameterMappingsToEditableMappings","originalParamValuesSnapshot","saveWidget","newMappings","valuesChanged","isMatch","widgetsToSave","updateParamMappings","WidgetDropdownButton","extraOptions","showDeleteOption","onDelete","WidgetMenu","WidgetDeleteButton","isPublic","menuOptions","tileProps","showDropdownButton","deleteWidget","visualizationWidgetMenuOptions","canEditDashboard","canViewQuery","canEditParameters","widgetQueryResult","isQueryResultEmpty","downloadLink","downloadName","download","RefreshIndicator","VisualizationWidgetHeader","isEditing","onParametersUpdate","HtmlContent","markdown","toHTML","VisualizationWidgetFooter","onRefresh","onExpand","refreshClickButtonId","setRefreshClickButtonId","refreshWidget","buttonId","VisualizationWidget","onParameterMappingsChange","renderVisualization","onLocalFiltersChange","isRefreshing","editParameterMappings","expandWidget","TextboxDialog","setText","preview","setPreview","updatePreview","handleInputChange","confirmDialogDismiss","originalText","dashed","TextboxWidget","TextboxMenuOptions","editTextBox","newText","RestrictedWidget","WIDGET_CONTENT_SELECTOR","AutoHeightController","selector","widgetEl","querySelector","els","querySelectorAll","acc","el","getBoundingClientRect","exists","_this$widgets$id","getHeight","prevHeight","onHeightChange","checkHeightChanges","newWidgetIds","ResponsiveGridLayout","WidthProvider","Responsive","WidgetType","SINGLE","MULTI","DashboardWidget","memo","onLoadWidget","onRefreshWidget","onRemoveWidget","nextProps","DashboardGrid","pos","x","y","h","minW","maxW","minH","maxH","layouts","offsetWidth","cfg","normalized","keyBy","normalizeTo","onLayoutChange","onBreakpointChange","widgetId","newHeight","cloneDeep","oldItem","newItem","autoHeightCtrl","resume","disableAnimations","onWidgetHeightUpdated","destroy","draggableCancel","cols","rowHeight","margin","isDraggable","isResizable","onResizeStart","onResizeStop","onWidgetResize","breakpoints","data-grid","normalizeFrom","data-widgetid","checkItems","bounds","observe","shouldTrigger","VisualizationSelect","visualizationGroups","visualizations","vizSelectId","handleChange","visualizationId","selectedVisualization","groupKey","AddWidgetDialog","setSelectedVisualization","setParameterMappings","parameterMappingsId","PreviewCard","imageUrl","roundedImage","UserPreviewCard","withLink","DataSourcePreviewCard","DOMPurify","setConfig","ADD_ATTR","addHook","getAttribute","removeAttribute","disableResource","User","enableUser","userName","sanitize","is_disabled","disableUser","deleteUser","convertUserInfo","groupIds","groups","isInvitationPending","is_invitation_pending","regenerateApiKey","sendPasswordReset","reset_link","resendInvitation","invite_link","PermissionsEditorDialogHeader","UserSelect","shouldShowUser","loadingUsers","setLoadingUsers","setUsers","debouncedSearchUsers","searchUsers","parentNode","PermissionsEditorDialog","author","aclUrl","loadingGrantees","setLoadingGrantees","_useState10","grantees","setGrantees","_useGrantees","loadGrantees","resultGrantees","accessType","grantee","addPermission","access_type","removePermission","loadUsersWithPermissions","userHasPermission","InputWithCopy","select","execCommand","copied","resetCopyState","copyFeatureSupported","queryCommandSupported","copyButton","copy","CopyOutlinedIcon","addonAfter","ShareDashboardDialog","marginBottom","apiUrl","enableAccess","disableAccess","hasOnlySafeQueries","headerContent","useFullscreenHandler","fullscreen","setFullscreen","toggleFullscreen","getLimitedRefreshRate","refreshRate","allowedIntervals","useRefreshRateHandler","refreshDashboard","getRefreshRateFromUrl","setRefreshRate","doRefreshDashboard","refreshTimer","rate","DashboardStatusEnum","useEditModeHandler","editingLayout","setEditingLayout","dashboardStatus","setDashboardStatus","recentPositions","setRecentPositions","doneBtnClickedWhileSaving","setDoneBtnClickedWhileSaving","saveDashboardLayout","positions","changedPositions","nextPositions","pickBy","nextPos","prevPos","getChangedPositions","saveChangedWidgets","saveDashboardLayoutDebounced","_len","args","_key","retrySaveDashboardLayout","setEditing","editing","useDuplicateDashboard","isDuplicating","setIsDuplicating","duplicateDashboard","tabName","newDashboard","currentUrlParams","targetUrlParams","keepCurrentUrlParams","getAffectedWidgets","updatedParameters","useDashboard","dashboardData","setDashboard","refreshing","setRefreshing","gridDisabled","setGridDisabled","globalParameters","isDashboardOwnerOrAdmin","_useDuplicateDashboar2","managePermissions","updateDashboard","includeVersion","currentDashboard","updatedDashboard","togglePublished","loadWidget","forceRefresh","removeWidget","dashboardRef","loadDashboard","loadWidgetPromises","updatedFilters","archiveDashboard","showShareDashboardDialog","handleDialogClose","showAddTextboxDialog","showAddWidgetDialog","_useRefreshRateHandle2","disableRefreshRate","_useFullscreenHandler2","editModeHandler","EditInPlace","isEditable","ignoreBlanks","onDone","stopEditing","onFocus","startEditing","multiline","editorProps","InputComponent","onBlur","defaultEditing","prevState","onStopEditing","renderEdit","renderNormal","getDashboardTags","buttonType","DashboardPageTitle","dashboardConfiguration","RefreshButton","refreshRateOptions","parsedRefreshRate","DashboardMoreOptionsButton","showPermissionsControl","disablePublish","DashboardControl","headerExtra","showPublishButton","showFullscreenButton","canShareDashboard","showShareButton","disablePublicUrls","showMoreOptionsButton","unarchiveDashboard","DashboardEditControl","data-saving","data-error","DashboardHeader","DashboardControlComponent","DashboardSettings","AddWidgetContainer","DashboardComponent","pageContainer","setPageContainer","bottomPanelStyles","setBottomPanelStyles","resizeObserver","paddingLeft","paddingRight","clientWidth","dispatchEvent","Event","DashboardPage","dashboardSlug","dashboardId","ApiKeySessionWrapper","renderChildren","routeWithApiKeySession","PublicDashboard","_useDashboard","PublicDashboardPage","keySuffix","imgSrc","CardsList","_ref2$items","_ref2$showSearch","searchText","setSearchText","filteredItems","Collapse","collapsed","AntCollapse","Panel","getFieldLabel","AceEditor","$blockScrolling","Infinity","showPrintMargin","InputField","FieldType","initialValue","minLength","contentAfter","FieldTypeComponent","checkbox","fieldLabel","file","getFieldValue","Upload","beforeUpload","UploadOutlinedIcon","textarea","ace","AceEditorInput","DynamicFormField","fieldProps","FieldComponent","orderedInputs","properties","targetOptions","inputs","default","normalizeSchema","configurationSchema","prop","endsWith","enum","extendedEnum","extra_options","setDefaultValueToFields","getFields","configuration_schema","hasTargetObject","isNewTarget","updateTargetWithValues","getBase64","reader","FileReader","readAsDataURL","onload","onerror","hasFilledExtraField","optionName","defaultOptionValue","targetOptionValue","ActionType","pullRight","disabledWhenDirty","AntdFormType","validateFieldsAndScroll","fieldRules","rule","DynamicFormFields","fields","feedbackIcons","hasFeedback","rules","valuePropName","getValueFromEvent","fileList","helper","setFieldsValue","reducerForActionSet","inProgress","actionName","DynamicFormActions","isFormDirty","_useReducer2","useReducer","inProgressActions","setActionInProgress","handleAction","disableWhenDirty","DynamicForm","hideSubmitButton","defaultShowExtraFields","saveText","onSubmit","isSubmitting","setIsSubmitting","isTouched","setIsTouched","showExtraFields","setShowExtraFields","useForm","extraFields","regularFields","handleFinish","normalizeEmptyValuesToNull","msg","handleFinishFailed","errorFields","scrollToField","onFieldsChange","onFinishFailed","currentShowExtraFields","Steps","StepEnum","CreateSourceDialog","selectedType","savingSource","currentStep","successCallback","errorCallback","onCreate","renderTypeSelector","filteredTypes","renderForm","imageFolder","helpTriggerPrefix","HELP_TRIGGER_TYPES","formId","createSource","selectType","data-test-type","sourceType","resetType","progressDot","wrapSettingsTab","activeItem","mapSchemaColumnsToObject","DataSource","fetchSchema","schema","tables","table","onClickCreate","DataSourcesList","dataSourceTypes","newDataSourceDialog","createDataSource","isNewDataSourcePage","showCreateSourceDialog","newDataSourceProps","DataSourcesListPage","EditDataSource","httpResponse","formProps","deleteDataSource","testConnection","saveDataSource","EditDataSourcePage","DestinationsList","destinationTypes","createDestination","isNewDestinationPage","renderDestinations","newDestinationProps","DestinationsListPage","EditDestination","destinationId","deleteDestination","saveDestination","EditDestinationPage","CreateGroupDialog","members","addMember","removeMember","addDataSource","removeDataSource","updateDataSource","DeleteGroupButton","group","button","onGroupDeleted","deleteGroup","mouseLeaveDelay","GroupsList","canRemove","newGroup","createGroup","GroupsListPage","GroupName","updateGroupName","DetailsPageSidebar","canAddMembers","onAddMembersClick","canAddDataSources","onAddDataSourcesClick","GroupDataSources","groupId","datasource","view_only","setDataSourcePermissions","DownOutlinedIcon","removeGroupDataSource","viewOnly","allDataSources","alreadyAddedDataSources","ds","addDataSources","GroupDataSourcesPage","GroupMembers","removeGroupMember","alreadyAddedUsers","u","addMembers","GroupMembersPage","QueriesListEmptyState","QueriesListExtraActions","QueriesList","controllerRef","unlistenLocationChanges","QueriesListPage","Resizable","toggleShortcut","direction","sizeAttribute","setSize","elementRef","wasUsingTouchEventsRef","wasResizedRef","sizeProp","getElementSize","savedSize","targetSize","element","d3","transition","ease","resizeHandle","shortcuts","resizeEventHandlers","onResize","draggableCoreOptions","onMouseDown","ReactResizable","resizeHandles","minConstraints","draggableOpts","QueryFormatters","sql","sqlFormatter","json","isFormatQueryAvailable","useQueryFlags","canView","canViewSource","canExecute","canFork","canSchedule","useArchiveQuery","doArchiveQuery","SaveQueryError","_extendableBuiltin","detailedMessage","SaveQueryConflictError","confirmOverwrite","doSaveQuery","_ref$canOverwrite","canOverwrite","useUpdateQuery","_ref2$successMessage","successMessage","updatedQuery","notificationOptions","useDuplicateQuery","duplicateQuery","CodeBlock","getSelection","selectAllChildren","removeAllRanges","copyFeatureEnabled","copyable","ApiKeyDialog","setQuery","updatingApiKey","setUpdatingApiKey","regenerateQueryApiKey","_useMemo","csvUrl","basePath","jsonUrl","csvResultsLabelId","jsonResultsLabelId","getQueryTags","QueryPageHeader","sourceMode","isDesktop","useMedia","queryFlags","updateName","updateQuery","autoPublishNamedQueries","useRenameQuery","updateTags","useUpdateQueryTags","archiveQuery","publishQuery","usePublishQuery","unpublishQuery","useUnpublishQuery","_useDuplicateQuery2","openApiKeyDialog","useApiKeyDialog","openPermissionsEditorDialog","usePermissionsEditorDialog","moreActionsMenu","createMenu","isEnabled","publish","unpublish","showAPIKey","divider","QueryMetadata","onEditSchedule","last_modified_by","refreshButton","TabWithDeleteButton","canDelete","handleDelete","defaultVisualizations","QueryVisualizationTabs","selectedTab","showNewVisualizationButton","canDeleteVisualizations","onChangeTab","onAddVisualization","onDeleteVisualization","canRefresh","tabsProps","tabBarExtraContent","orderedVisualizations","orderBy","isFirstVisualization","visId","isMobile","maxWidth","tabBarGutter","destroyInactiveTabPane","QueryExecutionStatus","isCancelling","alertType","showTimer","isCancelButtonAvailable","QuerySourceAlerts","dataSourcesAvailable","level","wrapQueryPage","QueryPageWrapper","AddToDashboardDialog","selectedDashboard","setSelectedDashboard","autoComplete","bordered","EmbedQueryDialog","enableChangeIframeSize","iframeWidth","iframeHeight","embedUrl","snapshotUrlBuilder","snapshotUrl","urlEmbedLabelId","iframeEmbedLabelId","QueryResultsLink","resultId","resultData","embed","QueryControlDropdown","openAddToDashboardForm","PlusCircleFilledIcon","showEmbedDialog","ShareAltOutlinedIcon","queryExecuting","FileOutlinedIcon","FileExcelOutlinedIcon","overlayClassName","EditVisualizationButton","openVisualizationEditor","FormOutlinedIcon","QueryExecutionMetadata","isQueryExecuting","showEditVisualizationButton","onEditVisualization","extraActions","queryResultData","openAddToDashboardDialog","useAddToDashboardDialog","openEmbedDialog","unusedQuery","useEmbedDialog","WarningTwoTone","twoToneColor","data_scanned","getSchema","SchemaItemColumnType","SchemaItemType","SchemaItem","expanded","onToggle","handleSelect","tableDisplayName","columnName","SchemaLoadingState","SchemaList","expandedFlags","onTableExpand","onItemSelect","listRef","setListRef","recomputeRowHeights","AutoSizer","rowCount","columnsLength","rowRenderer","applyFilterOnSchema","filterString","nameFilter","columnFilter","SchemaBrowser","onSchemaUpdate","onOptionsUpdate","_useDataSourceSchema2","setSchema","loadingSchema","setLoadingSchema","refreshSchemaTokenRef","reloadSchema","refreshToken","useDataSourceSchema","refreshSchema","setFilterString","filteredSchema","handleFilterChange","setExpandedFlags","handleSchemaUpdate","tableName","langTools","acequire","snippetsModule","defineDummySnippets","require","snippetText","scope","buildKeywordsFromSchema","tableKeywords","columnKeywords","tableColumnKeywords","score","meta","keywords","buildTableColumnKeywords","tableColumn","schemaCompleterKeywords","updateSchemaCompleter","editorKey","setCompleters","snippetCompleter","keyWordCompleter","textCompleter","identifierRegexps","getCompletions","editor","QuerySnippet","querySnippet","getSnippet","snippet","tabTrigger","getQuerySnippet","QuerySnippetService","AutocompleteToggle","available","tooltipMessage","handleClick","AutoLimitCheckbox","ButtonTooltip","limit","modifiers","mod","upperFirst","sc","humanReadableShortcut","EditorControl","addParameterButtonProps","formatButtonProps","saveButtonProps","executeButtonProps","autocompleteToggleProps","autoLimitCheckboxProps","dataSourceSelectorProps","buttons","ButtonPropsPropType","QueryEditor","autocompleteEnabled","onSelectionChange","setContainer","editorRef","setEditorRef","editorOptions","behavioursEnabled","enableSnippets","enableBasicAutocompletion","enableLiveAutocompletion","autoScrollEditorIntoView","editorId","resize","handleSelectionChange","selection","rawSelectedQueryText","getTextRange","getRange","initEditor","commands","bindKey","win","mac","blur","notificationCleanup","on","_ref$expiry","expiry","_ref$container","_ref$politeness","politeness","textContent","isDone","cleanupFn","srNotify","command","completer","snippets","snippetManager","parseSnippetFile","useImperativeHandle","paste","getValue","setRange","setOptions","wrapEnabled","Controls","QueryEditorControls","fetchDataFromJobOrReturnData","rejectErrorResponse","getDatabases","getDatabaseTables","databaseName","getTableColumns","DatabricksDataSource","addDisplayNameWithoutDatabaseName","databaseNamePrefix","DatabricksSchemaBrowser","_useDatabricksSchema","databases","setDatabases","loadingDatabases","setLoadingDatabases","_useState5","currentDatabaseName","setCurrentDatabaseName","_useState7","schemas","setSchemas","_useState9","_useState11","_useState12","setCurrentSchema","currentSchemas","currentDatabaseNameRef","loadTableColumns","updatedSchema","refreshAll","getDatabasesPromise","getSchemasPromise","schemasRef","has_columns","defaultDatabaseNameRef","lastUsedDatabase","setCurrentDatabase","selectedDatabase","useDatabricksSchema","databaseFilterString","setDatabaseFilterString","isDatabaseSelectOpen","setIsDatabaseSelectOpen","_useDebouncedCallback4","handleDatabaseFilterChange","cancelHandleDatabaseFilterChange","handleDatabaseSelection","filteredDatabases","database","dropdownClassName","onDropdownVisibleChange","SyncOutlinedIcon","spin","QueryEditorComponents","registerEditorComponent","dataSourceType","useVisualizationTabHandler","firstVisualization","setSelectedTab","hashValue","useAutocompleteFlags","totalLength","calculateTokensCount","setIsEnabled","toggleAutocomplete","useAutoLimitFlags","isAutoLimitAvailable","isChecked","setIsChecked","Notification","getPermissions","requestPermission","showNotification","redashIconUrl","onclick","reducer","updatedProperty","useQueryExecute","isExecuting","loadedInitialResults","executionStatus","cancelCallback","executionState","setExecutionState","queryResultInExecution","executeQuery","newQueryResult","queryExecutor","notifications","queryRef","useQueryParameters","dirtyFlag","setDirtyFlag","updateDirtyFlag","flag","updatedDirtyParameters","WEEKDAYS_SHORT","weekdaysShort","WEEKDAYS_FULL","weekdays","TimeEditor","setTime","showUtc","isUTC","TimePicker","minuteStep","newTime","data-testid","ScheduleDialog","newSchedule","newSeconds","newInterval","setScheduleUntil","day","refreshOptions","_secondsToInterval3","hasChanged","newCompact","oldCompact","intervals","int","cnt","secs","setWeekday","setUntilToggle","useEditScheduleDialog","Visualization","EditVisualizationDialog","getDefaultVisualization","getOptions","originalOptions","setType","nameChanged","setNameChanged","onOptionsChanged","newOptions","availableVisualizations","vis","isDeprecated","vizTypeId","vizNameId","wrapClassName","saveVisualization","newVisualization","savedVisualization","updateQueryVisualizations","optionsChanged","onNameChanged","newName","onOptionsChange","useEditVisualizationDialog","updatedVisualization","filteredVisualizations","useDeleteVisualization","useUpdateQueryDescription","QuerySourceTypeIcon","QuerySourceDropdownItem","QuerySourceDropdown","data-name","QuerySource","_useQuery","originalQuery","originalQuerySource","setOriginalQuerySource","originalAutoLimit","setOriginalAutoLimit","saveQuery","useQuery","_useQueryDataSources","setAllDataSources","dataSourcesLoaded","setDataSourcesLoaded","cancelDataSourceLoading","useQueryDataSources","_useQueryParameters2","areParametersDirty","updateParametersDirtyFlag","_useVisualizationTabH2","_getEditorComponents","shouldShowAlert","shouldShowAlertRef","confirmMessage","savedOnBeforeUnload","onbeforeunload","currentLocation","useUnsavedChangesAlert","_useQueryExecute","executionError","isExecutionCancelling","_useAutocompleteFlags2","autocompleteAvailable","_useAutoLimitFlags2","autoLimitAvailable","autoLimitChecked","setAutoLimit","handleQueryEditorChange","updateQueryDescription","querySyntax","queryFormat","handleDataSourceChange","updates","firstDataSourceId","selectedDataSourceId","dataSourceIds","availableDataSources","editSchedule","openAddNewParameterDialog","onParameterAdded","handleParameterAdded","useAddNewParameterDialog","handleSchemaItemSelect","schemaItem","selectedText","setSelectedText","doExecuteQuery","skipParametersDirtyFlag","isQuerySaving","setIsQuerySaving","addVisualization","editVisualization","shouldOpenDialog","setShouldOpenDialog","useAddVisualizationDialog","deleteVisualization","schemaOptions","overflow","data-executing","formatQuery","formattedQueryText","formatter","line","QuerySourcePage","QueryViewButton","tooltipVisible","setTooltipVisible","eventHandlers","onMouseEnter","onMouseLeave","pointerEvents","QueryView","setDataSource","isFixedLayout","addingDescription","setAddingDescription","FullscreenExitOutlinedIcon","FullscreenOutlinedIcon","QueryViewPage","VisualizationEmbedHeader","queryDescription","verticalAlign","VisualizationEmbedFooter","queryUrl","hideTimestamp","downloadMenu","VisualizationEmbed","setError","setRefreshStartedAt","setQueryResults","refreshQueryResults","hideHeader","hideParametersUI","hideQueryLink","showQueryDescription","QuerySnippetDialog","handleSubmit","querySnippetId","formFields","querySnippetsFormId","canEditQuerySnippet","QuerySnippetsList","showSnippetDialog","deleteQuerySnippet","canSave","goToSnippetsList","saveQuerySnippet","_this$props$controlle","isNewOrEditPage","QuerySnippetsListPage","useOrganizationSettings","settings","setSettings","currentValues","setCurrentValues","isSaving","setIsSaving","OrgSettings","newClientConfig","date_format","timeFormat","time_format","SettingsEditorPropTypes","SettingsEditorDefaultProps","FormatSettings","dateFormatList","timeFormatList","PlotlySettings","hide_plotly_mode_bar","FeatureFlagsSettings","Row","feature_show_permissions_control","send_email_on_failed_scheduled_queries","multi_byte_search_enabled","GeneralSettings","PasswordLoginSettings","isTheOnlyAuthMethod","googleLoginEnabled","ldapLoginEnabled","auth_saml_enabled","auth_password_login_enabled","GoogleLoginSettings","auth_google_apps_domains","SAMLSettings","auth_saml_type","auth_saml_sso_url","auth_saml_entity_id","auth_saml_x509_cert","auth_saml_metadata_url","auth_saml_nameid_format","AuthSettings","allSettings","OrganizationSettings","_useOrganizationSetti","sm","lg","OrganizationSettingsPage","absoluteUrl","urlObj","URL","protocol","host","CreateUserDialog","UsersListActions","UsersList","goToUsersList","isNewUserPage","createUser","showCreateUserDialog","renderPageHeader","UsersListPage","pending","UserGroups","linkGroups","useUserGroups","allGroups","setAllGroups","UserInfoForm","_useUserGroups","isLoadingGroups","saveUser","ApiKeyForm","apiKeyInputId","doRegenerate","ChangePasswordDialog","newPassword","currentPassword","repeatPassword","errors","fieldError","updatingPassword","validateFields","touched","userData","old_password","password","_e$target","_this$state3","inputProps","updatePassword","Password","PasswordLinkAlert","passwordLink","PasswordResetForm","setPasswordLink","ResendInvitationForm","PasswordForm","changePassword","ToggleUserForm","toggleUser","buttonProps","EditableUserProfile","setUser","ReadOnlyUserProfile","UserProfilePage","handleNavigationIntent","tagName","hasAttribute","dataset","skipRouter","setDefaultIndicator","updateLocale","relativeTime","future","past","mm","hh","dd","M","MM","yy","init","notificationKey","onlineStateHandler","unhandledError","setUnhandledError","globalErrorHandler","filename","getElementById","offlineListener"],"mappings":"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CCAzC,OAAe,cAA0B,6B,kCCAzC,OAAe,cAA0B,8B,kCCAzC,OAAe,cAA0B,qC,kCCAzC,OAAe,cAA0B,sC,kCCAzC,OAAe,cAA0B,iE,kCCAzC,OAAe,cAA0B,4D,kCCAzC,OAAe,cAA0B,8B,kCCAzC,OAAe,cAA0B,6B,kCCAzC,OAAe,cAA0B,gC,kCCAzC,OAAe,cAA0B,wC,kCCAzC,OAAe,cAA0B,yC,kCCAzC,OAAe,cAA0B,6C,kCCAzC,OAAe,cAA0B,2C,kCCAzC,OAAe,cAA0B,gC,kCCAzC,OAAe,cAA0B,4B,kCCAzC,OAAe,cAA0B,iC,kCCAzC,OAAe,cAA0B,8B,kCCAzC,OAAe,cAA0B,8B,kCCAzC,OAAe,cAA0B,gC,kCCAzC,OAAe,cAA0B,kC,kCCAzC,OAAe,cAA0B,+B,kCCAzC,OAAe,cAA0B,4B,kCCAzC,OAAe,cAA0B,8B,kCCAzC,OAAe,cAA0B,6B,kCCAzC,OAAe,cAA0B,4B,kCCAzC,OAAe,cAA0B,8B,kCCAzC,OAAe,cAA0B,+B,kCCAzC,OAAe,cAA0B,6B,kCCAzC,OAAe,cAA0B,kC,kCCAzC,OAAe,cAA0B,6B,kCCAzC,OAAe,cAA0B,0B,kCCAzC,OAAe,cAA0B,8B,kCCAzC,OAAe,cAA0B,0B,kCCAzC,OAAe,cAA0B,+B,kCCAzC,OAAe,cAA0B,6B,kCCAzC,OAAe,cAA0B,8B,kCCAzC,OAAe,cAA0B,kC,kCCAzC,OAAe,cAA0B,8B,kCCAzC,OAAe,cAA0B,iC,kCCAzC,OAAe,cAA0B,gC,kCCAzC,OAAe,cAA0B,oC,kCCAzC,OAAe,cAA0B,+B,kCCAzC,OAAe,cAA0B,kC,kCCAzC,OAAe,cAA0B,+B,kCCAzC,OAAe,cAA0B,kC,kCCAzC,OAAe,cAA0B,8B,kCCAzC,OAAe,cAA0B,iC,kCCAzC,OAAe,cAA0B,uC,kCCAzC,OAAe,cAA0B,8B,kCCAzC,OAAe,cAA0B,gC,kCCAzC,OAAe,cAA0B,oC,kCCAzC,OAAe,cAA0B,6B,kCCAzC,OAAe,cAA0B,8B,kCCAzC,OAAe,cAA0B,2B,kCCAzC,OAAe,cAA0B,+B,kCCAzC,OAAe,cAA0B,yC,kCCAzC,OAAe,cAA0B,mC,kCCA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","file":"app.1738ede2ce452798d81b.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/static/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1100,2]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var map = {\n\t\"./en-au\": 651,\n\t\"./en-au.js\": 651,\n\t\"./en-ca\": 652,\n\t\"./en-ca.js\": 652,\n\t\"./en-gb\": 653,\n\t\"./en-gb.js\": 653,\n\t\"./en-ie\": 654,\n\t\"./en-ie.js\": 654,\n\t\"./en-il\": 655,\n\t\"./en-il.js\": 655,\n\t\"./en-in\": 656,\n\t\"./en-in.js\": 656,\n\t\"./en-nz\": 657,\n\t\"./en-nz.js\": 657,\n\t\"./en-sg\": 658,\n\t\"./en-sg.js\": 658\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1112;","export default __webpack_public_path__ + \"images/redash_icon_small.png\";","var map = {\n\t\"./avatar.svg\": 659,\n\t\"./db-logos/Cassandra.png\": 2635,\n\t\"./db-logos/arangodb.png\": 2636,\n\t\"./db-logos/athena.png\": 2637,\n\t\"./db-logos/aws_es.png\": 2638,\n\t\"./db-logos/axibasetsd.png\": 2639,\n\t\"./db-logos/azure_kusto.png\": 2640,\n\t\"./db-logos/bigquery.png\": 2641,\n\t\"./db-logos/bigquery_gce.png\": 2642,\n\t\"./db-logos/clickhouse.png\": 2643,\n\t\"./db-logos/cloudwatch.png\": 2644,\n\t\"./db-logos/cloudwatch_insights.png\": 2645,\n\t\"./db-logos/cockroach.png\": 2646,\n\t\"./db-logos/corporate_memory.png\": 2647,\n\t\"./db-logos/couchbase.png\": 2648,\n\t\"./db-logos/csv.png\": 2649,\n\t\"./db-logos/databend.png\": 2650,\n\t\"./db-logos/databricks.png\": 2651,\n\t\"./db-logos/db2.png\": 2652,\n\t\"./db-logos/dgraph.png\": 2653,\n\t\"./db-logos/drill.png\": 2654,\n\t\"./db-logos/druid.png\": 2655,\n\t\"./db-logos/e6data.png\": 2656,\n\t\"./db-logos/elasticsearch.png\": 2657,\n\t\"./db-logos/elasticsearch2.png\": 2658,\n\t\"./db-logos/elasticsearch2_OpenDistroSQLElasticSearch.png\": 2659,\n\t\"./db-logos/elasticsearch2_XPackSQLElasticSearch.png\": 2660,\n\t\"./db-logos/exasol.png\": 2661,\n\t\"./db-logos/excel.png\": 2662,\n\t\"./db-logos/firebolt.png\": 2663,\n\t\"./db-logos/google_analytics.png\": 2664,\n\t\"./db-logos/google_analytics4.png\": 2665,\n\t\"./db-logos/google_search_console.png\": 2666,\n\t\"./db-logos/google_spreadsheets.png\": 2667,\n\t\"./db-logos/graphite.png\": 2668,\n\t\"./db-logos/hive.png\": 2669,\n\t\"./db-logos/hive_http.png\": 2670,\n\t\"./db-logos/ignite.png\": 2671,\n\t\"./db-logos/impala.png\": 2672,\n\t\"./db-logos/influxdb.png\": 2673,\n\t\"./db-logos/influxdbv2.png\": 2674,\n\t\"./db-logos/jirajql.png\": 2675,\n\t\"./db-logos/json.png\": 2676,\n\t\"./db-logos/kibana.png\": 2677,\n\t\"./db-logos/kylin.png\": 2678,\n\t\"./db-logos/mapd.png\": 2679,\n\t\"./db-logos/memsql.png\": 2680,\n\t\"./db-logos/mongodb.png\": 2681,\n\t\"./db-logos/mssql.png\": 2682,\n\t\"./db-logos/mssql_odbc.png\": 2683,\n\t\"./db-logos/mysql.png\": 2684,\n\t\"./db-logos/nz.png\": 2685,\n\t\"./db-logos/oracle.png\": 2686,\n\t\"./db-logos/pg.png\": 2687,\n\t\"./db-logos/phoenix.png\": 2688,\n\t\"./db-logos/pinot.png\": 2689,\n\t\"./db-logos/presto.png\": 2690,\n\t\"./db-logos/prometheus.png\": 2691,\n\t\"./db-logos/python.png\": 2692,\n\t\"./db-logos/rds_mysql.png\": 2693,\n\t\"./db-logos/redshift.png\": 2694,\n\t\"./db-logos/redshift_iam.png\": 2695,\n\t\"./db-logos/results.png\": 2696,\n\t\"./db-logos/risingwave.png\": 2697,\n\t\"./db-logos/rockset.png\": 2698,\n\t\"./db-logos/salesforce.png\": 2699,\n\t\"./db-logos/scylla.png\": 2700,\n\t\"./db-logos/snowflake.png\": 2701,\n\t\"./db-logos/sparql_endpoint.png\": 2702,\n\t\"./db-logos/sqlite.png\": 2703,\n\t\"./db-logos/tinybird.png\": 2704,\n\t\"./db-logos/treasuredata.png\": 2705,\n\t\"./db-logos/trino.png\": 2706,\n\t\"./db-logos/uptycs.png\": 2707,\n\t\"./db-logos/url.png\": 2708,\n\t\"./db-logos/vertica.png\": 2709,\n\t\"./db-logos/yandex_appmetrika.png\": 2710,\n\t\"./db-logos/yandex_disk.png\": 2711,\n\t\"./db-logos/yandex_metrika.png\": 2712,\n\t\"./destinations/asana.png\": 2713,\n\t\"./destinations/chatwork.png\": 2714,\n\t\"./destinations/datadog.png\": 2715,\n\t\"./destinations/discord.png\": 2716,\n\t\"./destinations/email.png\": 2717,\n\t\"./destinations/hangouts_chat.png\": 2718,\n\t\"./destinations/mattermost.png\": 2719,\n\t\"./destinations/microsoft_teams_webhook.png\": 2720,\n\t\"./destinations/pagerduty.png\": 2721,\n\t\"./destinations/slack.png\": 2722,\n\t\"./destinations/webex.png\": 2723,\n\t\"./destinations/webhook.png\": 2724,\n\t\"./favicon-16x16.png\": 2725,\n\t\"./favicon-32x32.png\": 2726,\n\t\"./favicon-96x96.png\": 2727,\n\t\"./fixtures/map-tile.png\": 2728,\n\t\"./google_logo.svg\": 2729,\n\t\"./illustrations/alert.svg\": 2730,\n\t\"./illustrations/dashboard.svg\": 2731,\n\t\"./illustrations/no-query-results.svg\": 2732,\n\t\"./illustrations/query.svg\": 2733,\n\t\"./logo.png\": 2734,\n\t\"./logo_white.png\": 2735,\n\t\"./redash_icon_small.png\": 146\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 2634;","export default __webpack_public_path__ + \"images/db-logos/Cassandra.png\";","export default __webpack_public_path__ + \"images/db-logos/arangodb.png\";","export default __webpack_public_path__ + \"images/db-logos/athena.png\";","export default __webpack_public_path__ + \"images/db-logos/aws_es.png\";","export default __webpack_public_path__ + \"images/db-logos/axibasetsd.png\";","export default __webpack_public_path__ + \"images/db-logos/azure_kusto.png\";","export default __webpack_public_path__ + \"images/db-logos/bigquery.png\";","export default __webpack_public_path__ + \"images/db-logos/bigquery_gce.png\";","export default __webpack_public_path__ + \"images/db-logos/clickhouse.png\";","export default __webpack_public_path__ + \"images/db-logos/cloudwatch.png\";","export default __webpack_public_path__ + \"images/db-logos/cloudwatch_insights.png\";","export default __webpack_public_path__ + \"images/db-logos/cockroach.png\";","export default __webpack_public_path__ + \"images/db-logos/corporate_memory.png\";","export default __webpack_public_path__ + \"images/db-logos/couchbase.png\";","export default __webpack_public_path__ + \"images/db-logos/csv.png\";","export default __webpack_public_path__ + \"images/db-logos/databend.png\";","export default __webpack_public_path__ + \"images/db-logos/databricks.png\";","export default __webpack_public_path__ + \"images/db-logos/db2.png\";","export default __webpack_public_path__ + \"images/db-logos/dgraph.png\";","export default __webpack_public_path__ + \"images/db-logos/drill.png\";","export default __webpack_public_path__ + \"images/db-logos/druid.png\";","export default __webpack_public_path__ + \"images/db-logos/e6data.png\";","export default __webpack_public_path__ + \"images/db-logos/elasticsearch.png\";","export default __webpack_public_path__ + \"images/db-logos/elasticsearch2.png\";","export default __webpack_public_path__ + \"images/db-logos/elasticsearch2_OpenDistroSQLElasticSearch.png\";","export default __webpack_public_path__ + \"images/db-logos/elasticsearch2_XPackSQLElasticSearch.png\";","export default __webpack_public_path__ + \"images/db-logos/exasol.png\";","export default __webpack_public_path__ + \"images/db-logos/excel.png\";","export default __webpack_public_path__ + \"images/db-logos/firebolt.png\";","export default __webpack_public_path__ + \"images/db-logos/google_analytics.png\";","export default __webpack_public_path__ + \"images/db-logos/google_analytics4.png\";","export default __webpack_public_path__ + \"images/db-logos/google_search_console.png\";","export default __webpack_public_path__ + \"images/db-logos/google_spreadsheets.png\";","export default __webpack_public_path__ + \"images/db-logos/graphite.png\";","export default __webpack_public_path__ + \"images/db-logos/hive.png\";","export default __webpack_public_path__ + \"images/db-logos/hive_http.png\";","export default __webpack_public_path__ + \"images/db-logos/ignite.png\";","export default __webpack_public_path__ + \"images/db-logos/impala.png\";","export default __webpack_public_path__ + \"images/db-logos/influxdb.png\";","export default __webpack_public_path__ + \"images/db-logos/influxdbv2.png\";","export default __webpack_public_path__ + \"images/db-logos/jirajql.png\";","export default __webpack_public_path__ + \"images/db-logos/json.png\";","export default __webpack_public_path__ + \"images/db-logos/kibana.png\";","export default __webpack_public_path__ + \"images/db-logos/kylin.png\";","export default __webpack_public_path__ + \"images/db-logos/mapd.png\";","export default __webpack_public_path__ + \"images/db-logos/memsql.png\";","export default __webpack_public_path__ + \"images/db-logos/mongodb.png\";","export default __webpack_public_path__ + \"images/db-logos/mssql.png\";","export default __webpack_public_path__ + \"images/db-logos/mssql_odbc.png\";","export default __webpack_public_path__ + \"images/db-logos/mysql.png\";","export default __webpack_public_path__ + \"images/db-logos/nz.png\";","export default __webpack_public_path__ + \"images/db-logos/oracle.png\";","export default __webpack_public_path__ + \"images/db-logos/pg.png\";","export default __webpack_public_path__ + \"images/db-logos/phoenix.png\";","export default __webpack_public_path__ + \"images/db-logos/pinot.png\";","export default __webpack_public_path__ + \"images/db-logos/presto.png\";","export default __webpack_public_path__ + \"images/db-logos/prometheus.png\";","export default __webpack_public_path__ + \"images/db-logos/python.png\";","export default __webpack_public_path__ + \"images/db-logos/rds_mysql.png\";","export default __webpack_public_path__ + \"images/db-logos/redshift.png\";","export default __webpack_public_path__ + \"images/db-logos/redshift_iam.png\";","export default __webpack_public_path__ + \"images/db-logos/results.png\";","export default __webpack_public_path__ + \"images/db-logos/risingwave.png\";","export default __webpack_public_path__ + \"images/db-logos/rockset.png\";","export default __webpack_public_path__ + \"images/db-logos/salesforce.png\";","export default __webpack_public_path__ + \"images/db-logos/scylla.png\";","export default __webpack_public_path__ + \"images/db-logos/snowflake.png\";","export default __webpack_public_path__ + \"images/db-logos/sparql_endpoint.png\";","export default __webpack_public_path__ + \"images/db-logos/sqlite.png\";","export default __webpack_public_path__ + \"images/db-logos/tinybird.png\";","export default __webpack_public_path__ + \"images/db-logos/treasuredata.png\";","export default __webpack_public_path__ + \"images/db-logos/trino.png\";","export default __webpack_public_path__ + \"images/db-logos/uptycs.png\";","export default __webpack_public_path__ + \"images/db-logos/url.png\";","export default __webpack_public_path__ + \"images/db-logos/vertica.png\";","export default __webpack_public_path__ + \"images/db-logos/yandex_appmetrika.png\";","export default __webpack_public_path__ + \"images/db-logos/yandex_disk.png\";","export default __webpack_public_path__ + \"images/db-logos/yandex_metrika.png\";","export default __webpack_public_path__ + \"images/destinations/asana.png\";","export default __webpack_public_path__ + \"images/destinations/chatwork.png\";","export default __webpack_public_path__ + \"images/destinations/datadog.png\";","export default __webpack_public_path__ + \"images/destinations/discord.png\";","export default __webpack_public_path__ + \"images/destinations/email.png\";","export default __webpack_public_path__ + \"images/destinations/hangouts_chat.png\";","export default __webpack_public_path__ + \"images/destinations/mattermost.png\";","export default __webpack_public_path__ + \"images/destinations/microsoft_teams_webhook.png\";","export default __webpack_public_path__ + \"images/destinations/pagerduty.png\";","export default __webpack_public_path__ + \"images/destinations/slack.png\";","export default __webpack_public_path__ + \"images/destinations/webex.png\";","export default __webpack_public_path__ + \"images/destinations/webhook.png\";","export default __webpack_public_path__ + \"images/favicon-16x16.png\";","export default __webpack_public_path__ + \"images/favicon-32x32.png\";","export default __webpack_public_path__ + \"images/favicon-96x96.png\";","export default __webpack_public_path__ + \"images/fixtures/map-tile.png\";","export default __webpack_public_path__ + \"images/google_logo.svg\";","export default __webpack_public_path__ + \"images/illustrations/alert.svg\";","export default __webpack_public_path__ + \"images/illustrations/dashboard.svg\";","export default __webpack_public_path__ + \"images/illustrations/no-query-results.svg\";","export default __webpack_public_path__ + \"images/illustrations/query.svg\";","export default __webpack_public_path__ + \"images/logo.png\";","export default __webpack_public_path__ + \"images/logo_white.png\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 2736;","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","import React from \"react\";\nimport Button, { ButtonProps as AntdButtonProps } from \"antd/lib/button\";\n\nfunction DefaultLinkComponent({ children, ...props }: React.AnchorHTMLAttributes<HTMLAnchorElement>) {\n  return <a {...props}>{children}</a>;\n}\n\nLink.Component = DefaultLinkComponent;\n\ninterface LinkProps extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"role\" | \"type\" | \"target\"> {\n  href: string;\n}\nfunction Link({ children, ...props }: LinkProps) {\n  return <Link.Component {...props}>{children}</Link.Component>;\n}\n\ninterface LinkWithIconProps extends LinkProps {\n  children: string;\n  icon: JSX.Element;\n  alt: string;\n  target?: \"_self\" | \"_blank\" | \"_parent\" | \"_top\";\n}\n\nfunction LinkWithIcon({ icon, alt, children, ...props }: LinkWithIconProps) {\n  return (\n    <Link.Component {...props}>\n      {children} {icon} <span className=\"sr-only\">{alt}</span>\n    </Link.Component>\n  );\n}\n\nLink.WithIcon = LinkWithIcon;\n\nfunction ExternalLink({\n  icon = <i className=\"fa fa-external-link\" aria-hidden=\"true\" />,\n  alt = \"(opens in a new tab)\",\n  ...props\n}: Omit<LinkWithIconProps, \"target\">) {\n  return <Link.WithIcon target=\"_blank\" rel=\"noopener noreferrer\" icon={icon} alt={alt} {...props} />;\n}\n\nLink.External = ExternalLink;\n\n// Ant Button will render an <a> if href is present.\nfunction DefaultButtonLinkComponent(props: ButtonProps) {\n  return <Button {...props} />;\n}\n\nButtonLink.Component = DefaultButtonLinkComponent;\n\ninterface ButtonProps extends AntdButtonProps {\n  href: string;\n}\n\nfunction ButtonLink(props: ButtonProps) {\n  return <ButtonLink.Component {...props} />;\n}\n\nLink.Button = ButtonLink;\n\nexport default Link;\n","import { isNil, isUndefined, isFunction, isObject, trimStart, mapValues, omitBy, extend } from \"lodash\";\nimport qs from \"query-string\";\nimport { createBrowserHistory } from \"history\";\n\nconst history = createBrowserHistory();\n\nfunction normalizeLocation(rawLocation) {\n  const { pathname, search, hash } = rawLocation;\n  const result = {};\n\n  result.path = pathname;\n  result.search = mapValues(qs.parse(search), value => (isNil(value) ? true : value));\n  result.hash = trimStart(hash, \"#\");\n  result.url = `${pathname}${search}${hash}`;\n\n  return result;\n}\n\nconst location = {\n  listen(handler) {\n    if (isFunction(handler)) {\n      return history.listen((unused, action) => handler(location, action));\n    } else {\n      return () => {};\n    }\n  },\n\n  confirmChange(handler) {\n    if (isFunction(handler)) {\n      return history.block(nextLocation => {\n        return handler(normalizeLocation(nextLocation), location);\n      });\n    } else {\n      return () => {};\n    }\n  },\n\n  update(newLocation, replace = false) {\n    if (isObject(newLocation)) {\n      // remap fields and remove undefined ones\n      newLocation = omitBy(\n        {\n          pathname: newLocation.path,\n          search: newLocation.search,\n          hash: newLocation.hash,\n        },\n        isUndefined\n      );\n\n      // keep existing fields (!)\n      newLocation = extend(\n        {\n          pathname: location.path,\n          search: location.search,\n          hash: location.hash,\n        },\n        newLocation\n      );\n\n      // serialize search and keep existing search parameters (!)\n      if (isObject(newLocation.search)) {\n        newLocation.search = omitBy(extend({}, location.search, newLocation.search), isNil);\n        newLocation.search = mapValues(newLocation.search, value => (value === true ? null : value));\n        newLocation.search = qs.stringify(newLocation.search);\n      }\n    }\n    if (replace) {\n      history.replace(newLocation);\n    } else {\n      history.push(newLocation);\n    }\n  },\n\n  url: undefined,\n\n  path: undefined,\n  setPath(path, replace = false) {\n    location.update({ path }, replace);\n  },\n\n  search: undefined,\n  setSearch(search, replace = false) {\n    location.update({ search }, replace);\n  },\n\n  hash: undefined,\n  setHash(hash, replace = false) {\n    location.update({ hash }, replace);\n  },\n};\n\nfunction locationChanged() {\n  extend(location, normalizeLocation(history.location));\n}\n\nhistory.listen(locationChanged);\nlocationChanged(); // init service\n\nexport default location;\n","import { map } from \"lodash\";\nimport React from \"react\";\nimport Modal from \"antd/lib/modal\";\nimport { Auth } from \"@/services/auth\";\n\nconst SESSION_RESTORED_MESSAGE = \"redash_session_restored\";\n\nexport function notifySessionRestored() {\n  if (window.opener) {\n    window.opener.postMessage({ type: SESSION_RESTORED_MESSAGE }, window.location.origin);\n  }\n}\n\nfunction getPopupPosition(width, height) {\n  const windowLeft = window.screenX;\n  const windowTop = window.screenY;\n  const windowWidth = window.innerWidth;\n  const windowHeight = window.innerHeight;\n\n  return {\n    left: Math.floor((windowWidth - width) / 2 + windowLeft),\n    top: Math.floor((windowHeight - height) / 2 + windowTop),\n    width: Math.floor(width),\n    height: Math.floor(height),\n  };\n}\n\nfunction showRestoreSessionPrompt(loginUrl, onSuccess) {\n  let popup = null;\n\n  Modal.warning({\n    content: \"Your session has expired. Please login to continue.\",\n    okText: (\n      <React.Fragment>\n        Login <i className=\"fa fa-external-link m-r-5\" aria-hidden=\"true\" />\n        <span className=\"sr-only\">(opens in a new tab)</span>\n      </React.Fragment>\n    ),\n    centered: true,\n    mask: true,\n    maskClosable: false,\n    keyboard: false,\n    onOk: closeModal => {\n      if (popup && !popup.closed) {\n        popup.focus();\n        return; // popup already shown\n      }\n\n      const popupOptions = {\n        ...getPopupPosition(640, 640),\n        menubar: \"no\",\n        toolbar: \"no\",\n        location: \"yes\",\n        resizable: \"yes\",\n        scrollbars: \"yes\",\n        status: \"yes\",\n      };\n\n      popup = window.open(loginUrl, \"Restore Session\", map(popupOptions, (value, key) => `${key}=${value}`).join(\",\"));\n\n      const handlePostMessage = event => {\n        if (event.data.type === SESSION_RESTORED_MESSAGE) {\n          if (popup) {\n            popup.close();\n          }\n          popup = null;\n          window.removeEventListener(\"message\", handlePostMessage);\n          closeModal();\n          onSuccess();\n        }\n      };\n\n      window.addEventListener(\"message\", handlePostMessage, false);\n    },\n  });\n}\n\nlet restoreSessionPromise = null;\n\nexport function restoreSession() {\n  if (!restoreSessionPromise) {\n    restoreSessionPromise = new Promise(resolve => {\n      showRestoreSessionPrompt(Auth.getLoginUrl(), () => {\n        restoreSessionPromise = null;\n        resolve();\n      });\n    });\n  }\n\n  return restoreSessionPromise;\n}\n","import { get, includes } from \"lodash\";\nimport axiosLib from \"axios\";\nimport createAuthRefreshInterceptor from \"axios-auth-refresh\";\nimport { Auth } from \"@/services/auth\";\nimport qs from \"query-string\";\nimport { restoreSession } from \"@/services/restoreSession\";\n\nexport const axios = axiosLib.create({\n  paramsSerializer: params => qs.stringify(params),\n  xsrfCookieName: \"csrf_token\",\n  xsrfHeaderName: \"X-CSRF-TOKEN\",\n});\n\naxios.interceptors.response.use(response => response.data);\n\nexport const csrfRefreshInterceptor = createAuthRefreshInterceptor(\n  axios,\n  error => {\n    const message = get(error, \"response.data.message\");\n    if (error.isAxiosError && includes(message, \"CSRF\")) {\n      return axios.get(\"/ping\");\n    } else {\n      return Promise.reject(error);\n    }\n  },\n  { statusCodes: [400] }\n);\n\nexport const sessionRefreshInterceptor = createAuthRefreshInterceptor(\n  axios,\n  error => {\n    const status = parseInt(get(error, \"response.status\"));\n    const message = get(error, \"response.data.message\");\n    // TODO: In axios@0.9.1 this check could be replaced with { skipAuthRefresh: true } flag. See axios-auth-refresh docs\n    const requestUrl = get(error, \"config.url\");\n    if (error.isAxiosError && (status === 401 || includes(message, \"Please login\")) && requestUrl !== \"api/session\") {\n      return restoreSession();\n    }\n    return Promise.reject(error);\n  },\n  {\n    statusCodes: [401, 404],\n    pauseInstanceWhileRefreshing: false, // According to docs, `false` is default value, but in fact it's not :-)\n  }\n);\n\naxios.interceptors.request.use(config => {\n  const apiKey = Auth.getApiKey();\n  if (apiKey) {\n    config.headers.Authorization = `Key ${apiKey}`;\n  }\n\n  return config;\n});\n","import debug from \"debug\";\nimport { includes, extend } from \"lodash\";\nimport location from \"@/services/location\";\nimport { axios } from \"@/services/axios\";\nimport { notifySessionRestored } from \"@/services/restoreSession\";\n\nexport const currentUser = {\n  _isAdmin: undefined,\n\n  canEdit(object) {\n    const userId = object.user_id || (object.user && object.user.id);\n    return this.isAdmin || (userId && userId === this.id);\n  },\n\n  canCreate() {\n    return (\n      this.hasPermission(\"create_query\") || this.hasPermission(\"create_dashboard\") || this.hasPermission(\"list_alerts\")\n    );\n  },\n\n  hasPermission(permission) {\n    if (permission === \"admin\" && this._isAdmin !== undefined) {\n      return this._isAdmin;\n    }\n    return includes(this.permissions, permission);\n  },\n\n  get isAdmin() {\n    return this.hasPermission(\"admin\");\n  },\n\n  set isAdmin(isAdmin) {\n    this._isAdmin = isAdmin;\n  },\n};\n\nexport const clientConfig = {};\nexport const messages = [];\n\nconst logger = debug(\"redash:auth\");\nconst session = { loaded: false };\n\nconst AuthUrls = {\n  Login: \"login\",\n};\n\nexport function updateClientConfig(newClientConfig) {\n  extend(clientConfig, newClientConfig);\n}\n\nfunction updateSession(sessionData) {\n  logger(\"Updating session to be:\", sessionData);\n  extend(session, sessionData, { loaded: true });\n  extend(currentUser, session.user);\n  extend(clientConfig, session.client_config);\n  extend(messages, session.messages);\n}\n\nexport const Auth = {\n  isAuthenticated() {\n    return session.loaded && session.user.id;\n  },\n  getLoginUrl() {\n    return AuthUrls.Login;\n  },\n  setLoginUrl(loginUrl) {\n    AuthUrls.Login = loginUrl;\n  },\n  login() {\n    const next = encodeURI(location.url);\n    logger(\"Calling login with next = %s\", next);\n    window.location.href = `${AuthUrls.Login}?next=${next}`;\n  },\n  logout() {\n    logger(\"Logout.\");\n    window.location.href = \"logout\";\n  },\n  loadSession() {\n    logger(\"Loading session\");\n    if (session.loaded && session.user.id) {\n      logger(\"Resolving with local value.\");\n      return Promise.resolve(session);\n    }\n\n    Auth.setApiKey(null);\n    return axios.get(\"api/session\").then(data => {\n      updateSession(data);\n      return session;\n    });\n  },\n  loadConfig() {\n    logger(\"Loading config\");\n    return axios.get(\"/api/config\").then(data => {\n      updateSession({ client_config: data.client_config, user: { permissions: [] }, messages: [] });\n      return data;\n    });\n  },\n  setApiKey(apiKey) {\n    logger(\"Set API key to: %s\", apiKey);\n    Auth.apiKey = apiKey;\n  },\n  getApiKey() {\n    return Auth.apiKey;\n  },\n  requireSession() {\n    logger(\"Requested authentication\");\n    if (Auth.isAuthenticated()) {\n      return Promise.resolve(session);\n    }\n    return Auth.loadSession()\n      .then(() => {\n        if (Auth.isAuthenticated()) {\n          logger(\"Loaded session\");\n          notifySessionRestored();\n          return session;\n        }\n        logger(\"Need to login, redirecting\");\n        Auth.login();\n      })\n      .catch(() => {\n        logger(\"Need to login, redirecting\");\n        Auth.login();\n      });\n  },\n};\n","import DefaultPolicy from \"./DefaultPolicy\";\n\n// eslint-disable-next-line import/no-mutable-exports\nexport let policy = new DefaultPolicy();\n\nexport function setPolicy(newPolicy) {\n  policy = newPolicy;\n}\n","import { get, isArray } from \"lodash\";\nimport { currentUser, clientConfig } from \"@/services/auth\";\n\n/* eslint-disable class-methods-use-this */\n\nexport default class DefaultPolicy {\n  refresh() {\n    return Promise.resolve(this);\n  }\n\n  canCreateDataSource() {\n    return currentUser.isAdmin;\n  }\n\n  isCreateDataSourceEnabled() {\n    return currentUser.isAdmin;\n  }\n\n  canCreateDestination() {\n    return currentUser.isAdmin;\n  }\n\n  isCreateDestinationEnabled() {\n    return currentUser.isAdmin;\n  }\n\n  canCreateDashboard() {\n    return currentUser.hasPermission(\"create_dashboard\");\n  }\n\n  isCreateDashboardEnabled() {\n    return currentUser.hasPermission(\"create_dashboard\");\n  }\n\n  canCreateAlert() {\n    return true;\n  }\n\n  canCreateUser() {\n    return currentUser.isAdmin;\n  }\n\n  isCreateUserEnabled() {\n    return currentUser.isAdmin;\n  }\n\n  isCreateQuerySnippetEnabled() {\n    return true;\n  }\n\n  getDashboardRefreshIntervals() {\n    const result = clientConfig.dashboardRefreshIntervals;\n    return isArray(result) ? result : null;\n  }\n\n  getQueryRefreshIntervals() {\n    const result = clientConfig.queryRefreshIntervals;\n    return isArray(result) ? result : null;\n  }\n\n  canEdit(object) {\n    return get(object, \"can_edit\", false);\n  }\n\n  canRun() {\n    return true;\n  }\n}\n","import { axios } from \"@/services/axios\";\n\nclass OrganizationStatus {\n  constructor() {\n    this.objectCounters = {};\n  }\n\n  refresh() {\n    return axios.get(\"api/organization/status\").then(data => {\n      this.objectCounters = data.object_counters;\n      return this;\n    });\n  }\n}\n\nexport default new OrganizationStatus();\n","import { isFunction, isString, isUndefined } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst componentsRegistry = new Map();\nconst activeInstances = new Set();\n\nexport function registerComponent(name, component) {\n  if (isString(name) && name !== \"\") {\n    componentsRegistry.set(name, isFunction(component) ? component : null);\n    // Refresh active DynamicComponent instances which use this component\n    activeInstances.forEach(dynamicComponent => {\n      if (dynamicComponent.props.name === name) {\n        dynamicComponent.forceUpdate();\n      }\n    });\n  }\n}\n\nexport function unregisterComponent(name) {\n  registerComponent(name, null);\n}\n\nexport default class DynamicComponent extends React.Component {\n  static propTypes = {\n    name: PropTypes.string.isRequired,\n    fallback: PropTypes.node,\n    children: PropTypes.node,\n  };\n\n  static defaultProps = {\n    children: null,\n  };\n\n  componentDidMount() {\n    activeInstances.add(this);\n  }\n\n  componentWillUnmount() {\n    activeInstances.delete(this);\n  }\n\n  render() {\n    const { name, children, fallback, ...props } = this.props;\n    const RealComponent = componentsRegistry.get(name);\n    if (!RealComponent) {\n      // return fallback if any, otherwise return children\n      return isUndefined(fallback) ? children : fallback;\n    }\n    return <RealComponent {...props}>{children}</RealComponent>;\n  }\n}\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport \"./PlainButton.less\";\n\nexport interface PlainButtonProps extends Omit<React.ButtonHTMLAttributes<HTMLButtonElement>, \"type\"> {\n  type?: \"link\" | \"button\";\n}\n\nfunction PlainButton({ className, type, ...rest }: PlainButtonProps) {\n  return (\n    <button\n      className={classNames(\"plain-button\", \"clickable\", { \"plain-button-link\": type === \"link\" }, className)}\n      type=\"button\"\n      {...rest}\n    />\n  );\n}\n\nexport default PlainButton;\n","import React from \"react\";\nimport AntTooltip, { TooltipProps } from \"antd/lib/tooltip\";\nimport { isNil } from \"lodash\";\n\nexport default function Tooltip({ title, ...restProps }: TooltipProps) {\n  const liveTitle = !isNil(title) ? (\n    <span role=\"status\" aria-live=\"assertive\" aria-relevant=\"additions\">\n      {title}\n    </span>\n  ) : null;\n\n  return <AntTooltip trigger={[\"hover\", \"focus\"]} title={liveTitle} {...restProps} />;\n}\n","import { uniqueId } from \"lodash\";\nimport { useLazyRef } from \"./useLazyRef\";\n\nexport function useUniqueId(prefix: string) {\n  const { current: id } = useLazyRef(() => uniqueId(prefix));\n  return id;\n}\n","import { useRef } from \"react\";\n\nexport function useLazyRef<T>(getInitialValue: () => T) {\n  const lazyRef = useRef<T>(null) as React.MutableRefObject<T>;\n\n  if (lazyRef.current === null) {\n    lazyRef.current = getInitialValue();\n  }\n\n  return lazyRef;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useUniqueId } from \"@/lib/hooks/useUniqueId\";\nimport cx from \"classnames\";\n\nfunction BigMessage({ message, icon, children, className }) {\n  const messageId = useUniqueId(\"bm-message\");\n  return (\n    <div\n      className={\"big-message p-15 text-center \" + className}\n      role=\"status\"\n      aria-live=\"assertive\"\n      aria-relevant=\"additions removals\">\n      <h3 className=\"m-t-0 m-b-0\" aria-labelledby={messageId}>\n        <i className={cx(\"fa\", icon)} aria-hidden=\"true\" />\n      </h3>\n      <br />\n      <span id={messageId}>{message}</span>\n      {children}\n    </div>\n  );\n}\n\nBigMessage.propTypes = {\n  message: PropTypes.string,\n  icon: PropTypes.string.isRequired,\n  children: PropTypes.node,\n  className: PropTypes.string,\n};\n\nBigMessage.defaultProps = {\n  message: \"\",\n  children: null,\n  className: \"tiled bg-white\",\n};\n\nexport default BigMessage;\n","import { startsWith, get, some, mapValues } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\nimport Tooltip from \"@/components/Tooltip\";\nimport Drawer from \"antd/lib/drawer\";\nimport Link from \"@/components/Link\";\nimport PlainButton from \"@/components/PlainButton\";\nimport CloseOutlinedIcon from \"@ant-design/icons/CloseOutlined\";\nimport BigMessage from \"@/components/BigMessage\";\nimport DynamicComponent, { registerComponent } from \"@/components/DynamicComponent\";\n\nimport \"./HelpTrigger.less\";\n\nconst DOMAIN = \"https://redash.io\";\nconst HELP_PATH = \"/help\";\nconst IFRAME_TIMEOUT = 20000;\nconst IFRAME_URL_UPDATE_MESSAGE = \"iframe_url\";\n\nexport const TYPES = mapValues(\n  {\n    HOME: [\"\", \"Help\"],\n    VALUE_SOURCE_OPTIONS: [\"/user-guide/querying/query-parameters#Value-Source-Options\", \"Guide: Value Source Options\"],\n    SHARE_DASHBOARD: [\"/user-guide/dashboards/sharing-dashboards\", \"Guide: Sharing and Embedding Dashboards\"],\n    AUTHENTICATION_OPTIONS: [\"/user-guide/users/authentication-options\", \"Guide: Authentication Options\"],\n    DS_ATHENA: [\"/data-sources/amazon-athena-setup\", \"Guide: Help Setting up Amazon Athena\"],\n    DS_BIGQUERY: [\"/data-sources/bigquery-setup\", \"Guide: Help Setting up BigQuery\"],\n    DS_URL: [\"/data-sources/querying-urls\", \"Guide: Help Setting up URL\"],\n    DS_MONGODB: [\"/data-sources/mongodb-setup\", \"Guide: Help Setting up MongoDB\"],\n    DS_GOOGLE_SPREADSHEETS: [\n      \"/data-sources/querying-a-google-spreadsheet\",\n      \"Guide: Help Setting up Google Spreadsheets\",\n    ],\n    DS_GOOGLE_ANALYTICS: [\"/data-sources/google-analytics-setup\", \"Guide: Help Setting up Google Analytics\"],\n    DS_AXIBASETSD: [\"/data-sources/axibase-time-series-database\", \"Guide: Help Setting up Axibase Time Series\"],\n    DS_RESULTS: [\"/user-guide/querying/query-results-data-source\", \"Guide: Help Setting up Query Results\"],\n    ALERT_SETUP: [\"/user-guide/alerts/setting-up-an-alert\", \"Guide: Setting Up a New Alert\"],\n    MAIL_CONFIG: [\"/open-source/setup/#Mail-Configuration\", \"Guide: Mail Configuration\"],\n    ALERT_NOTIF_TEMPLATE_GUIDE: [\"/user-guide/alerts/custom-alert-notifications\", \"Guide: Custom Alerts Notifications\"],\n    FAVORITES: [\"/user-guide/querying/favorites-tagging/#Favorites\", \"Guide: Favorites\"],\n    MANAGE_PERMISSIONS: [\n      \"/user-guide/querying/writing-queries#Managing-Query-Permissions\",\n      \"Guide: Managing Query Permissions\",\n    ],\n    NUMBER_FORMAT_SPECS: [\"/user-guide/visualizations/formatting-numbers\", \"Formatting Numbers\"],\n    GETTING_STARTED: [\"/user-guide/getting-started\", \"Guide: Getting Started\"],\n    DASHBOARDS: [\"/user-guide/dashboards\", \"Guide: Dashboards\"],\n    QUERIES: [\"/user-guide/querying\", \"Guide: Queries\"],\n    ALERTS: [\"/user-guide/alerts\", \"Guide: Alerts\"],\n  },\n  ([url, title]) => [DOMAIN + HELP_PATH + url, title]\n);\n\nconst HelpTriggerPropTypes = {\n  type: PropTypes.string,\n  href: PropTypes.string,\n  title: PropTypes.node,\n  className: PropTypes.string,\n  showTooltip: PropTypes.bool,\n  renderAsLink: PropTypes.bool,\n  children: PropTypes.node,\n};\n\nconst HelpTriggerDefaultProps = {\n  type: null,\n  href: null,\n  title: null,\n  className: null,\n  showTooltip: true,\n  renderAsLink: false,\n  children: <i className=\"fa fa-question-circle\" aria-hidden=\"true\" />,\n};\n\nexport function helpTriggerWithTypes(types, allowedDomains = [], drawerClassName = null) {\n  return class HelpTrigger extends React.Component {\n    static propTypes = {\n      ...HelpTriggerPropTypes,\n      type: PropTypes.oneOf(Object.keys(types)),\n    };\n\n    static defaultProps = HelpTriggerDefaultProps;\n\n    iframeRef = React.createRef();\n\n    iframeLoadingTimeout = null;\n\n    state = {\n      visible: false,\n      loading: false,\n      error: false,\n      currentUrl: null,\n    };\n\n    componentDidMount() {\n      window.addEventListener(\"message\", this.onPostMessageReceived, false);\n    }\n\n    componentWillUnmount() {\n      window.removeEventListener(\"message\", this.onPostMessageReceived);\n      clearTimeout(this.iframeLoadingTimeout);\n    }\n\n    loadIframe = url => {\n      clearTimeout(this.iframeLoadingTimeout);\n      this.setState({ loading: true, error: false });\n\n      this.iframeRef.current.src = url;\n      this.iframeLoadingTimeout = setTimeout(() => {\n        this.setState({ error: url, loading: false });\n      }, IFRAME_TIMEOUT); // safety\n    };\n\n    onIframeLoaded = () => {\n      this.setState({ loading: false });\n      clearTimeout(this.iframeLoadingTimeout);\n    };\n\n    onPostMessageReceived = event => {\n      if (!some(allowedDomains, domain => startsWith(event.origin, domain))) {\n        return;\n      }\n\n      const { type, message: currentUrl } = event.data || {};\n      if (type !== IFRAME_URL_UPDATE_MESSAGE) {\n        return;\n      }\n\n      this.setState({ currentUrl });\n    };\n\n    getUrl = () => {\n      const helpTriggerType = get(types, this.props.type);\n      return helpTriggerType ? helpTriggerType[0] : this.props.href;\n    };\n\n    openDrawer = e => {\n      // keep \"open in new tab\" behavior\n      if (!e.shiftKey && !e.ctrlKey && !e.metaKey) {\n        e.preventDefault();\n        this.setState({ visible: true });\n        // wait for drawer animation to complete so there's no animation jank\n        setTimeout(() => this.loadIframe(this.getUrl()), 300);\n      }\n    };\n\n    closeDrawer = event => {\n      if (event) {\n        event.preventDefault();\n      }\n      this.setState({ visible: false });\n      this.setState({ visible: false, currentUrl: null });\n    };\n\n    render() {\n      const targetUrl = this.getUrl();\n      if (!targetUrl) {\n        return null;\n      }\n\n      const tooltip = get(types, `${this.props.type}[1]`, this.props.title);\n      const className = cx(\"help-trigger\", this.props.className);\n      const url = this.state.currentUrl;\n      const isAllowedDomain = some(allowedDomains, domain => startsWith(url || targetUrl, domain));\n      const shouldRenderAsLink = this.props.renderAsLink || !isAllowedDomain;\n\n      return (\n        <React.Fragment>\n          <Tooltip\n            title={\n              this.props.showTooltip ? (\n                <>\n                  {tooltip}\n                  {shouldRenderAsLink && (\n                    <>\n                      {\" \"}\n                      <i className=\"fa fa-external-link\" style={{ marginLeft: 5 }} aria-hidden=\"true\" />\n                      <span className=\"sr-only\">(opens in a new tab)</span>\n                    </>\n                  )}\n                </>\n              ) : null\n            }>\n            <Link\n              href={url || this.getUrl()}\n              className={className}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n              onClick={shouldRenderAsLink ? () => {} : this.openDrawer}>\n              {this.props.children}\n            </Link>\n          </Tooltip>\n          <Drawer\n            placement=\"right\"\n            closable={false}\n            onClose={this.closeDrawer}\n            visible={this.state.visible}\n            className={cx(\"help-drawer\", drawerClassName)}\n            destroyOnClose\n            width={400}>\n            <div className=\"drawer-wrapper\">\n              <div className=\"drawer-menu\">\n                {url && (\n                  <Tooltip title=\"Open page in a new window\" placement=\"left\">\n                    {/* eslint-disable-next-line react/jsx-no-target-blank */}\n                    <Link href={url} target=\"_blank\">\n                      <i className=\"fa fa-external-link\" aria-hidden=\"true\" />\n                      <span className=\"sr-only\">(opens in a new tab)</span>\n                    </Link>\n                  </Tooltip>\n                )}\n                <Tooltip title=\"Close\" placement=\"bottom\">\n                  <PlainButton onClick={this.closeDrawer}>\n                    <CloseOutlinedIcon />\n                  </PlainButton>\n                </Tooltip>\n              </div>\n\n              {/* iframe */}\n              {!this.state.error && (\n                <iframe\n                  ref={this.iframeRef}\n                  title=\"Usage Help\"\n                  src=\"about:blank\"\n                  className={cx({ ready: !this.state.loading })}\n                  onLoad={this.onIframeLoaded}\n                />\n              )}\n\n              {/* loading indicator */}\n              {this.state.loading && (\n                <BigMessage icon=\"fa-spinner fa-2x fa-pulse\" message=\"Loading...\" className=\"help-message\" />\n              )}\n\n              {/* error message */}\n              {this.state.error && (\n                <BigMessage icon=\"fa-exclamation-circle\" className=\"help-message\">\n                  Something went wrong.\n                  <br />\n                  {/* eslint-disable-next-line react/jsx-no-target-blank */}\n                  <Link href={this.state.error} target=\"_blank\" rel=\"noopener\">\n                    Click here\n                  </Link>{\" \"}\n                  to open the page in a new window.\n                </BigMessage>\n              )}\n            </div>\n\n            {/* extra content */}\n            <DynamicComponent name=\"HelpDrawerExtraContent\" onLeave={this.closeDrawer} openPageUrl={this.loadIframe} />\n          </Drawer>\n        </React.Fragment>\n      );\n    }\n  };\n}\n\nregisterComponent(\"HelpTrigger\", helpTriggerWithTypes(TYPES, [DOMAIN]));\n\nexport default function HelpTrigger(props) {\n  return <DynamicComponent {...props} name=\"HelpTrigger\" />;\n}\n\nHelpTrigger.propTypes = HelpTriggerPropTypes;\nHelpTrigger.defaultProps = HelpTriggerDefaultProps;\n","import { isFunction } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ReactDOM from \"react-dom\";\n\n/**\n  Wrapper for dialogs based on Ant's <Modal> component.\n\n\n  Using wrapped dialogs\n  =====================\n\n  Wrapped component is an object with two fields:\n\n    {\n      showModal: (dialogProps) => object({\n          close: (result) => void,\n          dismiss: (reason) => void,\n          onClose: (handler) => this,\n          onDismiss: (handler) => this,\n        }),\n      Component: React.Component, // wrapped dialog component\n    }\n\n  To open dialog, use `showModal` method; optionally you can pass additional properties that\n  will be expanded on wrapped component:\n\n    const dialog = SomeWrappedDialog.showModal()\n\n    const dialog = SomeWrappedDialog.showModal({ greeting: 'Hello' })\n\n  To get result of modal, use `onClose`/`onDismiss` setters:\n\n    dialog\n      .onClose(result => { ... }) // pressed OK button or used `close` method\n      .onDismiss(result => { ... }) // pressed Cancel button or used `dismiss` method\n\n  If `onClose`/`onDismiss` returns a promise - dialog wrapper will stop handling further close/dismiss\n  requests and will show loader on a corresponding button until that promise is fulfilled (either resolved or\n  rejected). If that promise will be rejected - dialog close/dismiss will be abandoned. Use promise returned\n  from `close`/`dismiss` methods to handle errors (if needed).\n\n  Also, dialog has `close` and `dismiss` methods that allows to close dialog by caller. Passed arguments\n  will be passed to a corresponding handler. Both methods will return the promise returned from `onClose` and\n `onDismiss` callbacks. `update` method allows to pass new properties to dialog.\n\n\n  Creating a dialog\n  ================\n\n  1. Add imports:\n\n    import { wrap as wrapDialog, DialogPropType } from 'path/to/DialogWrapper';\n\n  2. define a `dialog` property on your component:\n\n    propTypes = {\n      dialog: DialogPropType.isRequired,\n    };\n\n  `dialog` property is an object:\n\n    {\n      props: object, // properties for <Modal> component;\n      close: (result) => void, // method to confirm dialog; `result` will be returned to caller\n      dismiss: (reason) => void, // method to reject dialog; `reason` will be returned to caller\n    }\n\n  3. expand additional properties on <Modal> component:\n\n    render() {\n      const { dialog } = this.props;\n      return (\n        <Modal {...dialog.props}>\n      );\n    }\n\n  4. wrap your component and export it:\n\n    export default wrapDialog(YourComponent).\n\n  Your component is ready to use. Wrapper will manage <Modal>'s visibility and events.\n  If you want to override behavior of `onOk`/`onCancel` - don't forget to close dialog:\n\n    customOkHandler() {\n      this.saveData().then(() => {\n         this.props.dialog.close({ success: true }); // or dismiss();\n      });\n    }\n\n    render() {\n      const { dialog } = this.props;\n        return (\n          <Modal {...dialog.props} onOk={() => this.customOkHandler()}>\n        );\n    }\n*/\n\nexport const DialogPropType = PropTypes.shape({\n  props: PropTypes.shape({\n    visible: PropTypes.bool,\n    onOk: PropTypes.func,\n    onCancel: PropTypes.func,\n    afterClose: PropTypes.func,\n  }).isRequired,\n  close: PropTypes.func.isRequired,\n  dismiss: PropTypes.func.isRequired,\n});\n\nfunction openDialog(DialogComponent, props) {\n  const dialog = {\n    props: {\n      visible: true,\n      okButtonProps: {},\n      cancelButtonProps: {},\n      onOk: () => {},\n      onCancel: () => {},\n      afterClose: () => {},\n    },\n    close: () => {},\n    dismiss: () => {},\n  };\n\n  let pendingCloseTask = null;\n\n  const handlers = {\n    onClose: () => {},\n    onDismiss: () => {},\n  };\n\n  const container = document.createElement(\"div\");\n  document.body.appendChild(container);\n\n  function render() {\n    ReactDOM.render(<DialogComponent {...props} dialog={dialog} />, container);\n  }\n\n  function destroyDialog() {\n    // Allow calling chain to roll up, and then destroy component\n    setTimeout(() => {\n      ReactDOM.unmountComponentAtNode(container);\n      document.body.removeChild(container);\n    }, 10);\n  }\n\n  function processDialogClose(result, setAdditionalDialogProps) {\n    dialog.props.okButtonProps = { disabled: true };\n    dialog.props.cancelButtonProps = { disabled: true };\n    setAdditionalDialogProps();\n    render();\n\n    return Promise.resolve(result)\n      .then(() => {\n        dialog.props.visible = false;\n      })\n      .finally(() => {\n        dialog.props.okButtonProps = {};\n        dialog.props.cancelButtonProps = {};\n        render();\n      });\n  }\n\n  function closeDialog(result) {\n    if (!pendingCloseTask) {\n      pendingCloseTask = processDialogClose(handlers.onClose(result), () => {\n        dialog.props.okButtonProps.loading = true;\n      }).finally(() => {\n        pendingCloseTask = null;\n      });\n    }\n    return pendingCloseTask;\n  }\n\n  function dismissDialog(result) {\n    if (!pendingCloseTask) {\n      pendingCloseTask = processDialogClose(handlers.onDismiss(result), () => {\n        dialog.props.cancelButtonProps.loading = true;\n      }).finally(() => {\n        pendingCloseTask = null;\n      });\n    }\n    return pendingCloseTask;\n  }\n\n  dialog.props.onOk = closeDialog;\n  dialog.props.onCancel = dismissDialog;\n  dialog.props.afterClose = destroyDialog;\n  dialog.close = closeDialog;\n  dialog.dismiss = dismissDialog;\n\n  const result = {\n    close: closeDialog,\n    dismiss: dismissDialog,\n    update: newProps => {\n      props = { ...props, ...newProps };\n      render();\n    },\n    onClose: handler => {\n      if (isFunction(handler)) {\n        handlers.onClose = handler;\n      }\n      return result;\n    },\n    onDismiss: handler => {\n      if (isFunction(handler)) {\n        handlers.onDismiss = handler;\n      }\n      return result;\n    },\n  };\n\n  render(); // show it only when all structures initialized to avoid unnecessary re-rendering\n\n  return result;\n}\n\nexport function wrap(DialogComponent) {\n  return {\n    Component: DialogComponent,\n    showModal: props => openDialog(DialogComponent, props),\n  };\n}\n\nexport default {\n  DialogPropType,\n  wrap,\n};\n","import { pick, extend } from \"lodash\";\n\nconst link = document.createElement(\"a\"); // the only way to get an instance of Location class\n// add to document to apply <base> href\nlink.style.display = \"none\";\ndocument.body.appendChild(link);\n\nconst fragmentProps = [\"origin\", \"protocol\", \"host\", \"hostname\", \"port\", \"pathname\", \"search\", \"hash\", \"href\"];\n\nexport function parse(url) {\n  link.setAttribute(\"href\", url);\n  return pick(link, fragmentProps);\n}\n\nexport function stringify(fragments) {\n  extend(link, pick(fragments, fragmentProps));\n  return link.href; // absolute URL\n}\n\nexport function normalize(url) {\n  link.setAttribute(\"href\", url);\n  return link.href; // absolute URL\n}\n\nexport default { parse, stringify, normalize };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport function ErrorMessageDetails(props) {\n  return <h4>{props.message}</h4>;\n}\n\nErrorMessageDetails.propTypes = {\n  error: PropTypes.instanceOf(Error).isRequired,\n  message: PropTypes.string.isRequired,\n};\n","import { get, isObject } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./ErrorMessage.less\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { ErrorMessageDetails } from \"@/components/ApplicationArea/ErrorMessageDetails\";\n\nfunction getErrorMessageByStatus(status, defaultMessage) {\n  switch (status) {\n    case 404:\n      return \"It seems like the page you're looking for cannot be found.\";\n    case 401:\n    case 403:\n      return \"It seems like you don’t have permission to see this page.\";\n    default:\n      return defaultMessage;\n  }\n}\n\nfunction getErrorMessage(error) {\n  const message = \"It seems like we encountered an error. Try refreshing this page or contact your administrator.\";\n  if (isObject(error)) {\n    // HTTP errors\n    if (error.isAxiosError && isObject(error.response)) {\n      return getErrorMessageByStatus(error.response.status, get(error, \"response.data.message\", message));\n    }\n    // Router errors\n    if (error.status) {\n      return getErrorMessageByStatus(error.status, message);\n    }\n  }\n  return message;\n}\n\nexport default function ErrorMessage({ error, message }) {\n  if (!error) {\n    return null;\n  }\n\n  console.error(error);\n\n  const errorDetailsProps = {\n    error,\n    message: message || getErrorMessage(error),\n  };\n\n  return (\n    <div className=\"error-message-container\" data-test=\"ErrorMessage\" role=\"alert\">\n      <div className=\"error-state bg-white tiled\">\n        <div className=\"error-state__icon\">\n          <i className=\"zmdi zmdi-alert-circle-o\" aria-hidden=\"true\" />\n        </div>\n        <div className=\"error-state__details\">\n          <DynamicComponent\n            name=\"ErrorMessageDetails\"\n            fallback={<ErrorMessageDetails {...errorDetailsProps} />}\n            {...errorDetailsProps}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nErrorMessage.propTypes = {\n  error: PropTypes.object.isRequired,\n  message: PropTypes.string,\n};\n","import { isFunction, startsWith, trimStart, trimEnd } from \"lodash\";\nimport React, { useState, useEffect, useRef, useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport UniversalRouter from \"universal-router\";\nimport ErrorBoundary from \"@redash/viz/lib/components/ErrorBoundary\";\nimport location from \"@/services/location\";\nimport url from \"@/services/url\";\n\nimport ErrorMessage from \"./ErrorMessage\";\n\nfunction generateRouteKey() {\n  return Math.random()\n    .toString(32)\n    .substr(2);\n}\n\nexport const CurrentRouteContext = React.createContext(null);\n\nexport function useCurrentRoute() {\n  return useContext(CurrentRouteContext);\n}\n\nexport function stripBase(href) {\n  // Resolve provided link and '' (root) relative to document's base.\n  // If provided href is not related to current document (does not\n  // start with resolved root) - return false. Otherwise\n  // strip root and return relative url.\n\n  const baseHref = trimEnd(url.normalize(\"\"), \"/\") + \"/\";\n  href = url.normalize(href);\n\n  if (startsWith(href, baseHref)) {\n    return \"/\" + trimStart(href.substr(baseHref.length), \"/\");\n  }\n\n  return false;\n}\n\nexport default function Router({ routes, onRouteChange }) {\n  const [currentRoute, setCurrentRoute] = useState(null);\n\n  const currentPathRef = useRef(null);\n  const errorHandlerRef = useRef();\n\n  useEffect(() => {\n    let isAbandoned = false;\n\n    const router = new UniversalRouter(routes, {\n      resolveRoute({ route }, routeParams) {\n        if (isFunction(route.render)) {\n          return { ...route, routeParams };\n        }\n      },\n    });\n\n    function resolve(action) {\n      if (!isAbandoned) {\n        if (errorHandlerRef.current) {\n          errorHandlerRef.current.reset();\n        }\n\n        const pathname = stripBase(location.path) || \"/\";\n\n        // This is a optimization for route resolver: if current route was already resolved\n        // from this path - do nothing. It also prevents router from using outdated route in a case\n        // when user navigated to another path while current one was still resolving.\n        // Note: this lock uses only `path` fragment of URL to distinguish routes because currently\n        // all pages depend only on this fragment and handle search/hash on their own. If router\n        // should reload page on search/hash change - this fragment (and few checks below) should be updated\n        if (pathname === currentPathRef.current) {\n          return;\n        }\n        currentPathRef.current = pathname;\n\n        // Don't reload controller if URL was replaced\n        if (action === \"REPLACE\") {\n          return;\n        }\n\n        router\n          .resolve({ pathname })\n          .then(route => {\n            if (!isAbandoned && currentPathRef.current === pathname) {\n              setCurrentRoute({ ...route, key: generateRouteKey() });\n            }\n          })\n          .catch(error => {\n            if (!isAbandoned && currentPathRef.current === pathname) {\n              setCurrentRoute({\n                render: currentRoute => <ErrorMessage {...currentRoute.routeParams} />,\n                routeParams: { error },\n              });\n            }\n          });\n      }\n    }\n\n    resolve(\"PUSH\");\n\n    const unlisten = location.listen((unused, action) => resolve(action));\n\n    return () => {\n      isAbandoned = true;\n      currentPathRef.current = null;\n      unlisten();\n    };\n  }, [routes]);\n\n  useEffect(() => {\n    onRouteChange(currentRoute);\n  }, [currentRoute, onRouteChange]);\n\n  if (!currentRoute) {\n    return null;\n  }\n\n  return (\n    <CurrentRouteContext.Provider value={currentRoute}>\n      <ErrorBoundary ref={errorHandlerRef} renderError={error => <ErrorMessage error={error} />}>\n        {currentRoute.render(currentRoute)}\n      </ErrorBoundary>\n    </CurrentRouteContext.Provider>\n  );\n}\n\nRouter.propTypes = {\n  routes: PropTypes.arrayOf(\n    PropTypes.shape({\n      path: PropTypes.string.isRequired,\n      render: PropTypes.func, // (routeParams: PropTypes.object; currentRoute; location) => PropTypes.node\n      // Additional props to be injected into route component.\n      // Object keys are props names. Object values will become prop values:\n      // - if value is a function - it will be called without arguments, and result will be used; otherwise value will be used;\n      // - after previous step, if value is a promise - router will wait for it to resolve; resolved value then will be used;\n      //   otherwise value will be used directly.\n      resolve: PropTypes.objectOf(PropTypes.any),\n    })\n  ),\n  onRouteChange: PropTypes.func,\n};\n\nRouter.defaultProps = {\n  routes: [],\n  onRouteChange: () => {},\n};\n","import location from \"@/services/location\";\nimport url from \"@/services/url\";\nimport { stripBase } from \"./Router\";\n\n// When `replace` is set to `true` - it will just replace current URL\n// without reloading current page (router will skip this location change)\nexport default function navigateTo(href, replace = false) {\n  // Allow calling chain to roll up, and then navigate\n  setTimeout(() => {\n    const isExternal = stripBase(href) === false;\n    if (isExternal) {\n      window.location = href;\n      return;\n    }\n    href = url.parse(href);\n    location.update(\n      {\n        path: href.pathname,\n        search: href.search,\n        hash: href.hash,\n      },\n      replace\n    );\n  }, 10);\n}\n","import { axios } from \"@/services/axios\";\nimport { debounce, extend } from \"lodash\";\n\nlet events = [];\n\nconst post = debounce(() => {\n  const eventsToSend = events;\n  events = [];\n\n  axios.post(\"api/events\", eventsToSend);\n}, 1000);\n\nexport default function recordEvent(action, objectType, objectId, additionalProperties) {\n  const event = {\n    action,\n    object_type: objectType,\n    object_id: objectId,\n    timestamp: Date.now() / 1000.0,\n    screen_resolution: `${window.screen.width}x${window.screen.height}`,\n  };\n  extend(event, additionalProperties);\n  events.push(event);\n\n  post();\n}\n","export default {\n  columns: 6, // grid columns count\n  rowHeight: 50, // grid row height (incl. bottom padding)\n  margins: 15, // widget margins\n  mobileBreakPoint: 800,\n  // defaults for widgets\n  defaultSizeX: 3,\n  defaultSizeY: 3,\n  minSizeX: 1,\n  maxSizeX: 6,\n  minSizeY: 1,\n  maxSizeY: 1000,\n};\n","import { isNull, isObject, isFunction, isUndefined, isEqual, has, omit, isArray, each } from \"lodash\";\n\nclass Parameter {\n  constructor(parameter, parentQueryId) {\n    this.title = parameter.title;\n    this.name = parameter.name;\n    this.type = parameter.type;\n    this.global = parameter.global; // backward compatibility in Widget service\n    this.parentQueryId = parentQueryId;\n\n    // Used for meta-parameters (i.e. dashboard-level params)\n    this.locals = [];\n\n    // Used for URL serialization\n    this.urlPrefix = \"p_\";\n  }\n\n  static getExecutionValue(param, extra = {}) {\n    if (!isObject(param) || !isFunction(param.getExecutionValue)) {\n      return null;\n    }\n\n    return param.getExecutionValue(extra);\n  }\n\n  static setValue(param, value) {\n    if (!isObject(param) || !isFunction(param.setValue)) {\n      return null;\n    }\n\n    return param.setValue(value);\n  }\n\n  get isEmpty() {\n    return isNull(this.normalizedValue);\n  }\n\n  get hasPendingValue() {\n    return this.pendingValue !== undefined && !isEqual(this.pendingValue, this.normalizedValue);\n  }\n\n  /** Get normalized value to be used in inputs */\n  get normalizedValue() {\n    return this.$$value;\n  }\n\n  isEmptyValue(value) {\n    return isNull(this.normalizeValue(value));\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  normalizeValue(value) {\n    if (isUndefined(value)) {\n      return null;\n    }\n    return value;\n  }\n\n  updateLocals() {\n    if (isArray(this.locals)) {\n      each(this.locals, local => {\n        local.setValue(this.value);\n      });\n    }\n  }\n\n  setValue(value) {\n    const normalizedValue = this.normalizeValue(value);\n    this.value = normalizedValue;\n    this.$$value = normalizedValue;\n\n    this.updateLocals();\n    this.clearPendingValue();\n    return this;\n  }\n\n  /** Get execution value for a query */\n  getExecutionValue() {\n    return this.value;\n  }\n\n  setPendingValue(value) {\n    this.pendingValue = this.normalizeValue(value);\n  }\n\n  applyPendingValue() {\n    if (this.hasPendingValue) {\n      this.setValue(this.pendingValue);\n    }\n  }\n\n  clearPendingValue() {\n    this.pendingValue = undefined;\n  }\n\n  /** Update URL with Parameter value */\n  toUrlParams() {\n    const prefix = this.urlPrefix;\n    // `null` removes the parameter from the URL in case it exists\n    return {\n      [`${prefix}${this.name}`]: !this.isEmpty ? this.value : null,\n    };\n  }\n\n  /** Set parameter value from the URL */\n  fromUrlParams(query) {\n    const prefix = this.urlPrefix;\n    const key = `${prefix}${this.name}`;\n    if (has(query, key)) {\n      this.setValue(query[key]);\n    }\n  }\n\n  toQueryTextFragment() {\n    return `{{ ${this.name} }}`;\n  }\n\n  /** Get a saveable version of the Parameter by omitting unnecessary props */\n  toSaveableObject() {\n    return omit(this, [\"$$value\", \"urlPrefix\", \"pendingValue\", \"parentQueryId\"]);\n  }\n}\n\nexport default Parameter;\n","import { toString, isEmpty } from \"lodash\";\nimport Parameter from \"./Parameter\";\n\nclass TextParameter extends Parameter {\n  constructor(parameter, parentQueryId) {\n    super(parameter, parentQueryId);\n    this.setValue(parameter.value);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  normalizeValue(value) {\n    const normalizedValue = toString(value);\n    if (isEmpty(normalizedValue)) {\n      return null;\n    }\n    return normalizedValue;\n  }\n}\n\nexport default TextParameter;\n","import { toNumber, isNull } from \"lodash\";\nimport Parameter from \"./Parameter\";\n\nclass NumberParameter extends Parameter {\n  constructor(parameter, parentQueryId) {\n    super(parameter, parentQueryId);\n    this.setValue(parameter.value);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  normalizeValue(value) {\n    if (isNull(value)) {\n      return null;\n    }\n    const normalizedValue = toNumber(value);\n    return !isNaN(normalizedValue) ? normalizedValue : null;\n  }\n}\n\nexport default NumberParameter;\n","import { isArray, isEmpty, includes, intersection, get, map, join, has } from \"lodash\";\nimport Parameter from \"./Parameter\";\n\nclass EnumParameter extends Parameter {\n  constructor(parameter, parentQueryId) {\n    super(parameter, parentQueryId);\n    this.enumOptions = parameter.enumOptions;\n    this.multiValuesOptions = parameter.multiValuesOptions;\n    this.setValue(parameter.value);\n  }\n\n  normalizeValue(value) {\n    if (isEmpty(this.enumOptions)) {\n      return null;\n    }\n\n    const enumOptionsArray = this.enumOptions.split(\"\\n\") || [];\n    if (this.multiValuesOptions) {\n      if (!isArray(value)) {\n        value = [value];\n      }\n      value = intersection(value, enumOptionsArray);\n    } else if (!value || isArray(value) || !includes(enumOptionsArray, value)) {\n      value = enumOptionsArray[0];\n    }\n\n    if (isArray(value) && isEmpty(value)) {\n      return null;\n    }\n    return value;\n  }\n\n  getExecutionValue(extra = {}) {\n    const { joinListValues } = extra;\n    if (joinListValues && isArray(this.value)) {\n      const separator = get(this.multiValuesOptions, \"separator\", \",\");\n      const prefix = get(this.multiValuesOptions, \"prefix\", \"\");\n      const suffix = get(this.multiValuesOptions, \"suffix\", \"\");\n      const parameterValues = map(this.value, v => `${prefix}${v}${suffix}`);\n      return join(parameterValues, separator);\n    }\n    return this.value;\n  }\n\n  toUrlParams() {\n    const prefix = this.urlPrefix;\n\n    let urlParam = this.value;\n    if (this.multiValuesOptions && isArray(this.value)) {\n      urlParam = JSON.stringify(this.value);\n    }\n\n    return {\n      [`${prefix}${this.name}`]: !this.isEmpty ? urlParam : null,\n    };\n  }\n\n  fromUrlParams(query) {\n    const prefix = this.urlPrefix;\n    const key = `${prefix}${this.name}`;\n    if (has(query, key)) {\n      if (this.multiValuesOptions) {\n        try {\n          const valueFromJson = JSON.parse(query[key]);\n          this.setValue(isArray(valueFromJson) ? valueFromJson : query[key]);\n        } catch (e) {\n          this.setValue(query[key]);\n        }\n      } else {\n        this.setValue(query[key]);\n      }\n    }\n  }\n}\n\nexport default EnumParameter;\n","import debug from \"debug\";\nimport moment from \"moment\";\nimport { axios } from \"@/services/axios\";\nimport { QueryResultError } from \"@/services/query\";\nimport { Auth } from \"@/services/auth\";\nimport { isString, uniqBy, each, isNumber, includes, extend, forOwn, get } from \"lodash\";\n\nconst logger = debug(\"redash:services:QueryResult\");\nconst filterTypes = [\"filter\", \"multi-filter\", \"multiFilter\"];\n\nfunction defer() {\n  const result = { onStatusChange: status => {} };\n  result.promise = new Promise((resolve, reject) => {\n    result.resolve = resolve;\n    result.reject = reject;\n  });\n  return result;\n}\n\nfunction getColumnNameWithoutType(column) {\n  let typeSplit;\n  if (column.indexOf(\"::\") !== -1) {\n    typeSplit = \"::\";\n  } else if (column.indexOf(\"__\") !== -1) {\n    typeSplit = \"__\";\n  } else {\n    return column;\n  }\n\n  const parts = column.split(typeSplit);\n  if (parts[0] === \"\" && parts.length === 2) {\n    return parts[1];\n  }\n\n  if (!includes(filterTypes, parts[1])) {\n    return column;\n  }\n\n  return parts[0];\n}\n\nfunction getColumnFriendlyName(column) {\n  return getColumnNameWithoutType(column).replace(/(?:^|\\s)\\S/g, a => a.toUpperCase());\n}\n\nconst createOrSaveUrl = data => (data.id ? `api/query_results/${data.id}` : \"api/query_results\");\nconst QueryResultResource = {\n  get: ({ id }) => axios.get(`api/query_results/${id}`),\n  post: data => axios.post(createOrSaveUrl(data), data),\n};\n\nexport const ExecutionStatus = {\n  WAITING: \"waiting\",\n  PROCESSING: \"processing\",\n  DONE: \"done\",\n  FAILED: \"failed\",\n  LOADING_RESULT: \"loading-result\",\n};\n\nconst statuses = {\n  1: ExecutionStatus.WAITING,\n  2: ExecutionStatus.PROCESSING,\n  3: ExecutionStatus.DONE,\n  4: ExecutionStatus.FAILED,\n};\n\nfunction handleErrorResponse(queryResult, error) {\n  const status = get(error, \"response.status\");\n  switch (status) {\n    case 403:\n      queryResult.update(error.response.data);\n      return;\n    case 400:\n      if (\"job\" in error.response.data) {\n        queryResult.update(error.response.data);\n        return;\n      }\n      break;\n    case 404:\n      queryResult.update({\n        job: {\n          error: \"cached query result unavailable, please execute again.\",\n          status: 4,\n        },\n      });\n      return;\n    // no default\n  }\n\n  logger(\"Unknown error\", error);\n  queryResult.update({\n    job: {\n      error: get(error, \"response.data.message\", \"Unknown error occurred. Please try again later.\"),\n      status: 4,\n    },\n  });\n}\n\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport function fetchDataFromJob(jobId, interval = 1000) {\n  return axios.get(`api/jobs/${jobId}`).then(data => {\n    const status = statuses[data.job.status];\n    if (status === ExecutionStatus.WAITING || status === ExecutionStatus.PROCESSING) {\n      return sleep(interval).then(() => fetchDataFromJob(data.job.id));\n    } else if (status === ExecutionStatus.DONE) {\n      return data.job.result;\n    } else if (status === ExecutionStatus.FAILED) {\n      return Promise.reject(data.job.error);\n    }\n  });\n}\n\nexport function isDateTime(v) {\n  return isString(v) && moment(v).isValid() && /^\\d{4}-\\d{2}-\\d{2}T/.test(v);\n}\n\nclass QueryResult {\n  constructor(props) {\n    this.deferred = defer();\n    this.job = {};\n    this.query_result = {};\n    this.status = \"waiting\";\n\n    this.updatedAt = moment();\n\n    // extended status flags\n    this.isLoadingResult = false;\n\n    if (props) {\n      this.update(props);\n    }\n  }\n\n  update(props) {\n    extend(this, props);\n\n    if (\"query_result\" in props) {\n      this.status = ExecutionStatus.DONE;\n      this.deferred.onStatusChange(ExecutionStatus.DONE);\n\n      const columnTypes = {};\n\n      // TODO: we should stop manipulating incoming data, and switch to relaying\n      // on the column type set by the backend. This logic is prone to errors,\n      // and better be removed. Kept for now, for backward compatability.\n      each(this.query_result.data.rows, row => {\n        forOwn(row, (v, k) => {\n          let newType = null;\n          if (isNumber(v)) {\n            newType = \"float\";\n          } else if (isDateTime(v)) {\n            row[k] = moment.utc(v);\n            newType = \"datetime\";\n          } else if (isString(v) && v.match(/^\\d{4}-\\d{2}-\\d{2}$/)) {\n            row[k] = moment.utc(v);\n            newType = \"date\";\n          } else if (typeof v === \"object\" && v !== null) {\n            row[k] = JSON.stringify(v);\n          } else {\n            newType = \"string\";\n          }\n\n          if (newType !== null) {\n            if (columnTypes[k] !== undefined && columnTypes[k] !== newType) {\n              columnTypes[k] = \"string\";\n            } else {\n              columnTypes[k] = newType;\n            }\n          }\n        });\n      });\n\n      each(this.query_result.data.columns, column => {\n        column.name = \"\" + column.name;\n        if (columnTypes[column.name]) {\n          if (column.type == null || column.type === \"string\") {\n            column.type = columnTypes[column.name];\n          }\n        }\n      });\n\n      this.deferred.resolve(this);\n    } else if (this.job.status === 3 || this.job.status === 2) {\n      this.deferred.onStatusChange(ExecutionStatus.PROCESSING);\n      this.status = \"processing\";\n    } else if (this.job.status === 4) {\n      this.status = statuses[this.job.status];\n      this.deferred.reject(new QueryResultError(this.job.error));\n    } else {\n      this.deferred.onStatusChange(undefined);\n      this.status = undefined;\n    }\n  }\n\n  getId() {\n    let id = null;\n    if (\"query_result\" in this) {\n      id = this.query_result.id;\n    }\n    return id;\n  }\n\n  cancelExecution() {\n    axios.delete(`api/jobs/${this.job.id}`);\n  }\n\n  getStatus() {\n    if (this.isLoadingResult) {\n      return ExecutionStatus.LOADING_RESULT;\n    }\n    return this.status || statuses[this.job.status];\n  }\n\n  getError() {\n    // TODO: move this logic to the server...\n    if (this.job.error === \"None\") {\n      return undefined;\n    }\n\n    return this.job.error;\n  }\n\n  getLog() {\n    if (!this.query_result.data || !this.query_result.data.log || this.query_result.data.log.length === 0) {\n      return null;\n    }\n\n    return this.query_result.data.log;\n  }\n\n  getUpdatedAt() {\n    return this.query_result.retrieved_at || this.job.updated_at * 1000.0 || this.updatedAt;\n  }\n\n  getRuntime() {\n    return this.query_result.runtime;\n  }\n\n  getRawData() {\n    if (!this.query_result.data) {\n      return null;\n    }\n\n    return this.query_result.data.rows;\n  }\n\n  getData() {\n    return this.query_result.data ? this.query_result.data.rows : null;\n  }\n\n  isEmpty() {\n    return this.getData() === null || this.getData().length === 0;\n  }\n\n  getColumns() {\n    if (this.columns === undefined && this.query_result.data) {\n      this.columns = this.query_result.data.columns;\n    }\n\n    return this.columns;\n  }\n\n  getColumnNames() {\n    if (this.columnNames === undefined && this.query_result.data) {\n      this.columnNames = this.query_result.data.columns.map(v => v.name);\n    }\n\n    return this.columnNames;\n  }\n\n  getColumnFriendlyNames() {\n    return this.getColumnNames().map(col => getColumnFriendlyName(col));\n  }\n\n  getTruncated() {\n    return this.query_result.data ? this.query_result.data.truncated : null;\n  }\n\n  getFilters() {\n    if (!this.getColumns()) {\n      return [];\n    }\n\n    const filters = [];\n\n    this.getColumns().forEach(col => {\n      const name = col.name;\n      const type = name.split(\"::\")[1] || name.split(\"__\")[1];\n      if (includes(filterTypes, type)) {\n        // filter found\n        const filter = {\n          name,\n          friendlyName: getColumnFriendlyName(name),\n          column: col,\n          values: [],\n          multiple: type === \"multiFilter\" || type === \"multi-filter\",\n        };\n        filters.push(filter);\n      }\n    }, this);\n\n    this.getRawData().forEach(row => {\n      filters.forEach(filter => {\n        filter.values.push(row[filter.name]);\n        if (filter.values.length === 1) {\n          if (filter.multiple) {\n            filter.current = [row[filter.name]];\n          } else {\n            filter.current = row[filter.name];\n          }\n        }\n      });\n    });\n\n    filters.forEach(filter => {\n      filter.values = uniqBy(filter.values, v => {\n        if (moment.isMoment(v)) {\n          return v.unix();\n        }\n        return v;\n      });\n      if (filter.values.length > 1 && filter.multiple) {\n        filter.current = filter.values.slice();\n      }\n    });\n\n    return filters;\n  }\n\n  toPromise(statusCallback) {\n    if (statusCallback) {\n      this.deferred.onStatusChange = statusCallback;\n    }\n    return this.deferred.promise;\n  }\n\n  static getById(queryId, id) {\n    const queryResult = new QueryResult();\n\n    queryResult.isLoadingResult = true;\n    queryResult.deferred.onStatusChange(ExecutionStatus.LOADING_RESULT);\n\n    axios\n      .get(`api/queries/${queryId}/results/${id}.json`)\n      .then(response => {\n        // Success handler\n        queryResult.isLoadingResult = false;\n        queryResult.update(response);\n      })\n      .catch(error => {\n        // Error handler\n        queryResult.isLoadingResult = false;\n        handleErrorResponse(queryResult, error);\n      });\n\n    return queryResult;\n  }\n\n  loadLatestCachedResult(queryId, parameters) {\n    axios\n      .post(`api/queries/${queryId}/results`, { queryId, parameters })\n      .then(response => {\n        this.update(response);\n      })\n      .catch(error => {\n        handleErrorResponse(this, error);\n      });\n  }\n\n  loadResult(tryCount) {\n    this.isLoadingResult = true;\n    this.deferred.onStatusChange(ExecutionStatus.LOADING_RESULT);\n\n    QueryResultResource.get({ id: this.job.query_result_id })\n      .then(response => {\n        this.update(response);\n        this.isLoadingResult = false;\n      })\n      .catch(error => {\n        if (tryCount === undefined) {\n          tryCount = 0;\n        }\n\n        if (tryCount > 3) {\n          logger(\"Connection error while trying to load result\", error);\n          this.update({\n            job: {\n              error: \"failed communicating with server. Please check your Internet connection and try again.\",\n              status: 4,\n            },\n          });\n          this.isLoadingResult = false;\n        } else {\n          setTimeout(() => {\n            this.loadResult(tryCount + 1);\n          }, 1000 * Math.pow(2, tryCount));\n        }\n      });\n  }\n\n  refreshStatus(query, parameters, tryNumber = 1) {\n    const loadResult = () =>\n      Auth.isAuthenticated() ? this.loadResult() : this.loadLatestCachedResult(query, parameters);\n\n    const request = Auth.isAuthenticated()\n      ? axios.get(`api/jobs/${this.job.id}`)\n      : axios.get(`api/queries/${query}/jobs/${this.job.id}`);\n\n    request\n      .then(jobResponse => {\n        this.update(jobResponse);\n\n        if (this.getStatus() === \"processing\" && this.job.query_result_id && this.job.query_result_id !== \"None\") {\n          loadResult();\n        } else if (this.getStatus() !== \"failed\") {\n          const waitTime = tryNumber > 10 ? 3000 : 500;\n          setTimeout(() => {\n            this.refreshStatus(query, parameters, tryNumber + 1);\n          }, waitTime);\n        }\n      })\n      .catch(error => {\n        logger(\"Connection error\", error);\n        // TODO: use QueryResultError, or better yet: exception/reject of promise.\n        this.update({\n          job: {\n            error: \"failed communicating with server. Please check your Internet connection and try again.\",\n            status: 4,\n          },\n        });\n      });\n  }\n\n  getLink(queryId, fileType, apiKey) {\n    let link = `api/queries/${queryId}/results/${this.getId()}.${fileType}`;\n    if (apiKey) {\n      link = `${link}?api_key=${apiKey}`;\n    }\n    return link;\n  }\n\n  getName(queryName, fileType) {\n    return `${queryName.replace(/ /g, \"_\") + moment(this.getUpdatedAt()).format(\"_YYYY_MM_DD\")}.${fileType}`;\n  }\n\n  static getByQueryId(id, parameters, applyAutoLimit, maxAge) {\n    const queryResult = new QueryResult();\n\n    axios\n      .post(`api/queries/${id}/results`, { id, parameters, apply_auto_limit: applyAutoLimit, max_age: maxAge })\n      .then(response => {\n        queryResult.update(response);\n\n        if (\"job\" in response) {\n          queryResult.refreshStatus(id, parameters);\n        }\n      })\n      .catch(error => {\n        handleErrorResponse(queryResult, error);\n      });\n\n    return queryResult;\n  }\n\n  static get(dataSourceId, query, parameters, applyAutoLimit, maxAge, queryId) {\n    const queryResult = new QueryResult();\n\n    const params = {\n      data_source_id: dataSourceId,\n      parameters,\n      query,\n      apply_auto_limit: applyAutoLimit,\n      max_age: maxAge,\n    };\n\n    if (queryId !== undefined) {\n      params.query_id = queryId;\n    }\n\n    QueryResultResource.post(params)\n      .then(response => {\n        queryResult.update(response);\n\n        if (\"job\" in response) {\n          queryResult.refreshStatus(query, parameters);\n        }\n      })\n      .catch(error => {\n        handleErrorResponse(queryResult, error);\n      });\n\n    return queryResult;\n  }\n}\n\nexport default QueryResult;\n","const PREFIX = \"localOptions:\";\n\nfunction get(key, defaultValue = undefined) {\n  const fullKey = PREFIX + key;\n  if (fullKey in window.localStorage) {\n    return JSON.parse(window.localStorage.getItem(fullKey));\n  }\n  return defaultValue;\n}\n\nfunction set(key, value) {\n  const fullKey = PREFIX + key;\n  window.localStorage.setItem(fullKey, JSON.stringify(value));\n}\n\nexport default {\n  get,\n  set,\n};\n","import moment from \"moment\";\nimport debug from \"debug\";\nimport Mustache from \"mustache\";\nimport { axios } from \"@/services/axios\";\nimport {\n  zipObject,\n  isEmpty,\n  isArray,\n  map,\n  filter,\n  includes,\n  union,\n  uniq,\n  has,\n  identity,\n  extend,\n  each,\n  some,\n  clone,\n  find,\n} from \"lodash\";\nimport location from \"@/services/location\";\n\nimport { Parameter, createParameter } from \"./parameters\";\nimport { currentUser } from \"./auth\";\nimport QueryResult from \"./query-result\";\nimport localOptions from \"@/lib/localOptions\";\n\nMustache.escape = identity; // do not html-escape values\n\nconst logger = debug(\"redash:services:query\");\n\nfunction collectParams(parts) {\n  let parameters = [];\n\n  parts.forEach(part => {\n    if (part[0] === \"name\" || part[0] === \"&\") {\n      parameters.push(part[1].split(\".\")[0]);\n    } else if (part[0] === \"#\") {\n      parameters = union(parameters, collectParams(part[4]));\n    }\n  });\n\n  return parameters;\n}\n\nexport class Query {\n  constructor(query) {\n    extend(this, query);\n\n    if (!has(this, \"options\")) {\n      this.options = {};\n    }\n    this.options.apply_auto_limit = !!this.options.apply_auto_limit;\n\n    if (!isArray(this.options.parameters)) {\n      this.options.parameters = [];\n    }\n  }\n\n  isNew() {\n    return this.id === undefined;\n  }\n\n  hasDailySchedule() {\n    return this.schedule && this.schedule.match(/\\d\\d:\\d\\d/) !== null;\n  }\n\n  scheduleInLocalTime() {\n    const parts = this.schedule.split(\":\");\n    return moment\n      .utc()\n      .hour(parts[0])\n      .minute(parts[1])\n      .local()\n      .format(\"HH:mm\");\n  }\n\n  hasResult() {\n    return !!(this.latest_query_data || this.latest_query_data_id);\n  }\n\n  paramsRequired() {\n    return this.getParameters().isRequired();\n  }\n\n  hasParameters() {\n    return this.getParametersDefs().length > 0;\n  }\n\n  prepareQueryResultExecution(execute, maxAge) {\n    const parameters = this.getParameters();\n    const missingParams = parameters.getMissing();\n\n    if (missingParams.length > 0) {\n      let paramsWord = \"parameter\";\n      let valuesWord = \"value\";\n      if (missingParams.length > 1) {\n        paramsWord = \"parameters\";\n        valuesWord = \"values\";\n      }\n\n      return new QueryResult({\n        job: {\n          error: `missing ${valuesWord} for ${missingParams.join(\", \")} ${paramsWord}.`,\n          status: 4,\n        },\n      });\n    }\n\n    if (parameters.isRequired()) {\n      // Need to clear latest results, to make sure we don't use results for different params.\n      this.latest_query_data = null;\n      this.latest_query_data_id = null;\n    }\n\n    if (this.latest_query_data && maxAge !== 0) {\n      if (!this.queryResult) {\n        this.queryResult = new QueryResult({\n          query_result: this.latest_query_data,\n        });\n      }\n    } else if (this.latest_query_data_id && maxAge !== 0) {\n      if (!this.queryResult) {\n        this.queryResult = QueryResult.getById(this.id, this.latest_query_data_id);\n      }\n    } else {\n      this.queryResult = execute();\n    }\n\n    return this.queryResult;\n  }\n\n  getQueryResult(maxAge) {\n    const execute = () =>\n      QueryResult.getByQueryId(this.id, this.getParameters().getExecutionValues(), this.getAutoLimit(), maxAge);\n    return this.prepareQueryResultExecution(execute, maxAge);\n  }\n\n  getQueryResultByText(maxAge, selectedQueryText) {\n    const queryText = selectedQueryText || this.query;\n    if (!queryText) {\n      return new QueryResultError(\"Can't execute empty query.\");\n    }\n\n    const parameters = this.getParameters().getExecutionValues({ joinListValues: true });\n    const execute = () =>\n      QueryResult.get(this.data_source_id, queryText, parameters, this.getAutoLimit(), maxAge, this.id);\n    return this.prepareQueryResultExecution(execute, maxAge);\n  }\n\n  getUrl(source, hash) {\n    let url = `queries/${this.id}`;\n\n    if (source) {\n      url += \"/source\";\n    }\n\n    let params = {};\n    if (this.getParameters().isRequired()) {\n      this.getParametersDefs().forEach(param => {\n        extend(params, param.toUrlParams());\n      });\n    }\n    Object.keys(params).forEach(key => params[key] == null && delete params[key]);\n    params = map(params, (value, name) => `${encodeURIComponent(name)}=${encodeURIComponent(value)}`).join(\"&\");\n\n    if (params !== \"\") {\n      url += `?${params}`;\n    }\n\n    if (hash) {\n      url += `#${hash}`;\n    }\n\n    return url;\n  }\n\n  getQueryResultPromise() {\n    return this.getQueryResult().toPromise();\n  }\n\n  getParameters() {\n    if (!this.$parameters) {\n      this.$parameters = new Parameters(this, location.search);\n    }\n\n    return this.$parameters;\n  }\n\n  getAutoLimit() {\n    return this.options.apply_auto_limit;\n  }\n\n  getParametersDefs(update = true) {\n    return this.getParameters().get(update);\n  }\n\n  favorite() {\n    return Query.favorite(this);\n  }\n\n  unfavorite() {\n    return Query.unfavorite(this);\n  }\n\n  clone() {\n    const newQuery = clone(this);\n    newQuery.$parameters = null;\n    newQuery.getParameters();\n    return newQuery;\n  }\n}\n\nclass Parameters {\n  constructor(query, queryString) {\n    this.query = query;\n    this.updateParameters();\n    this.initFromQueryString(queryString);\n  }\n\n  parseQuery() {\n    const fallback = () => map(this.query.options.parameters, i => i.name);\n\n    let parameters = [];\n    if (this.query.query !== undefined) {\n      try {\n        const parts = Mustache.parse(this.query.query);\n        parameters = uniq(collectParams(parts));\n      } catch (e) {\n        logger(\"Failed parsing parameters: \", e);\n        // Return current parameters so we don't reset the list\n        parameters = fallback();\n      }\n    } else {\n      parameters = fallback();\n    }\n\n    return parameters;\n  }\n\n  updateParameters(update) {\n    if (this.query.query === this.cachedQueryText) {\n      const parameters = this.query.options.parameters;\n      const hasUnprocessedParameters = find(parameters, p => !(p instanceof Parameter));\n      if (hasUnprocessedParameters) {\n        this.query.options.parameters = map(parameters, p =>\n          p instanceof Parameter ? p : createParameter(p, this.query.id)\n        );\n      }\n      return;\n    }\n\n    this.cachedQueryText = this.query.query;\n    const parameterNames = update ? this.parseQuery() : map(this.query.options.parameters, p => p.name);\n\n    this.query.options.parameters = this.query.options.parameters || [];\n\n    const parametersMap = {};\n    this.query.options.parameters.forEach(param => {\n      parametersMap[param.name] = param;\n    });\n\n    parameterNames.forEach(param => {\n      if (!has(parametersMap, param)) {\n        this.query.options.parameters.push(\n          createParameter({\n            title: param,\n            name: param,\n            type: \"text\",\n            value: null,\n            global: false,\n          })\n        );\n      }\n    });\n\n    const parameterExists = p => includes(parameterNames, p.name);\n    const parameters = this.query.options.parameters;\n    this.query.options.parameters = parameters\n      .filter(parameterExists)\n      .map(p => (p instanceof Parameter ? p : createParameter(p, this.query.id)));\n  }\n\n  initFromQueryString(query) {\n    this.get().forEach(param => {\n      param.fromUrlParams(query);\n    });\n  }\n\n  get(update = true) {\n    this.updateParameters(update);\n    return this.query.options.parameters;\n  }\n\n  add(parameterDef) {\n    this.query.options.parameters = this.query.options.parameters.filter(p => p.name !== parameterDef.name);\n    const param = createParameter(parameterDef);\n    this.query.options.parameters.push(param);\n    return param;\n  }\n\n  getMissing() {\n    return map(\n      filter(this.get(), p => p.isEmpty),\n      i => i.title\n    );\n  }\n\n  isRequired() {\n    return !isEmpty(this.get());\n  }\n\n  getExecutionValues(extra = {}) {\n    const params = this.get();\n    return zipObject(\n      map(params, i => i.name),\n      map(params, i => i.getExecutionValue(extra))\n    );\n  }\n\n  hasPendingValues() {\n    return some(this.get(), p => p.hasPendingValue);\n  }\n\n  applyPendingValues() {\n    each(this.get(), p => p.applyPendingValue());\n  }\n\n  toUrlParams() {\n    if (this.get().length === 0) {\n      return \"\";\n    }\n\n    const params = Object.assign(...this.get().map(p => p.toUrlParams()));\n    Object.keys(params).forEach(key => params[key] == null && delete params[key]);\n    return Object.keys(params)\n      .map(k => `${encodeURIComponent(k)}=${encodeURIComponent(params[k])}`)\n      .join(\"&\");\n  }\n}\n\nexport class QueryResultError {\n  constructor(errorMessage) {\n    this.errorMessage = errorMessage;\n    this.updatedAt = moment.utc();\n  }\n\n  getUpdatedAt() {\n    return this.updatedAt;\n  }\n\n  getError() {\n    return this.errorMessage;\n  }\n\n  toPromise() {\n    return Promise.reject(this);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getStatus() {\n    return \"failed\";\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getData() {\n    return null;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getLog() {\n    return null;\n  }\n}\n\nconst getQuery = query => new Query(query);\nconst saveOrCreateUrl = data => (data.id ? `api/queries/${data.id}` : \"api/queries\");\nconst mapResults = data => ({ ...data, results: map(data.results, getQuery) });\n\nconst QueryService = {\n  query: params => axios.get(\"api/queries\", { params }).then(mapResults),\n  get: data => axios.get(`api/queries/${data.id}`, data).then(getQuery),\n  save: data => axios.post(saveOrCreateUrl(data), data).then(getQuery),\n  delete: data => axios.delete(`api/queries/${data.id}`),\n  recent: params => axios.get(`api/queries/recent`, { params }).then(data => map(data, getQuery)),\n  archive: params => axios.get(`api/queries/archive`, { params }).then(mapResults),\n  myQueries: params => axios.get(\"api/queries/my\", { params }).then(mapResults),\n  fork: ({ id }) => axios.post(`api/queries/${id}/fork`, { id }).then(getQuery),\n  resultById: data => axios.get(`api/queries/${data.id}/results.json`),\n  asDropdown: data => axios.get(`api/queries/${data.id}/dropdown`),\n  associatedDropdown: ({ queryId, dropdownQueryId }) =>\n    axios.get(`api/queries/${queryId}/dropdowns/${dropdownQueryId}`),\n  favorites: params => axios.get(\"api/queries/favorites\", { params }).then(mapResults),\n  favorite: data => axios.post(`api/queries/${data.id}/favorite`),\n  unfavorite: data => axios.delete(`api/queries/${data.id}/favorite`),\n};\n\nQueryService.newQuery = function newQuery() {\n  return new Query({\n    query: \"\",\n    name: \"New Query\",\n    schedule: null,\n    user: currentUser,\n    options: { apply_auto_limit: localOptions.get(\"applyAutoLimit\", true) },\n    tags: [],\n    can_edit: true,\n  });\n};\n\nextend(Query, QueryService);\n","import { isNull, isUndefined, isArray, isEmpty, get, map, join, has } from \"lodash\";\nimport { Query } from \"@/services/query\";\nimport Parameter from \"./Parameter\";\n\nclass QueryBasedDropdownParameter extends Parameter {\n  constructor(parameter, parentQueryId) {\n    super(parameter, parentQueryId);\n    this.queryId = parameter.queryId;\n    this.multiValuesOptions = parameter.multiValuesOptions;\n    this.setValue(parameter.value);\n  }\n\n  normalizeValue(value) {\n    if (isUndefined(value) || isNull(value) || (isArray(value) && isEmpty(value))) {\n      return null;\n    }\n\n    if (this.multiValuesOptions) {\n      value = isArray(value) ? value : [value];\n    } else {\n      value = isArray(value) ? value[0] : value;\n    }\n    return value;\n  }\n\n  getExecutionValue(extra = {}) {\n    const { joinListValues } = extra;\n    if (joinListValues && isArray(this.value)) {\n      const separator = get(this.multiValuesOptions, \"separator\", \",\");\n      const prefix = get(this.multiValuesOptions, \"prefix\", \"\");\n      const suffix = get(this.multiValuesOptions, \"suffix\", \"\");\n      const parameterValues = map(this.value, v => `${prefix}${v}${suffix}`);\n      return join(parameterValues, separator);\n    }\n    return this.value;\n  }\n\n  toUrlParams() {\n    const prefix = this.urlPrefix;\n\n    let urlParam = this.value;\n    if (this.multiValuesOptions && isArray(this.value)) {\n      urlParam = JSON.stringify(this.value);\n    }\n\n    return {\n      [`${prefix}${this.name}`]: !this.isEmpty ? urlParam : null,\n    };\n  }\n\n  fromUrlParams(query) {\n    const prefix = this.urlPrefix;\n    const key = `${prefix}${this.name}`;\n    if (has(query, key)) {\n      if (this.multiValuesOptions) {\n        try {\n          const valueFromJson = JSON.parse(query[key]);\n          this.setValue(isArray(valueFromJson) ? valueFromJson : query[key]);\n        } catch (e) {\n          this.setValue(query[key]);\n        }\n      } else {\n        this.setValue(query[key]);\n      }\n    }\n  }\n\n  loadDropdownValues() {\n    if (this.parentQueryId) {\n      return Query.associatedDropdown({ queryId: this.parentQueryId, dropdownQueryId: this.queryId }).catch(() =>\n        Promise.resolve([])\n      );\n    }\n\n    return Query.asDropdown({ id: this.queryId }).catch(Promise.resolve([]));\n  }\n}\n\nexport default QueryBasedDropdownParameter;\n","import { findKey, startsWith, has, includes, isNull, values } from \"lodash\";\nimport moment from \"moment\";\nimport PropTypes from \"prop-types\";\nimport Parameter from \"./Parameter\";\n\nconst DATETIME_FORMATS = {\n  // eslint-disable-next-line quote-props\n  date: \"YYYY-MM-DD\",\n  \"datetime-local\": \"YYYY-MM-DD HH:mm\",\n  \"datetime-with-seconds\": \"YYYY-MM-DD HH:mm:ss\",\n};\n\nconst DYNAMIC_PREFIX = \"d_\";\n\nconst DYNAMIC_DATES = {\n  now: {\n    name: \"Today/Now\",\n    value: () => moment(),\n  },\n  yesterday: {\n    name: \"Yesterday\",\n    value: () => moment().subtract(1, \"day\"),\n  },\n};\n\nexport const DynamicDateType = PropTypes.oneOf(values(DYNAMIC_DATES));\n\nfunction isDynamicDateString(value) {\n  return startsWith(value, DYNAMIC_PREFIX) && has(DYNAMIC_DATES, value.substring(DYNAMIC_PREFIX.length));\n}\n\nexport function isDynamicDate(value) {\n  return includes(DYNAMIC_DATES, value);\n}\n\nexport function getDynamicDateFromString(value) {\n  if (!isDynamicDateString(value)) {\n    return null;\n  }\n  return DYNAMIC_DATES[value.substring(DYNAMIC_PREFIX.length)];\n}\n\nclass DateParameter extends Parameter {\n  constructor(parameter, parentQueryId) {\n    super(parameter, parentQueryId);\n    this.useCurrentDateTime = parameter.useCurrentDateTime;\n    this.setValue(parameter.value);\n  }\n\n  get hasDynamicValue() {\n    return isDynamicDate(this.normalizedValue);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  normalizeValue(value) {\n    if (isDynamicDateString(value)) {\n      return getDynamicDateFromString(value);\n    }\n\n    if (isDynamicDate(value)) {\n      return value;\n    }\n\n    const normalizedValue = moment(value);\n    return normalizedValue.isValid() ? normalizedValue : null;\n  }\n\n  setValue(value) {\n    const normalizedValue = this.normalizeValue(value);\n    if (isDynamicDate(normalizedValue)) {\n      this.value = DYNAMIC_PREFIX + findKey(DYNAMIC_DATES, normalizedValue);\n    } else if (moment.isMoment(normalizedValue)) {\n      this.value = normalizedValue.format(DATETIME_FORMATS[this.type]);\n    } else {\n      this.value = normalizedValue;\n    }\n    this.$$value = normalizedValue;\n\n    this.updateLocals();\n    this.clearPendingValue();\n    return this;\n  }\n\n  getExecutionValue() {\n    if (this.hasDynamicValue) {\n      return this.normalizedValue.value().format(DATETIME_FORMATS[this.type]);\n    }\n    if (isNull(this.value) && this.useCurrentDateTime) {\n      return moment().format(DATETIME_FORMATS[this.type]);\n    }\n    return this.value;\n  }\n}\n\nexport default DateParameter;\n","import { startsWith, has, includes, findKey, values, isObject, isArray } from \"lodash\";\nimport moment from \"moment\";\nimport PropTypes from \"prop-types\";\nimport Parameter from \"./Parameter\";\n\nconst DATETIME_FORMATS = {\n  \"date-range\": \"YYYY-MM-DD\",\n  \"datetime-range\": \"YYYY-MM-DD HH:mm\",\n  \"datetime-range-with-seconds\": \"YYYY-MM-DD HH:mm:ss\",\n};\n\nconst DYNAMIC_PREFIX = \"d_\";\n\n/**\n * Dynamic date range preset value with end set to current time\n * @param from {function(): moment.Moment}\n * @param now {function(): moment.Moment=} moment - defaults to now\n * @returns {function(withNow: boolean): [moment.Moment, moment.Moment|undefined]}\n */\nconst untilNow = (from, now = () => moment()) => (withNow = true) => [from(), withNow ? now() : undefined];\n\nconst DYNAMIC_DATE_RANGES = {\n  today: {\n    name: \"Today\",\n    value: () => [moment().startOf(\"day\"), moment().endOf(\"day\")],\n  },\n  yesterday: {\n    name: \"Yesterday\",\n    value: () => [\n      moment()\n        .subtract(1, \"day\")\n        .startOf(\"day\"),\n      moment()\n        .subtract(1, \"day\")\n        .endOf(\"day\"),\n    ],\n  },\n  this_week: {\n    name: \"This week\",\n    value: () => [moment().startOf(\"week\"), moment().endOf(\"week\")],\n  },\n  this_month: {\n    name: \"This month\",\n    value: () => [moment().startOf(\"month\"), moment().endOf(\"month\")],\n  },\n  this_year: {\n    name: \"This year\",\n    value: () => [moment().startOf(\"year\"), moment().endOf(\"year\")],\n  },\n  last_week: {\n    name: \"Last week\",\n    value: () => [\n      moment()\n        .subtract(1, \"week\")\n        .startOf(\"week\"),\n      moment()\n        .subtract(1, \"week\")\n        .endOf(\"week\"),\n    ],\n  },\n  last_month: {\n    name: \"Last month\",\n    value: () => [\n      moment()\n        .subtract(1, \"month\")\n        .startOf(\"month\"),\n      moment()\n        .subtract(1, \"month\")\n        .endOf(\"month\"),\n    ],\n  },\n  last_year: {\n    name: \"Last year\",\n    value: () => [\n      moment()\n        .subtract(1, \"year\")\n        .startOf(\"year\"),\n      moment()\n        .subtract(1, \"year\")\n        .endOf(\"year\"),\n    ],\n  },\n  last_hour: {\n    name: \"Last hour\",\n    value: untilNow(() => moment().subtract(1, \"hour\")),\n  },\n  last_8_hours: {\n    name: \"Last 8 hours\",\n    value: untilNow(() => moment().subtract(8, \"hour\")),\n  },\n  last_24_hours: {\n    name: \"Last 24 hours\",\n    value: untilNow(() => moment().subtract(24, \"hour\")),\n  },\n  last_7_days: {\n    name: \"Last 7 days\",\n    value: untilNow(\n      () =>\n        moment()\n          .subtract(7, \"days\")\n          .startOf(\"day\"),\n      () => moment().endOf(\"day\")\n    ),\n  },\n  last_14_days: {\n    name: \"Last 14 days\",\n    value: untilNow(\n      () =>\n        moment()\n          .subtract(14, \"days\")\n          .startOf(\"day\"),\n      () => moment().endOf(\"day\")\n    ),\n  },\n  last_30_days: {\n    name: \"Last 30 days\",\n    value: untilNow(\n      () =>\n        moment()\n          .subtract(30, \"days\")\n          .startOf(\"day\"),\n      () => moment().endOf(\"day\")\n    ),\n  },\n  last_60_days: {\n    name: \"Last 60 days\",\n    value: untilNow(\n      () =>\n        moment()\n          .subtract(60, \"days\")\n          .startOf(\"day\"),\n      () => moment().endOf(\"day\")\n    ),\n  },\n  last_90_days: {\n    name: \"Last 90 days\",\n    value: untilNow(\n      () =>\n        moment()\n          .subtract(90, \"days\")\n          .startOf(\"day\"),\n      () => moment().endOf(\"day\")\n    ),\n  },\n  last_12_months: {\n    name: \"Last 12 months\",\n    value: untilNow(\n      () =>\n        moment()\n          .subtract(12, \"months\")\n          .startOf(\"day\"),\n      () => moment().endOf(\"day\")\n    ),\n  },\n};\n\nexport const DynamicDateRangeType = PropTypes.oneOf(values(DYNAMIC_DATE_RANGES));\n\nexport function isDynamicDateRangeString(value) {\n  if (!startsWith(value, DYNAMIC_PREFIX)) {\n    return false;\n  }\n  return !!DYNAMIC_DATE_RANGES[value.substring(DYNAMIC_PREFIX.length)];\n}\n\nexport function getDynamicDateRangeStringFromName(dynamicRangeName) {\n  const key = findKey(DYNAMIC_DATE_RANGES, range => range.name === dynamicRangeName);\n  return key ? DYNAMIC_PREFIX + key : undefined;\n}\n\nexport function isDynamicDateRange(value) {\n  return includes(DYNAMIC_DATE_RANGES, value);\n}\n\nexport function getDynamicDateRangeFromString(value) {\n  if (!isDynamicDateRangeString(value)) {\n    return null;\n  }\n  return DYNAMIC_DATE_RANGES[value.substring(DYNAMIC_PREFIX.length)];\n}\n\nclass DateRangeParameter extends Parameter {\n  constructor(parameter, parentQueryId) {\n    super(parameter, parentQueryId);\n    this.setValue(parameter.value);\n  }\n\n  get hasDynamicValue() {\n    return isDynamicDateRange(this.normalizedValue);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  normalizeValue(value) {\n    if (isDynamicDateRangeString(value)) {\n      return getDynamicDateRangeFromString(value);\n    }\n\n    if (isDynamicDateRange(value)) {\n      return value;\n    }\n\n    if (isObject(value) && !isArray(value)) {\n      value = [value.start, value.end];\n    }\n\n    if (isArray(value) && value.length === 2) {\n      value = [moment(value[0]), moment(value[1])];\n      if (value[0].isValid() && value[1].isValid()) {\n        return value;\n      }\n    }\n    return null;\n  }\n\n  setValue(value) {\n    const normalizedValue = this.normalizeValue(value);\n    if (isDynamicDateRange(normalizedValue)) {\n      this.value = DYNAMIC_PREFIX + findKey(DYNAMIC_DATE_RANGES, normalizedValue);\n    } else if (isArray(normalizedValue)) {\n      this.value = {\n        start: normalizedValue[0].format(DATETIME_FORMATS[this.type]),\n        end: normalizedValue[1].format(DATETIME_FORMATS[this.type]),\n      };\n    } else {\n      this.value = normalizedValue;\n    }\n    this.$$value = normalizedValue;\n\n    this.updateLocals();\n    this.clearPendingValue();\n    return this;\n  }\n\n  getExecutionValue() {\n    if (this.hasDynamicValue) {\n      const format = date => date.format(DATETIME_FORMATS[this.type]);\n      const [start, end] = this.normalizedValue.value().map(format);\n      return { start, end };\n    }\n    return this.value;\n  }\n\n  toUrlParams() {\n    const prefix = this.urlPrefix;\n    if (isObject(this.value) && this.value.start && this.value.end) {\n      return {\n        [`${prefix}${this.name}`]: `${this.value.start}--${this.value.end}`,\n      };\n    }\n    return super.toUrlParams();\n  }\n\n  fromUrlParams(query) {\n    const prefix = this.urlPrefix;\n    const key = `${prefix}${this.name}`;\n\n    // backward compatibility\n    const keyStart = `${prefix}${this.name}.start`;\n    const keyEnd = `${prefix}${this.name}.end`;\n\n    if (has(query, key)) {\n      const dates = query[key].split(\"--\");\n      if (dates.length === 2) {\n        this.setValue(dates);\n      } else {\n        this.setValue(query[key]);\n      }\n    } else if (has(query, keyStart) && has(query, keyEnd)) {\n      this.setValue([query[keyStart], query[keyEnd]]);\n    }\n  }\n\n  toQueryTextFragment() {\n    return `{{ ${this.name}.start }} {{ ${this.name}.end }}`;\n  }\n}\n\nexport default DateRangeParameter;\n","import Parameter from \"./Parameter\";\nimport TextParameter from \"./TextParameter\";\nimport NumberParameter from \"./NumberParameter\";\nimport EnumParameter from \"./EnumParameter\";\nimport QueryBasedDropdownParameter from \"./QueryBasedDropdownParameter\";\nimport DateParameter from \"./DateParameter\";\nimport DateRangeParameter from \"./DateRangeParameter\";\n\nfunction createParameter(param, parentQueryId) {\n  switch (param.type) {\n    case \"number\":\n      return new NumberParameter(param, parentQueryId);\n    case \"enum\":\n      return new EnumParameter(param, parentQueryId);\n    case \"query\":\n      return new QueryBasedDropdownParameter(param, parentQueryId);\n    case \"date\":\n    case \"datetime-local\":\n    case \"datetime-with-seconds\":\n      return new DateParameter(param, parentQueryId);\n    case \"date-range\":\n    case \"datetime-range\":\n    case \"datetime-range-with-seconds\":\n      return new DateRangeParameter(param, parentQueryId);\n    default:\n      return new TextParameter({ ...param, type: \"text\" }, parentQueryId);\n  }\n}\n\nfunction cloneParameter(param) {\n  return createParameter(param, param.parentQueryId);\n}\n\nexport {\n  Parameter,\n  TextParameter,\n  NumberParameter,\n  EnumParameter,\n  QueryBasedDropdownParameter,\n  DateParameter,\n  DateRangeParameter,\n  createParameter,\n  cloneParameter,\n};\n","import moment from \"moment\";\nimport { axios } from \"@/services/axios\";\nimport {\n  each,\n  pick,\n  extend,\n  isObject,\n  truncate,\n  keys,\n  difference,\n  filter,\n  map,\n  merge,\n  sortBy,\n  indexOf,\n  size,\n  includes,\n} from \"lodash\";\nimport location from \"@/services/location\";\nimport { cloneParameter } from \"@/services/parameters\";\nimport dashboardGridOptions from \"@/config/dashboard-grid-options\";\nimport { registeredVisualizations } from \"@redash/viz/lib\";\nimport { Query } from \"./query\";\n\nexport const WidgetTypeEnum = {\n  TEXTBOX: \"textbox\",\n  VISUALIZATION: \"visualization\",\n  RESTRICTED: \"restricted\",\n};\n\nfunction calculatePositionOptions(widget) {\n  widget.width = 1; // Backward compatibility, user on back-end\n\n  const visualizationOptions = {\n    autoHeight: false,\n    sizeX: Math.round(dashboardGridOptions.columns / 2),\n    sizeY: dashboardGridOptions.defaultSizeY,\n    minSizeX: dashboardGridOptions.minSizeX,\n    maxSizeX: dashboardGridOptions.maxSizeX,\n    minSizeY: dashboardGridOptions.minSizeY,\n    maxSizeY: dashboardGridOptions.maxSizeY,\n  };\n\n  const config = widget.visualization ? registeredVisualizations[widget.visualization.type] : null;\n  if (isObject(config)) {\n    if (Object.prototype.hasOwnProperty.call(config, \"autoHeight\")) {\n      visualizationOptions.autoHeight = config.autoHeight;\n    }\n\n    // Width constraints\n    const minColumns = parseInt(config.minColumns, 10);\n    if (isFinite(minColumns) && minColumns >= 0) {\n      visualizationOptions.minSizeX = minColumns;\n    }\n    const maxColumns = parseInt(config.maxColumns, 10);\n    if (isFinite(maxColumns) && maxColumns >= 0) {\n      visualizationOptions.maxSizeX = Math.min(maxColumns, dashboardGridOptions.columns);\n    }\n\n    // Height constraints\n    // `minRows` is preferred, but it should be kept for backward compatibility\n    const height = parseInt(config.height, 10);\n    if (isFinite(height)) {\n      visualizationOptions.minSizeY = Math.ceil(height / dashboardGridOptions.rowHeight);\n    }\n    const minRows = parseInt(config.minRows, 10);\n    if (isFinite(minRows)) {\n      visualizationOptions.minSizeY = minRows;\n    }\n    const maxRows = parseInt(config.maxRows, 10);\n    if (isFinite(maxRows) && maxRows >= 0) {\n      visualizationOptions.maxSizeY = maxRows;\n    }\n\n    // Default dimensions\n    const defaultWidth = parseInt(config.defaultColumns, 10);\n    if (isFinite(defaultWidth) && defaultWidth > 0) {\n      visualizationOptions.sizeX = defaultWidth;\n    }\n    const defaultHeight = parseInt(config.defaultRows, 10);\n    if (isFinite(defaultHeight) && defaultHeight > 0) {\n      visualizationOptions.sizeY = defaultHeight;\n    }\n  }\n\n  return visualizationOptions;\n}\n\nexport const ParameterMappingType = {\n  DashboardLevel: \"dashboard-level\",\n  WidgetLevel: \"widget-level\",\n  StaticValue: \"static-value\",\n};\n\nclass Widget {\n  static MappingType = ParameterMappingType;\n\n  constructor(data) {\n    // Copy properties\n    extend(this, data);\n\n    const visualizationOptions = calculatePositionOptions(this);\n\n    this.options = this.options || {};\n    this.options.position = extend(\n      {},\n      visualizationOptions,\n      pick(this.options.position, [\"col\", \"row\", \"sizeX\", \"sizeY\", \"autoHeight\"])\n    );\n\n    if (this.options.position.sizeY < 0) {\n      this.options.position.autoHeight = true;\n    }\n  }\n\n  get type() {\n    if (this.visualization) {\n      return WidgetTypeEnum.VISUALIZATION;\n    } else if (this.restricted) {\n      return WidgetTypeEnum.RESTRICTED;\n    }\n    return WidgetTypeEnum.TEXTBOX;\n  }\n\n  getQuery() {\n    if (!this.query && this.visualization) {\n      this.query = new Query(this.visualization.query);\n    }\n\n    return this.query;\n  }\n\n  getQueryResult() {\n    return this.data;\n  }\n\n  getName() {\n    if (this.visualization) {\n      return `${this.visualization.query.name} (${this.visualization.name})`;\n    }\n    return truncate(this.text, 20);\n  }\n\n  load(force, maxAge) {\n    if (!this.visualization) {\n      return Promise.resolve();\n    }\n\n    // Both `this.data` and `this.queryResult` are query result objects;\n    // `this.data` is last loaded query result;\n    // `this.queryResult` is currently loading query result;\n    // while widget is refreshing, `this.data` !== `this.queryResult`\n\n    if (force || this.queryResult === undefined) {\n      this.loading = true;\n      this.refreshStartedAt = moment();\n\n      if (maxAge === undefined || force) {\n        maxAge = force ? 0 : undefined;\n      }\n\n      const queryResult = this.getQuery().getQueryResult(maxAge);\n      this.queryResult = queryResult;\n\n      queryResult\n        .toPromise()\n        .then(result => {\n          if (this.queryResult === queryResult) {\n            this.loading = false;\n            this.data = result;\n          }\n          return result;\n        })\n        .catch(error => {\n          if (this.queryResult === queryResult) {\n            this.loading = false;\n            this.data = error;\n          }\n          return error;\n        });\n    }\n\n    return this.queryResult.toPromise();\n  }\n\n  save(key, value) {\n    const data = pick(this, \"options\", \"text\", \"id\", \"width\", \"dashboard_id\", \"visualization_id\");\n    if (key && value) {\n      data[key] = merge({}, data[key], value); // done like this so `this.options` doesn't get updated by side-effect\n    }\n\n    let url = \"api/widgets\";\n    if (this.id) {\n      url = `${url}/${this.id}`;\n    }\n\n    return axios.post(url, data).then(data => {\n      each(data, (v, k) => {\n        this[k] = v;\n      });\n\n      return this;\n    });\n  }\n\n  delete() {\n    const url = `api/widgets/${this.id}`;\n    return axios.delete(url);\n  }\n\n  isStaticParam(param) {\n    const mappings = this.getParameterMappings();\n    const mappingType = mappings[param.name].type;\n    return mappingType === Widget.MappingType.StaticValue;\n  }\n\n  getParametersDefs() {\n    const mappings = this.getParameterMappings();\n    // textboxes does not have query\n    const params = this.getQuery() ? this.getQuery().getParametersDefs() : [];\n\n    const queryParams = location.search;\n\n    const localTypes = [Widget.MappingType.WidgetLevel, Widget.MappingType.StaticValue];\n    const localParameters = map(\n      filter(params, param => localTypes.indexOf(mappings[param.name].type) >= 0),\n      param => {\n        const mapping = mappings[param.name];\n        const result = cloneParameter(param);\n        result.title = mapping.title || param.title;\n        result.locals = [param];\n        result.urlPrefix = `p_w${this.id}_`;\n        if (mapping.type === Widget.MappingType.StaticValue) {\n          result.setValue(mapping.value);\n        } else {\n          result.fromUrlParams(queryParams);\n        }\n        return result;\n      }\n    );\n\n    // order widget params using paramOrder\n    return sortBy(localParameters, param =>\n      includes(this.options.paramOrder, param.name)\n        ? indexOf(this.options.paramOrder, param.name)\n        : size(this.options.paramOrder)\n    );\n  }\n\n  getParameterMappings() {\n    if (!isObject(this.options.parameterMappings)) {\n      this.options.parameterMappings = {};\n    }\n\n    const existingParams = {};\n    // textboxes does not have query\n    const params = this.getQuery() ? this.getQuery().getParametersDefs(false) : [];\n    each(params, param => {\n      existingParams[param.name] = true;\n      if (!isObject(this.options.parameterMappings[param.name])) {\n        // \"migration\" for old dashboards: parameters with `global` flag\n        // should be mapped to a dashboard-level parameter with the same name\n        this.options.parameterMappings[param.name] = {\n          name: param.name,\n          type: param.global ? Widget.MappingType.DashboardLevel : Widget.MappingType.WidgetLevel,\n          mapTo: param.name, // map to param with the same name\n          value: null, // for StaticValue\n          title: \"\", // Use parameter's title\n        };\n      }\n    });\n\n    // Remove mappings for parameters that do not exists anymore\n    const removedParams = difference(keys(this.options.parameterMappings), keys(existingParams));\n    each(removedParams, name => {\n      delete this.options.parameterMappings[name];\n    });\n\n    return this.options.parameterMappings;\n  }\n\n  getLocalParameters() {\n    return filter(this.getParametersDefs(), param => !this.isStaticParam(param));\n  }\n}\n\nexport default Widget;\n","import _ from \"lodash\";\nimport { axios } from \"@/services/axios\";\nimport dashboardGridOptions from \"@/config/dashboard-grid-options\";\nimport Widget from \"./widget\";\nimport location from \"@/services/location\";\nimport { cloneParameter } from \"@/services/parameters\";\nimport { policy } from \"@/services/policy\";\n\nexport const urlForDashboard = ({ id, slug }) => `dashboards/${id}-${slug}`;\n\nexport function collectDashboardFilters(dashboard, queryResults, urlParams) {\n  const filters = {};\n  _.each(queryResults, queryResult => {\n    const queryFilters = queryResult && queryResult.getFilters ? queryResult.getFilters() : [];\n    _.each(queryFilters, queryFilter => {\n      const hasQueryStringValue = _.has(urlParams, queryFilter.name);\n\n      if (!(hasQueryStringValue || dashboard.dashboard_filters_enabled)) {\n        // If dashboard filters not enabled, or no query string value given,\n        // skip filters linking.\n        return;\n      }\n\n      if (hasQueryStringValue) {\n        queryFilter.current = urlParams[queryFilter.name];\n      }\n\n      const filter = { ...queryFilter };\n      if (!_.has(filters, queryFilter.name)) {\n        filters[filter.name] = filter;\n      } else {\n        filters[filter.name].values = _.union(filters[filter.name].values, filter.values);\n      }\n    });\n  });\n\n  return _.values(filters);\n}\n\nfunction prepareWidgetsForDashboard(widgets) {\n  // Default height for auto-height widgets.\n  // Compute biggest widget size and choose between it and some magic number.\n  // This value should be big enough so auto-height widgets will not overlap other ones.\n  const defaultWidgetSizeY =\n    Math.max(\n      _.chain(widgets)\n        .map(w => w.options.position.sizeY)\n        .max()\n        .value(),\n      20\n    ) + 5;\n\n  // Fix layout:\n  // 1. sort and group widgets by row\n  // 2. update position of widgets in each row - place it right below\n  //    biggest widget from previous row\n  _.chain(widgets)\n    .sortBy(widget => widget.options.position.row)\n    .groupBy(widget => widget.options.position.row)\n    .reduce((row, widgetsAtRow) => {\n      let height = 1;\n      _.each(widgetsAtRow, widget => {\n        height = Math.max(\n          height,\n          widget.options.position.autoHeight ? defaultWidgetSizeY : widget.options.position.sizeY\n        );\n        widget.options.position.row = row;\n        if (widget.options.position.sizeY < 1) {\n          widget.options.position.sizeY = defaultWidgetSizeY;\n        }\n      });\n      return row + height;\n    }, 0)\n    .value();\n\n  // Sort widgets by updated column and row value\n  widgets = _.sortBy(widgets, widget => widget.options.position.col);\n  widgets = _.sortBy(widgets, widget => widget.options.position.row);\n\n  return widgets;\n}\n\nfunction calculateNewWidgetPosition(existingWidgets, newWidget) {\n  const width = _.extend({ sizeX: dashboardGridOptions.defaultSizeX }, _.extend({}, newWidget.options).position).sizeX;\n\n  // Find first free row for each column\n  const bottomLine = _.chain(existingWidgets)\n    .map(w => {\n      const options = _.extend({}, w.options);\n      const position = _.extend({ row: 0, sizeY: 0 }, options.position);\n      return {\n        left: position.col,\n        top: position.row,\n        right: position.col + position.sizeX,\n        bottom: position.row + position.sizeY,\n        width: position.sizeX,\n        height: position.sizeY,\n      };\n    })\n    .reduce((result, item) => {\n      const from = Math.max(item.left, 0);\n      const to = Math.min(item.right, result.length + 1);\n      for (let i = from; i < to; i += 1) {\n        result[i] = Math.max(result[i], item.bottom);\n      }\n      return result;\n    }, _.map(new Array(dashboardGridOptions.columns), _.constant(0)))\n    .value();\n\n  // Go through columns, pick them by count necessary to hold new block,\n  // and calculate bottom-most free row per group.\n  // Choose group with the top-most free row (comparing to other groups)\n  return _.chain(_.range(0, dashboardGridOptions.columns - width + 1))\n    .map(col => ({\n      col,\n      row: _.chain(bottomLine)\n        .slice(col, col + width)\n        .max()\n        .value(),\n    }))\n    .sortBy(\"row\")\n    .first()\n    .value();\n}\n\nexport function Dashboard(dashboard) {\n  _.extend(this, dashboard);\n  Object.defineProperty(this, \"url\", {\n    get: function() {\n      return urlForDashboard(this);\n    },\n  });\n}\n\nfunction prepareDashboardWidgets(widgets) {\n  return prepareWidgetsForDashboard(_.map(widgets, widget => new Widget(widget)));\n}\n\nfunction transformSingle(dashboard) {\n  dashboard = new Dashboard(dashboard);\n  if (dashboard.widgets) {\n    dashboard.widgets = prepareDashboardWidgets(dashboard.widgets);\n  }\n  dashboard.publicAccessEnabled = dashboard.public_url !== undefined;\n  return dashboard;\n}\n\nfunction transformResponse(data) {\n  if (data.results) {\n    data = { ...data, results: _.map(data.results, transformSingle) };\n  } else {\n    data = transformSingle(data);\n  }\n  return data;\n}\n\nconst saveOrCreateUrl = data => (data.id ? `api/dashboards/${data.id}` : \"api/dashboards\");\nconst DashboardService = {\n  get: ({ id, slug }) => {\n    const params = {};\n    if (!id) {\n      params.legacy = null;\n    }\n    return axios.get(`api/dashboards/${id || slug}`, { params }).then(transformResponse);\n  },\n  getByToken: ({ token }) => axios.get(`api/dashboards/public/${token}`).then(transformResponse),\n  save: data => axios.post(saveOrCreateUrl(data), data).then(transformResponse),\n  delete: ({ id }) => axios.delete(`api/dashboards/${id}`).then(transformResponse),\n  query: params => axios.get(\"api/dashboards\", { params }).then(transformResponse),\n  recent: params => axios.get(\"api/dashboards/recent\", { params }).then(transformResponse),\n  myDashboards: params => axios.get(\"api/dashboards/my\", { params }).then(transformResponse),\n  favorites: params => axios.get(\"api/dashboards/favorites\", { params }).then(transformResponse),\n  favorite: ({ id }) => axios.post(`api/dashboards/${id}/favorite`),\n  unfavorite: ({ id }) => axios.delete(`api/dashboards/${id}/favorite`),\n  fork: ({ id }) => axios.post(`api/dashboards/${id}/fork`, { id }).then(transformResponse),\n};\n\n_.extend(Dashboard, DashboardService);\n\nDashboard.prepareDashboardWidgets = prepareDashboardWidgets;\nDashboard.prepareWidgetsForDashboard = prepareWidgetsForDashboard;\n\nDashboard.prototype.canEdit = function canEdit() {\n  return policy.canEdit(this);\n};\n\nDashboard.prototype.getParametersDefs = function getParametersDefs() {\n  const globalParams = {};\n  const queryParams = location.search;\n  _.each(this.widgets, widget => {\n    if (widget.getQuery()) {\n      const mappings = widget.getParameterMappings();\n      widget\n        .getQuery()\n        .getParametersDefs(false)\n        .forEach(param => {\n          const mapping = mappings[param.name];\n          if (mapping.type === Widget.MappingType.DashboardLevel) {\n            // create global param\n            if (!globalParams[mapping.mapTo]) {\n              globalParams[mapping.mapTo] = cloneParameter(param);\n              globalParams[mapping.mapTo].name = mapping.mapTo;\n              globalParams[mapping.mapTo].title = mapping.title || param.title;\n              globalParams[mapping.mapTo].locals = [];\n            }\n\n            // add to locals list\n            globalParams[mapping.mapTo].locals.push(param);\n          }\n        });\n    }\n  });\n  const resultingGlobalParams = _.values(\n    _.each(globalParams, param => {\n      param.setValue(param.value); // apply global param value to all locals\n      param.fromUrlParams(queryParams); // try to initialize from url (may do nothing)\n    })\n  );\n\n  // order dashboard params using paramOrder\n  return _.sortBy(resultingGlobalParams, param =>\n    _.includes(this.options.globalParamOrder, param.name)\n      ? _.indexOf(this.options.globalParamOrder, param.name)\n      : _.size(this.options.globalParamOrder)\n  );\n};\n\nDashboard.prototype.addWidget = function addWidget(textOrVisualization, options = {}) {\n  const props = {\n    dashboard_id: this.id,\n    options: {\n      ...options,\n      isHidden: false,\n      position: {},\n    },\n    text: \"\",\n    visualization_id: null,\n    visualization: null,\n  };\n\n  if (_.isString(textOrVisualization)) {\n    props.text = textOrVisualization;\n  } else if (_.isObject(textOrVisualization)) {\n    props.visualization_id = textOrVisualization.id;\n    props.visualization = textOrVisualization;\n  } else {\n    // TODO: Throw an error?\n  }\n\n  const widget = new Widget(props);\n\n  const position = calculateNewWidgetPosition(this.widgets, widget);\n  widget.options.position.col = position.col;\n  widget.options.position.row = position.row;\n\n  return widget.save().then(() => {\n    this.widgets = [...this.widgets, widget];\n    return widget;\n  });\n};\n\nDashboard.prototype.favorite = function favorite() {\n  return Dashboard.favorite(this);\n};\n\nDashboard.prototype.unfavorite = function unfavorite() {\n  return Dashboard.unfavorite(this);\n};\n\nDashboard.prototype.getUrl = function getUrl() {\n  return urlForDashboard(this);\n};\n","import { trim } from \"lodash\";\nimport React, { useState } from \"react\";\nimport Modal from \"antd/lib/modal\";\nimport Input from \"antd/lib/input\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport navigateTo from \"@/components/ApplicationArea/navigateTo\";\nimport recordEvent from \"@/services/recordEvent\";\nimport { policy } from \"@/services/policy\";\nimport { Dashboard } from \"@/services/dashboard\";\n\nfunction CreateDashboardDialog({ dialog }) {\n  const [name, setName] = useState(\"\");\n  const [isValid, setIsValid] = useState(false);\n  const [saveInProgress, setSaveInProgress] = useState(false);\n  const isCreateDashboardEnabled = policy.isCreateDashboardEnabled();\n\n  function handleNameChange(event) {\n    const value = trim(event.target.value);\n    setName(value);\n    setIsValid(value !== \"\");\n  }\n\n  function save() {\n    if (name !== \"\") {\n      setSaveInProgress(true);\n\n      Dashboard.save({ name }).then(data => {\n        dialog.close();\n        navigateTo(`${data.url}?edit`);\n      });\n      recordEvent(\"create\", \"dashboard\");\n    }\n  }\n\n  return (\n    <Modal\n      {...dialog.props}\n      {...(isCreateDashboardEnabled ? {} : { footer: null })}\n      title=\"New Dashboard\"\n      okText=\"Save\"\n      cancelText=\"Close\"\n      okButtonProps={{\n        disabled: !isValid || saveInProgress,\n        loading: saveInProgress,\n        \"data-test\": \"DashboardSaveButton\",\n      }}\n      cancelButtonProps={{\n        disabled: saveInProgress,\n      }}\n      onOk={save}\n      closable={!saveInProgress}\n      maskClosable={!saveInProgress}\n      wrapProps={{\n        \"data-test\": \"CreateDashboardDialog\",\n      }}>\n      <DynamicComponent name=\"CreateDashboardDialogExtra\" disabled={!isCreateDashboardEnabled}>\n        <Input\n          defaultValue={name}\n          onChange={handleNameChange}\n          onPressEnter={save}\n          placeholder=\"Dashboard Name\"\n          aria-label=\"Dashboard name\"\n          disabled={saveInProgress}\n          autoFocus\n        />\n      </DynamicComponent>\n    </Modal>\n  );\n}\n\nCreateDashboardDialog.propTypes = {\n  dialog: DialogPropType.isRequired,\n};\n\nexport default wrapDialog(CreateDashboardDialog);\n","import { isString, isObject, isFunction, extend, omit, sortBy, find, filter } from \"lodash\";\nimport { stripBase } from \"@/components/ApplicationArea/Router\";\nimport { currentUser } from \"@/services/auth\";\n\nclass SettingsMenuItem {\n  constructor(menuItem) {\n    extend(this, { pathPrefix: `/${menuItem.path}` }, omit(menuItem, [\"isActive\", \"isAvailable\"]));\n    if (isFunction(menuItem.isActive)) {\n      this.isActive = menuItem.isActive;\n    }\n    if (isFunction(menuItem.isAvailable)) {\n      this.isAvailable = menuItem.isAvailable;\n    }\n  }\n\n  isActive(path) {\n    return path.startsWith(this.pathPrefix);\n  }\n\n  isAvailable() {\n    return this.permission === undefined || currentUser.hasPermission(this.permission);\n  }\n}\n\nclass SettingsMenu {\n  items = [];\n\n  add(id, item) {\n    id = isString(id) ? id : null;\n    this.remove(id);\n    if (isObject(item)) {\n      this.items.push(new SettingsMenuItem({ ...item, id }));\n      this.items = sortBy(this.items, \"order\");\n    }\n  }\n\n  remove(id) {\n    if (isString(id)) {\n      this.items = filter(this.items, item => item.id !== id);\n      // removing item does not change order of other items, so no need to sort\n    }\n  }\n\n  getAvailableItems() {\n    return filter(this.items, item => item.isAvailable());\n  }\n\n  getActiveItem(path) {\n    const strippedPath = stripBase(path);\n    return find(this.items, item => item.isActive(strippedPath));\n  }\n}\n\nexport default new SettingsMenu();\n","import React from \"react\";\nimport { clientConfig } from \"@/services/auth\";\nimport frontendVersion from \"@/version.json\";\n\nexport default function VersionInfo() {\n  return (\n    <React.Fragment>\n      <div>\n        Version: {clientConfig.version}\n        {frontendVersion !== clientConfig.version && ` (${frontendVersion.substring(0, 8)})`}\n      </div>\n    </React.Fragment>\n  );\n}\n","import React, { useMemo } from \"react\";\nimport { first, includes } from \"lodash\";\nimport Menu from \"antd/lib/menu\";\nimport Link from \"@/components/Link\";\nimport PlainButton from \"@/components/PlainButton\";\nimport HelpTrigger from \"@/components/HelpTrigger\";\nimport CreateDashboardDialog from \"@/components/dashboards/CreateDashboardDialog\";\nimport { useCurrentRoute } from \"@/components/ApplicationArea/Router\";\nimport { Auth, currentUser } from \"@/services/auth\";\nimport settingsMenu from \"@/services/settingsMenu\";\nimport logoUrl from \"@/assets/images/redash_icon_small.png\";\n\nimport DesktopOutlinedIcon from \"@ant-design/icons/DesktopOutlined\";\nimport CodeOutlinedIcon from \"@ant-design/icons/CodeOutlined\";\nimport AlertOutlinedIcon from \"@ant-design/icons/AlertOutlined\";\nimport PlusOutlinedIcon from \"@ant-design/icons/PlusOutlined\";\nimport QuestionCircleOutlinedIcon from \"@ant-design/icons/QuestionCircleOutlined\";\nimport SettingOutlinedIcon from \"@ant-design/icons/SettingOutlined\";\nimport VersionInfo from \"./VersionInfo\";\n\nimport \"./DesktopNavbar.less\";\n\nfunction NavbarSection({ children, ...props }) {\n  return (\n    <Menu selectable={false} mode=\"vertical\" theme=\"dark\" {...props}>\n      {children}\n    </Menu>\n  );\n}\n\nfunction useNavbarActiveState() {\n  const currentRoute = useCurrentRoute();\n\n  return useMemo(\n    () => ({\n      dashboards: includes(\n        [\n          \"Dashboards.List\",\n          \"Dashboards.Favorites\",\n          \"Dashboards.My\",\n          \"Dashboards.ViewOrEdit\",\n          \"Dashboards.LegacyViewOrEdit\",\n        ],\n        currentRoute.id\n      ),\n      queries: includes(\n        [\n          \"Queries.List\",\n          \"Queries.Favorites\",\n          \"Queries.Archived\",\n          \"Queries.My\",\n          \"Queries.View\",\n          \"Queries.New\",\n          \"Queries.Edit\",\n        ],\n        currentRoute.id\n      ),\n      dataSources: includes([\"DataSources.List\"], currentRoute.id),\n      alerts: includes([\"Alerts.List\", \"Alerts.New\", \"Alerts.View\", \"Alerts.Edit\"], currentRoute.id),\n    }),\n    [currentRoute.id]\n  );\n}\n\nexport default function DesktopNavbar() {\n  const firstSettingsTab = first(settingsMenu.getAvailableItems());\n\n  const activeState = useNavbarActiveState();\n\n  const canCreateQuery = currentUser.hasPermission(\"create_query\");\n  const canCreateDashboard = currentUser.hasPermission(\"create_dashboard\");\n  const canCreateAlert = currentUser.hasPermission(\"list_alerts\");\n\n  return (\n    <nav className=\"desktop-navbar\">\n      <NavbarSection className=\"desktop-navbar-logo\">\n        <div role=\"menuitem\">\n          <Link href=\"./\">\n            <img src={logoUrl} alt=\"Redash\" />\n          </Link>\n        </div>\n      </NavbarSection>\n\n      <NavbarSection>\n        {currentUser.hasPermission(\"list_dashboards\") && (\n          <Menu.Item key=\"dashboards\" className={activeState.dashboards ? \"navbar-active-item\" : null}>\n            <Link href=\"dashboards\">\n              <DesktopOutlinedIcon aria-label=\"Dashboard navigation button\" />\n              <span className=\"desktop-navbar-label\">Dashboards</span>\n            </Link>\n          </Menu.Item>\n        )}\n        {currentUser.hasPermission(\"view_query\") && (\n          <Menu.Item key=\"queries\" className={activeState.queries ? \"navbar-active-item\" : null}>\n            <Link href=\"queries\">\n              <CodeOutlinedIcon aria-label=\"Queries navigation button\" />\n              <span className=\"desktop-navbar-label\">Queries</span>\n            </Link>\n          </Menu.Item>\n        )}\n        {currentUser.hasPermission(\"list_alerts\") && (\n          <Menu.Item key=\"alerts\" className={activeState.alerts ? \"navbar-active-item\" : null}>\n            <Link href=\"alerts\">\n              <AlertOutlinedIcon aria-label=\"Alerts navigation button\" />\n              <span className=\"desktop-navbar-label\">Alerts</span>\n            </Link>\n          </Menu.Item>\n        )}\n      </NavbarSection>\n\n      <NavbarSection className=\"desktop-navbar-spacer\">\n        {(canCreateQuery || canCreateDashboard || canCreateAlert) && (\n          <Menu.SubMenu\n            key=\"create\"\n            popupClassName=\"desktop-navbar-submenu\"\n            data-test=\"CreateButton\"\n            tabIndex={0}\n            title={\n              <React.Fragment>\n                <PlusOutlinedIcon />\n                <span className=\"desktop-navbar-label\">Create</span>\n              </React.Fragment>\n            }>\n            {canCreateQuery && (\n              <Menu.Item key=\"new-query\">\n                <Link href=\"queries/new\" data-test=\"CreateQueryMenuItem\">\n                  New Query\n                </Link>\n              </Menu.Item>\n            )}\n            {canCreateDashboard && (\n              <Menu.Item key=\"new-dashboard\">\n                <PlainButton data-test=\"CreateDashboardMenuItem\" onClick={() => CreateDashboardDialog.showModal()}>\n                  New Dashboard\n                </PlainButton>\n              </Menu.Item>\n            )}\n            {canCreateAlert && (\n              <Menu.Item key=\"new-alert\">\n                <Link data-test=\"CreateAlertMenuItem\" href=\"alerts/new\">\n                  New Alert\n                </Link>\n              </Menu.Item>\n            )}\n          </Menu.SubMenu>\n        )}\n      </NavbarSection>\n\n      <NavbarSection>\n        <Menu.Item key=\"help\">\n          <HelpTrigger showTooltip={false} type=\"HOME\" tabIndex={0}>\n            <QuestionCircleOutlinedIcon />\n            <span className=\"desktop-navbar-label\">Help</span>\n          </HelpTrigger>\n        </Menu.Item>\n        {firstSettingsTab && (\n          <Menu.Item key=\"settings\" className={activeState.dataSources ? \"navbar-active-item\" : null}>\n            <Link href={firstSettingsTab.path} data-test=\"SettingsLink\">\n              <SettingOutlinedIcon />\n              <span className=\"desktop-navbar-label\">Settings</span>\n            </Link>\n          </Menu.Item>\n        )}\n      </NavbarSection>\n\n      <NavbarSection className=\"desktop-navbar-profile-menu\">\n        <Menu.SubMenu\n          key=\"profile\"\n          popupClassName=\"desktop-navbar-submenu\"\n          tabIndex={0}\n          title={\n            <span data-test=\"ProfileDropdown\" className=\"desktop-navbar-profile-menu-title\">\n              <img className=\"profile__image_thumb\" src={currentUser.profile_image_url} alt={currentUser.name} />\n            </span>\n          }>\n          <Menu.Item key=\"profile\">\n            <Link href=\"users/me\">Profile</Link>\n          </Menu.Item>\n          {currentUser.hasPermission(\"super_admin\") && (\n            <Menu.Item key=\"status\">\n              <Link href=\"admin/status\">System Status</Link>\n            </Menu.Item>\n          )}\n          <Menu.Divider />\n          <Menu.Item key=\"logout\">\n            <PlainButton data-test=\"LogOutButton\" onClick={() => Auth.logout()}>\n              Log out\n            </PlainButton>\n          </Menu.Item>\n          <Menu.Divider />\n          <Menu.Item key=\"version\" role=\"presentation\" disabled className=\"version-info\">\n            <VersionInfo />\n          </Menu.Item>\n        </Menu.SubMenu>\n      </NavbarSection>\n    </nav>\n  );\n}\n","import { first } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"antd/lib/button\";\nimport MenuOutlinedIcon from \"@ant-design/icons/MenuOutlined\";\nimport Dropdown from \"antd/lib/dropdown\";\nimport Menu from \"antd/lib/menu\";\nimport Link from \"@/components/Link\";\nimport { Auth, currentUser } from \"@/services/auth\";\nimport settingsMenu from \"@/services/settingsMenu\";\nimport logoUrl from \"@/assets/images/redash_icon_small.png\";\n\nimport \"./MobileNavbar.less\";\n\nexport default function MobileNavbar({ getPopupContainer }) {\n  const firstSettingsTab = first(settingsMenu.getAvailableItems());\n\n  return (\n    <div className=\"mobile-navbar\">\n      <div className=\"mobile-navbar-logo\">\n        <Link href=\"./\">\n          <img src={logoUrl} alt=\"Redash\" />\n        </Link>\n      </div>\n      <div>\n        <Dropdown\n          overlayStyle={{ minWidth: 200 }}\n          trigger={[\"click\"]}\n          getPopupContainer={getPopupContainer} // so the overlay menu stays with the fixed header when page scrolls\n          overlay={\n            <Menu mode=\"vertical\" theme=\"dark\" selectable={false} className=\"mobile-navbar-menu\">\n              {currentUser.hasPermission(\"list_dashboards\") && (\n                <Menu.Item key=\"dashboards\">\n                  <Link href=\"dashboards\">Dashboards</Link>\n                </Menu.Item>\n              )}\n              {currentUser.hasPermission(\"view_query\") && (\n                <Menu.Item key=\"queries\">\n                  <Link href=\"queries\">Queries</Link>\n                </Menu.Item>\n              )}\n              {currentUser.hasPermission(\"list_alerts\") && (\n                <Menu.Item key=\"alerts\">\n                  <Link href=\"alerts\">Alerts</Link>\n                </Menu.Item>\n              )}\n              <Menu.Item key=\"profile\">\n                <Link href=\"users/me\">Edit Profile</Link>\n              </Menu.Item>\n              <Menu.Divider />\n              {firstSettingsTab && (\n                <Menu.Item key=\"settings\">\n                  <Link href={firstSettingsTab.path}>Settings</Link>\n                </Menu.Item>\n              )}\n              {currentUser.hasPermission(\"super_admin\") && (\n                <Menu.Item key=\"status\">\n                  <Link href=\"admin/status\">System Status</Link>\n                </Menu.Item>\n              )}\n              {currentUser.hasPermission(\"super_admin\") && <Menu.Divider />}\n              <Menu.Item key=\"help\">\n                {/* eslint-disable-next-line react/jsx-no-target-blank */}\n                <Link href=\"https://redash.io/help\" target=\"_blank\" rel=\"noopener\">\n                  Help\n                </Link>\n              </Menu.Item>\n              <Menu.Item key=\"logout\" onClick={() => Auth.logout()}>\n                Log out\n              </Menu.Item>\n            </Menu>\n          }>\n          <Button className=\"mobile-navbar-toggle-button\" ghost>\n            <MenuOutlinedIcon />\n          </Button>\n        </Dropdown>\n      </div>\n    </div>\n  );\n}\n\nMobileNavbar.propTypes = {\n  getPopupContainer: PropTypes.func,\n};\n\nMobileNavbar.defaultProps = {\n  getPopupContainer: null,\n};\n","import React, { useRef, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport DesktopNavbar from \"./DesktopNavbar\";\nimport MobileNavbar from \"./MobileNavbar\";\n\nimport \"./index.less\";\n\nexport default function ApplicationLayout({ children }) {\n  const mobileNavbarContainerRef = useRef();\n\n  const getMobileNavbarPopupContainer = useCallback(() => mobileNavbarContainerRef.current, []);\n\n  return (\n    <React.Fragment>\n      <DynamicComponent name=\"ApplicationWrapper\">\n        <div className=\"application-layout-side-menu\">\n          <DynamicComponent name=\"ApplicationDesktopNavbar\">\n            <DesktopNavbar />\n          </DynamicComponent>\n        </div>\n        <div className=\"application-layout-content\">\n          <nav className=\"application-layout-top-menu\" ref={mobileNavbarContainerRef}>\n            <DynamicComponent name=\"ApplicationMobileNavbar\" getPopupContainer={getMobileNavbarPopupContainer}>\n              <MobileNavbar getPopupContainer={getMobileNavbarPopupContainer} />\n            </DynamicComponent>\n          </nav>\n          {children}\n        </div>\n      </DynamicComponent>\n    </React.Fragment>\n  );\n}\n\nApplicationLayout.propTypes = {\n  children: PropTypes.node,\n};\n\nApplicationLayout.defaultProps = {\n  children: null,\n};\n","import React, { useEffect, useState } from \"react\";\nimport ErrorBoundary, { ErrorBoundaryContext } from \"@redash/viz/lib/components/ErrorBoundary\";\nimport { Auth } from \"@/services/auth\";\nimport { policy } from \"@/services/policy\";\nimport { CurrentRoute } from \"@/services/routes\";\nimport organizationStatus from \"@/services/organizationStatus\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport ApplicationLayout from \"./ApplicationLayout\";\nimport ErrorMessage from \"./ErrorMessage\";\n\nexport type UserSessionWrapperRenderChildrenProps<P> = {\n  pageTitle?: string;\n  onError: (error: Error) => void;\n} & P;\n\nexport interface UserSessionWrapperProps<P> {\n  render: (props: UserSessionWrapperRenderChildrenProps<P>) => React.ReactNode;\n  currentRoute: CurrentRoute<P>;\n  bodyClass?: string;\n}\n\n// This wrapper modifies `route.render` function and instead of passing `currentRoute` passes an object\n// that contains:\n// - `currentRoute.routeParams`\n// - `pageTitle` field which is equal to `currentRoute.title`\n// - `onError` field which is a `handleError` method of nearest error boundary\n\nexport function UserSessionWrapper<P>({ bodyClass, currentRoute, render }: UserSessionWrapperProps<P>) {\n  const [isAuthenticated, setIsAuthenticated] = useState(!!Auth.isAuthenticated());\n  useEffect(() => {\n    let isCancelled = false;\n    Promise.all([Auth.requireSession(), organizationStatus.refresh(), policy.refresh()])\n      .then(() => {\n        if (!isCancelled) {\n          setIsAuthenticated(!!Auth.isAuthenticated());\n        }\n      })\n      .catch(() => {\n        if (!isCancelled) {\n          setIsAuthenticated(false);\n        }\n      });\n    return () => {\n      isCancelled = true;\n    };\n  }, []);\n\n  useEffect(() => {\n    if (bodyClass) {\n      document.body.classList.toggle(bodyClass, true);\n      return () => {\n        document.body.classList.toggle(bodyClass, false);\n      };\n    }\n  }, [bodyClass]);\n\n  if (!isAuthenticated) {\n    return null;\n  }\n\n  return (\n    <ApplicationLayout>\n      <React.Fragment key={currentRoute.key}>\n        {/* @ts-expect-error FIXME */}\n        <ErrorBoundary renderError={(error: Error) => <ErrorMessage error={error} />}>\n          <ErrorBoundaryContext.Consumer>\n            {(\n              {\n                handleError,\n              } /* : { handleError: UserSessionWrapperRenderChildrenProps<P>[\"onError\"] } FIXME bring back type */\n            ) => render({ ...currentRoute.routeParams, pageTitle: currentRoute.title, onError: handleError })}\n          </ErrorBoundaryContext.Consumer>\n        </ErrorBoundary>\n      </React.Fragment>\n    </ApplicationLayout>\n  );\n}\n\nexport type RouteWithUserSessionOptions<P> = {\n  render: (props: UserSessionWrapperRenderChildrenProps<P>) => React.ReactNode;\n  bodyClass?: string;\n  title: string;\n  path: string;\n};\n\nexport const UserSessionWrapperDynamicComponentName = \"UserSessionWrapper\";\n\nexport default function routeWithUserSession<P extends {} = {}>({\n  render: originalRender,\n  bodyClass,\n  ...rest\n}: RouteWithUserSessionOptions<P>) {\n  return {\n    ...rest,\n    render: (currentRoute: CurrentRoute<P>) => {\n      const props = {\n        render: originalRender,\n        bodyClass,\n        currentRoute,\n      };\n      return (\n        <DynamicComponent\n          {...props}\n          name={UserSessionWrapperDynamicComponentName}\n          fallback={<UserSessionWrapper {...props} />}\n        />\n      );\n    },\n  };\n}\n","import { keys, some } from \"lodash\";\nimport React, { useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport CloseOutlinedIcon from \"@ant-design/icons/CloseOutlined\";\nimport Link from \"@/components/Link\";\nimport PlainButton from \"@/components/PlainButton\";\nimport CreateDashboardDialog from \"@/components/dashboards/CreateDashboardDialog\";\nimport HelpTrigger from \"@/components/HelpTrigger\";\nimport { currentUser } from \"@/services/auth\";\nimport organizationStatus from \"@/services/organizationStatus\";\n\nimport \"./empty-state.less\";\n\nexport function Step({ show, completed, text, url, urlText, onClick }) {\n  if (!show) {\n    return null;\n  }\n\n  const commonProps = { children: urlText, onClick };\n\n  return (\n    <li className={classNames({ done: completed })}>\n      {url ? <Link href={url} {...commonProps} /> : <PlainButton type=\"link\" {...commonProps} />} {text}\n    </li>\n  );\n}\n\nStep.propTypes = {\n  show: PropTypes.bool.isRequired,\n  completed: PropTypes.bool.isRequired,\n  text: PropTypes.node,\n  url: PropTypes.string,\n  urlTarget: PropTypes.string,\n  urlText: PropTypes.node,\n  onClick: PropTypes.func,\n};\n\nStep.defaultProps = {\n  url: null,\n  urlTarget: null,\n  urlText: null,\n  text: null,\n  onClick: null,\n};\n\nexport function EmptyStateHelpMessage({ helpTriggerType }) {\n  return (\n    <p>\n      Need more support?{\" \"}\n      <HelpTrigger className=\"f-14\" type={helpTriggerType} showTooltip={false}>\n        See our Help\n      </HelpTrigger>\n    </p>\n  );\n}\n\nEmptyStateHelpMessage.propTypes = {\n  helpTriggerType: PropTypes.string.isRequired,\n};\n\nfunction EmptyState({\n  icon,\n  header,\n  description,\n  illustration,\n  helpMessage,\n  closable,\n  onClose,\n  onboardingMode,\n  showAlertStep,\n  showDashboardStep,\n  showDataSourceStep,\n  showInviteStep,\n  getStepsItems,\n  illustrationPath,\n}) {\n  const isAvailable = {\n    dataSource: showDataSourceStep,\n    query: true,\n    alert: showAlertStep,\n    dashboard: showDashboardStep,\n    inviteUsers: showInviteStep,\n  };\n\n  const isCompleted = {\n    dataSource: organizationStatus.objectCounters.data_sources > 0,\n    query: organizationStatus.objectCounters.queries > 0,\n    alert: organizationStatus.objectCounters.alerts > 0,\n    dashboard: organizationStatus.objectCounters.dashboards > 0,\n    inviteUsers: organizationStatus.objectCounters.users > 1,\n  };\n\n  const showCreateDashboardDialog = useCallback(() => {\n    CreateDashboardDialog.showModal();\n  }, []);\n\n  // Show if `onboardingMode=false` or any requested step not completed\n  const shouldShow = !onboardingMode || some(keys(isAvailable), step => isAvailable[step] && !isCompleted[step]);\n\n  if (!shouldShow) {\n    return null;\n  }\n\n  const renderDataSourcesStep = () => {\n    if (currentUser.isAdmin) {\n      return (\n        <Step\n          key=\"dataSources\"\n          show={isAvailable.dataSource}\n          completed={isCompleted.dataSource}\n          url=\"data_sources/new\"\n          urlText=\"Connect a Data Source\"\n        />\n      );\n    }\n\n    return (\n      <Step\n        key=\"dataSources\"\n        show={isAvailable.dataSource}\n        completed={isCompleted.dataSource}\n        text=\"Ask an account admin to connect a data source\"\n      />\n    );\n  };\n\n  const defaultStepsItems = [\n    {\n      key: \"dataSources\",\n      node: renderDataSourcesStep(),\n    },\n    {\n      key: \"queries\",\n      node: (\n        <Step\n          key=\"queries\"\n          show={isAvailable.query}\n          completed={isCompleted.query}\n          url=\"queries/new\"\n          urlText=\"Create your first Query\"\n        />\n      ),\n    },\n    {\n      key: \"alerts\",\n      node: (\n        <Step\n          key=\"alerts\"\n          show={isAvailable.alert}\n          completed={isCompleted.alert}\n          url=\"alerts/new\"\n          urlText=\"Create your first Alert\"\n        />\n      ),\n    },\n    {\n      key: \"dashboards\",\n      node: (\n        <Step\n          key=\"dashboards\"\n          show={isAvailable.dashboard}\n          completed={isCompleted.dashboard}\n          onClick={showCreateDashboardDialog}\n          urlText=\"Create your first Dashboard\"\n        />\n      ),\n    },\n    {\n      key: \"users\",\n      node: (\n        <Step\n          key=\"users\"\n          show={isAvailable.inviteUsers}\n          completed={isCompleted.inviteUsers}\n          url=\"users/new\"\n          urlText=\"Invite your team members\"\n        />\n      ),\n    },\n  ];\n\n  const stepsItems = getStepsItems ? getStepsItems(defaultStepsItems) : defaultStepsItems;\n  const imageSource = illustrationPath ? illustrationPath : \"static/images/illustrations/\" + illustration + \".svg\";\n\n  return (\n    <div className=\"empty-state-wrapper\">\n      <div className=\"empty-state bg-white tiled\">\n        <div className=\"empty-state__summary\">\n          {header && <h4>{header}</h4>}\n          <h2>\n            <i className={icon} aria-hidden=\"true\" />\n          </h2>\n          <p>{description}</p>\n          <img src={imageSource} alt={illustration + \" Illustration\"} width=\"75%\" />\n        </div>\n        <div className=\"empty-state__steps\">\n          <h4>Let&apos;s get started</h4>\n          <ol>{stepsItems.map(item => item.node)}</ol>\n          {helpMessage}\n        </div>\n      </div>\n      {closable && (\n        <PlainButton className=\"close-button\" aria-label=\"Close\" onClick={onClose}>\n          <CloseOutlinedIcon />\n        </PlainButton>\n      )}\n    </div>\n  );\n}\n\nEmptyState.propTypes = {\n  icon: PropTypes.string,\n  header: PropTypes.string,\n  description: PropTypes.string.isRequired,\n  illustration: PropTypes.string.isRequired,\n  illustrationPath: PropTypes.string,\n  helpMessage: PropTypes.node,\n  closable: PropTypes.bool,\n  onClose: PropTypes.func,\n\n  onboardingMode: PropTypes.bool,\n  showAlertStep: PropTypes.bool,\n  showDashboardStep: PropTypes.bool,\n  showDataSourceStep: PropTypes.bool,\n  showInviteStep: PropTypes.bool,\n\n  getStepItems: PropTypes.func,\n};\n\nEmptyState.defaultProps = {\n  icon: null,\n  header: null,\n  helpMessage: null,\n  closable: false,\n  onClose: () => {},\n\n  onboardingMode: false,\n  showAlertStep: false,\n  showDashboardStep: false,\n  showDataSourceStep: true,\n  showInviteStep: false,\n};\n\nexport default EmptyState;\n","import notification from \"antd/lib/notification\";\n\nnotification.config({\n  placement: \"bottomRight\",\n  duration: 3,\n});\n\nconst simpleNotification = {};\n\n[\"success\", \"error\", \"info\", \"warning\", \"warn\"].forEach(action => {\n  // eslint-disable-next-line arrow-body-style\n  simpleNotification[action] = (message, description = null, props = null) => {\n    return notification[action]({ ...props, message, description });\n  };\n});\n\nexport default {\n  // export Ant's notification and replace actions\n  ...notification,\n  ...simpleNotification,\n};\n","import { isString, isObject, filter, sortBy } from \"lodash\";\nimport React from \"react\";\nimport { Context, Route as UniversalRouterRoute } from \"universal-router\";\nimport pathToRegexp from \"path-to-regexp\";\n\nexport interface CurrentRoute<P> {\n  id: string | null;\n  key?: string;\n  title: string;\n  routeParams: P;\n}\n\nexport interface RedashRoute<P = {}, C extends Context = Context, R = any> extends UniversalRouterRoute<C, R> {\n  path: string; // we don't use other UniversalRouterRoute options, path should be available and should be a string\n  key?: string; // generated in Router.jsx\n  title: string;\n  render?: (currentRoute: CurrentRoute<P>) => React.ReactNode;\n  getApiKey?: () => string;\n}\n\ninterface RouteItem extends RedashRoute<any> {\n  id: string | null;\n}\n\nfunction getRouteParamsCount(path: string) {\n  const tokens = pathToRegexp.parse(path);\n  return filter(tokens, isObject).length;\n}\n\nclass Routes {\n  _items: RouteItem[] = [];\n  _sorted = false;\n\n  get items(): RouteItem[] {\n    if (!this._sorted) {\n      this._items = sortBy(this._items, [\n        item => getRouteParamsCount(item.path), // simple definitions first, with more params - last\n        item => -item.path.length, // longer first\n        item => item.path, // if same type and length - sort alphabetically\n      ]);\n      this._sorted = true;\n    }\n    return this._items;\n  }\n\n  public register<P>(id: string, route: RedashRoute<P>) {\n    const idOrNull = isString(id) ? id : null;\n    this.unregister(idOrNull);\n    if (isObject(route)) {\n      this._items = [...this.items, { ...route, id: idOrNull }];\n      this._sorted = false;\n    }\n  }\n\n  public unregister(id: string | null) {\n    if (isString(id)) {\n      // removing item does not break their order (if already sorted)\n      this._items = filter(this.items, item => item.id !== id);\n    }\n  }\n}\n\nexport default new Routes();\n","import { isEmpty } from \"lodash\";\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Link from \"@/components/Link\";\nimport LoadingOutlinedIcon from \"@ant-design/icons/LoadingOutlined\";\n\nimport { Dashboard } from \"@/services/dashboard\";\nimport { Query } from \"@/services/query\";\n\nexport function FavoriteList({ title, resource, itemUrl, emptyState }) {\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setLoading(true);\n    resource\n      .favorites()\n      .then(({ results }) => setItems(results))\n      .finally(() => setLoading(false));\n  }, [resource]);\n\n  return (\n    <>\n      <div className=\"d-flex align-items-center m-b-20\">\n        <p className=\"flex-fill f-500 c-black m-0\">{title}</p>\n        {loading && <LoadingOutlinedIcon />}\n      </div>\n      {!isEmpty(items) && (\n        <div role=\"list\" className=\"list-group\">\n          {items.map(item => (\n            <Link key={itemUrl(item)} role=\"listitem\" className=\"list-group-item\" href={itemUrl(item)}>\n              <span className=\"btn-favorite m-r-5\">\n                <i className=\"fa fa-star\" aria-hidden=\"true\" />\n              </span>\n              {item.name}\n              {item.is_draft && <span className=\"label label-default m-l-5\">Unpublished</span>}\n            </Link>\n          ))}\n        </div>\n      )}\n      {isEmpty(items) && !loading && emptyState}\n    </>\n  );\n}\n\nFavoriteList.propTypes = {\n  title: PropTypes.string.isRequired,\n  resource: PropTypes.func.isRequired, // eslint-disable-line react/forbid-prop-types\n  itemUrl: PropTypes.func.isRequired,\n  emptyState: PropTypes.node,\n};\nFavoriteList.defaultProps = { emptyState: null };\n\nexport function DashboardAndQueryFavoritesList() {\n  return (\n    <div className=\"tile\">\n      <div className=\"t-body tb-padding\">\n        <div className=\"row home-favorites-list\">\n          <div className=\"col-sm-6 m-t-20\">\n            <FavoriteList\n              title=\"Favorite Dashboards\"\n              resource={Dashboard}\n              itemUrl={dashboard => dashboard.url}\n              emptyState={\n                <p>\n                  <span className=\"btn-favorite m-r-5\">\n                    <i className=\"fa fa-star\" aria-hidden=\"true\" />\n                  </span>\n                  Favorite <Link href=\"dashboards\">Dashboards</Link> will appear here\n                </p>\n              }\n            />\n          </div>\n          <div className=\"col-sm-6 m-t-20\">\n            <FavoriteList\n              title=\"Favorite Queries\"\n              resource={Query}\n              itemUrl={query => `queries/${query.id}`}\n              emptyState={\n                <p>\n                  <span className=\"btn-favorite m-r-5\">\n                    <i className=\"fa fa-star\" aria-hidden=\"true\" />\n                  </span>\n                  Favorite <Link href=\"queries\">Queries</Link> will appear here\n                </p>\n              }\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { includes } from \"lodash\";\nimport React, { useEffect } from \"react\";\n\nimport Alert from \"antd/lib/alert\";\nimport Link from \"@/components/Link\";\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport EmptyState, { EmptyStateHelpMessage } from \"@/components/empty-state/EmptyState\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport PlainButton from \"@/components/PlainButton\";\n\nimport { axios } from \"@/services/axios\";\nimport recordEvent from \"@/services/recordEvent\";\nimport { messages } from \"@/services/auth\";\nimport notification from \"@/services/notification\";\nimport routes from \"@/services/routes\";\n\nimport { DashboardAndQueryFavoritesList } from \"./components/FavoritesList\";\n\nimport \"./Home.less\";\n\nfunction DeprecatedEmbedFeatureAlert() {\n  return (\n    <Alert\n      className=\"m-b-15\"\n      type=\"warning\"\n      message={\n        <>\n          You have enabled <code>ALLOW_PARAMETERS_IN_EMBEDS</code>. This setting is now deprecated and should be turned\n          off. Parameters in embeds are supported by default.{\" \"}\n          <Link\n            href=\"https://discuss.redash.io/t/support-for-parameters-in-embedded-visualizations/3337\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\">\n            Read more\n          </Link>\n          .\n        </>\n      }\n    />\n  );\n}\n\nfunction EmailNotVerifiedAlert() {\n  const verifyEmail = () => {\n    axios.post(\"verification_email/\").then(data => {\n      notification.success(data.message);\n    });\n  };\n\n  return (\n    <Alert\n      className=\"m-b-15\"\n      type=\"warning\"\n      message={\n        <>\n          We have sent an email with a confirmation link to your email address. Please follow the link to verify your\n          email address.{\" \"}\n          <PlainButton type=\"link\" onClick={verifyEmail}>\n            Resend email\n          </PlainButton>\n          .\n        </>\n      }\n    />\n  );\n}\n\nexport default function Home() {\n  useEffect(() => {\n    recordEvent(\"view\", \"page\", \"personal_homepage\");\n  }, []);\n\n  return (\n    <div className=\"home-page\">\n      <div className=\"container\">\n        {includes(messages, \"using-deprecated-embed-feature\") && <DeprecatedEmbedFeatureAlert />}\n        {includes(messages, \"email-not-verified\") && <EmailNotVerifiedAlert />}\n        <DynamicComponent name=\"Home.EmptyState\">\n          <EmptyState\n            header=\"Welcome to Redash 👋\"\n            description=\"Connect to any data source, easily visualize and share your data\"\n            illustration=\"dashboard\"\n            helpMessage={<EmptyStateHelpMessage helpTriggerType=\"GETTING_STARTED\" />}\n            showDashboardStep\n            showInviteStep\n            onboardingMode\n          />\n        </DynamicComponent>\n        <DynamicComponent name=\"HomeExtra\" />\n        <DashboardAndQueryFavoritesList />\n      </div>\n    </div>\n  );\n}\n\nroutes.register(\n  \"Home\",\n  routeWithUserSession({\n    path: \"/\",\n    title: \"Redash\",\n    render: pageProps => <Home {...pageProps} />,\n  })\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./index.less\";\n\nexport default function PageHeader({ title, actions }) {\n  return (\n    <div className=\"page-header-wrapper\">\n      <h3>{title}</h3>\n      {actions && <div className=\"page-header-actions\">{actions}</div>}\n    </div>\n  );\n}\n\nPageHeader.propTypes = {\n  title: PropTypes.string,\n  actions: PropTypes.node,\n};\n\nPageHeader.defaultProps = {\n  title: \"\",\n  actions: null,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Menu from \"antd/lib/menu\";\nimport PageHeader from \"@/components/PageHeader\";\nimport Link from \"@/components/Link\";\n\nimport \"./layout.less\";\n\nexport default function Layout({ activeTab, children }) {\n  return (\n    <div className=\"admin-page-layout\">\n      <div className=\"container\">\n        <PageHeader title=\"Admin\" />\n        <div className=\"bg-white tiled\">\n          <Menu selectedKeys={[activeTab]} selectable={false} mode=\"horizontal\">\n            <Menu.Item key=\"system_status\">\n              <Link href=\"admin/status\">System Status</Link>\n            </Menu.Item>\n            <Menu.Item key=\"jobs\">\n              <Link href=\"admin/queries/jobs\">RQ Status</Link>\n            </Menu.Item>\n            <Menu.Item key=\"outdated_queries\">\n              <Link href=\"admin/queries/outdated\">Outdated Queries</Link>\n            </Menu.Item>\n          </Menu>\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nLayout.propTypes = {\n  activeTab: PropTypes.string,\n  children: PropTypes.node,\n};\n\nLayout.defaultProps = {\n  activeTab: \"system_status\",\n  children: null,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport PlainButton from \"@/components/PlainButton\";\n\nexport default class FavoritesControl extends React.Component {\n  static propTypes = {\n    item: PropTypes.shape({\n      is_favorite: PropTypes.bool.isRequired,\n    }).isRequired,\n    onChange: PropTypes.func,\n  };\n\n  static defaultProps = {\n    onChange: () => {},\n  };\n\n  toggleItem(event, item, callback) {\n    const action = item.is_favorite ? item.unfavorite.bind(item) : item.favorite.bind(item);\n    const savedIsFavorite = item.is_favorite;\n\n    action().then(() => {\n      item.is_favorite = !savedIsFavorite;\n      this.forceUpdate();\n      callback();\n    });\n  }\n\n  render() {\n    const { item, onChange } = this.props;\n    const icon = item.is_favorite ? \"fa fa-star\" : \"fa fa-star-o\";\n    const title = item.is_favorite ? \"Remove from favorites\" : \"Add to favorites\";\n    return (\n      <PlainButton\n        title={title}\n        aria-label={title}\n        className=\"favorites-control btn-favorite\"\n        onClick={event => this.toggleItem(event, item, onChange)}>\n        <i className={icon} aria-hidden=\"true\" />\n      </PlainButton>\n    );\n  }\n}\n","import PropTypes from \"prop-types\";\nimport { wrap } from \"lodash\";\nimport moment from \"moment\";\n\nexport const DataSource = PropTypes.shape({\n  syntax: PropTypes.string,\n  options: PropTypes.shape({\n    doc: PropTypes.string,\n    doc_url: PropTypes.string,\n  }),\n  type_name: PropTypes.string,\n});\n\nexport const Table = PropTypes.shape({\n  columns: PropTypes.arrayOf(PropTypes.string).isRequired,\n});\n\nexport const Schema = PropTypes.arrayOf(Table);\n\nexport const RefreshScheduleType = PropTypes.shape({\n  interval: PropTypes.number,\n  time: PropTypes.string,\n  day_of_week: PropTypes.string,\n  until: PropTypes.string,\n});\n\nexport const RefreshScheduleDefault = {\n  interval: null,\n  time: null,\n  day_of_week: null,\n  until: null,\n};\n\nexport const UserProfile = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  profileImageUrl: PropTypes.string,\n  apiKey: PropTypes.string,\n  isDisabled: PropTypes.bool,\n});\n\nexport const Destination = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  icon: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n});\n\nexport const Query = PropTypes.shape({\n  id: PropTypes.any.isRequired,\n  name: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  data_source_id: PropTypes.any.isRequired,\n  created_at: PropTypes.string.isRequired,\n  updated_at: PropTypes.string,\n  user: UserProfile,\n  query: PropTypes.string,\n  queryHash: PropTypes.string,\n  is_safe: PropTypes.bool.isRequired,\n  is_draft: PropTypes.bool.isRequired,\n  is_archived: PropTypes.bool.isRequired,\n  api_key: PropTypes.string.isRequired,\n});\n\nexport const AlertOptions = PropTypes.shape({\n  column: PropTypes.string,\n  op: PropTypes.oneOf([\">\", \">=\", \"<\", \"<=\", \"==\", \"!=\"]),\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  custom_subject: PropTypes.string,\n  custom_body: PropTypes.string,\n});\n\nexport const Alert = PropTypes.shape({\n  id: PropTypes.any,\n  name: PropTypes.string,\n  created_at: PropTypes.string,\n  last_triggered_at: PropTypes.string,\n  updated_at: PropTypes.string,\n  rearm: PropTypes.number,\n  state: PropTypes.oneOf([\"ok\", \"triggered\", \"unknown\"]),\n  user: UserProfile,\n  query: Query,\n  options: PropTypes.shape({\n    column: PropTypes.string,\n    op: PropTypes.string,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  }).isRequired,\n});\n\nfunction checkMoment(isRequired, props, propName, componentName) {\n  const value = props[propName];\n  const isRequiredValid = isRequired && value !== null && value !== undefined && moment.isMoment(value);\n  const isOptionalValid = !isRequired && (value === null || value === undefined || moment.isMoment(value));\n  if (!isRequiredValid && !isOptionalValid) {\n    return new Error(\"Prop `\" + propName + \"` supplied to `\" + componentName + \"` should be a Moment.js instance.\");\n  }\n}\n\nexport const Moment = wrap(false, checkMoment);\nMoment.isRequired = wrap(true, checkMoment);\n","import moment from \"moment\";\nimport { isNil } from \"lodash\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Moment } from \"@/components/proptypes\";\nimport { clientConfig } from \"@/services/auth\";\nimport Tooltip from \"@/components/Tooltip\";\n\nfunction toMoment(value) {\n  value = !isNil(value) ? moment(value) : null;\n  return value && value.isValid() ? value : null;\n}\n\nexport default function TimeAgo({ date, placeholder, autoUpdate, variation }) {\n  const startDate = toMoment(date);\n  const [value, setValue] = useState(null);\n  const title = useMemo(() => (startDate ? startDate.format(clientConfig.dateTimeFormat) : null), [startDate]);\n\n  useEffect(() => {\n    function update() {\n      setValue(startDate ? startDate.fromNow() : placeholder);\n    }\n    update();\n\n    if (autoUpdate) {\n      const timer = setInterval(update, 30 * 1000);\n      return () => clearInterval(timer);\n    }\n  }, [autoUpdate, startDate, placeholder]);\n\n  if (variation === \"timeAgoInTooltip\") {\n    return (\n      <Tooltip title={value}>\n        <span data-test=\"TimeAgo\">{title}</span>\n      </Tooltip>\n    );\n  }\n  return (\n    <Tooltip title={title}>\n      <span data-test=\"TimeAgo\">{value}</span>\n    </Tooltip>\n  );\n}\n\nTimeAgo.propTypes = {\n  date: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.instanceOf(Date), Moment]),\n  placeholder: PropTypes.string,\n  autoUpdate: PropTypes.bool,\n  variation: PropTypes.oneOf([\"timeAgoInTooltip\"]),\n};\n\nTimeAgo.defaultProps = {\n  date: null,\n  placeholder: \"\",\n  autoUpdate: true,\n};\n","import moment from \"moment\";\nimport { clientConfig } from \"@/services/auth\";\n\nexport const IntervalEnum = {\n  NEVER: \"Never\",\n  SECONDS: \"second\",\n  MINUTES: \"minute\",\n  HOURS: \"hour\",\n  DAYS: \"day\",\n  WEEKS: \"week\",\n  MILLISECONDS: \"millisecond\",\n};\n\nexport const AbbreviatedTimeUnits = {\n  SECONDS: \"s\",\n  MINUTES: \"m\",\n  HOURS: \"h\",\n  DAYS: \"d\",\n  WEEKS: \"w\",\n  MILLISECONDS: \"ms\",\n};\n\nfunction formatDateTimeValue(value, format) {\n  if (!value) {\n    return \"\";\n  }\n\n  const parsed = moment(value);\n  if (!parsed.isValid()) {\n    return \"-\";\n  }\n\n  return parsed.format(format);\n}\n\nexport function formatDateTime(value) {\n  return formatDateTimeValue(value, clientConfig.dateTimeFormat);\n}\n\nexport function formatDateTimePrecise(value, withMilliseconds = false) {\n  return formatDateTimeValue(value, clientConfig.dateFormat + (withMilliseconds ? \" HH:mm:ss.SSS\" : \" HH:mm:ss\"));\n}\n\nexport function formatDate(value) {\n  return formatDateTimeValue(value, clientConfig.dateFormat);\n}\n\nexport function localizeTime(time) {\n  const [hrs, mins] = time.split(\":\");\n  return moment\n    .utc()\n    .hour(hrs)\n    .minute(mins)\n    .local()\n    .format(\"HH:mm\");\n}\n\nexport function secondsToInterval(count) {\n  if (!count) {\n    return { interval: IntervalEnum.NEVER };\n  }\n\n  let interval = IntervalEnum.SECONDS;\n  if (count >= 60) {\n    count /= 60;\n    interval = IntervalEnum.MINUTES;\n  }\n  if (count >= 60) {\n    count /= 60;\n    interval = IntervalEnum.HOURS;\n  }\n  if (count >= 24 && interval === IntervalEnum.HOURS) {\n    count /= 24;\n    interval = IntervalEnum.DAYS;\n  }\n  if (count >= 7 && !(count % 7) && interval === IntervalEnum.DAYS) {\n    count /= 7;\n    interval = IntervalEnum.WEEKS;\n  }\n  return { count, interval };\n}\n\nexport function pluralize(text, count) {\n  const should = count !== 1;\n  return text + (should ? \"s\" : \"\");\n}\n\nexport function durationHumanize(durationInSeconds, options = {}) {\n  if (!durationInSeconds) {\n    return \"-\";\n  }\n  let ret = \"\";\n  const { interval, count } = secondsToInterval(durationInSeconds);\n  const rounded = Math.round(count);\n  if (rounded !== 1 || !options.omitSingleValueNumber) {\n    ret = `${rounded} `;\n  }\n  ret += pluralize(interval, rounded);\n  return ret;\n}\n\nexport function toHuman(text) {\n  return text.replace(/_/g, \" \").replace(/(?:^|\\s)\\S/g, a => a.toUpperCase());\n}\n\nexport function remove(items, item) {\n  if (items === undefined) {\n    return items;\n  }\n\n  let notEquals;\n\n  if (item instanceof Array) {\n    notEquals = other => item.indexOf(other) === -1;\n  } else {\n    notEquals = other => item !== other;\n  }\n\n  const filtered = [];\n\n  for (let i = 0; i < items.length; i += 1) {\n    if (notEquals(items[i])) {\n      filtered.push(items[i]);\n    }\n  }\n\n  return filtered;\n}\n\n/**\n * Formats number to string\n * @param value {number}\n * @param [fractionDigits] {number}\n * @return {string}\n */\nexport function formatNumber(value, fractionDigits = 3) {\n  return Math.round(value) !== value ? value.toFixed(fractionDigits) : value.toString();\n}\n\n/**\n * Formats any number using predefined units\n * @param value {string|number}\n * @param divisor {number}\n * @param [units] {Array<string>}\n * @param [fractionDigits] {number}\n * @return {{unit: string, value: string, divisor: number}}\n */\nexport function prettyNumberWithUnit(value, divisor, units = [], fractionDigits) {\n  if (isNaN(parseFloat(value)) || !isFinite(value)) {\n    return {\n      value: \"\",\n      unit: \"\",\n      divisor: 1,\n    };\n  }\n\n  let unit = 0;\n  let greatestDivisor = 1;\n\n  while (value >= divisor && unit < units.length - 1) {\n    value /= divisor;\n    greatestDivisor *= divisor;\n    unit += 1;\n  }\n\n  return {\n    value: formatNumber(value, fractionDigits),\n    unit: units[unit],\n    divisor: greatestDivisor,\n  };\n}\n\nexport function prettySizeWithUnit(bytes, fractionDigits) {\n  return prettyNumberWithUnit(bytes, 1024, [\"bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\"], fractionDigits);\n}\n\nexport function prettySize(bytes) {\n  const { value, unit } = prettySizeWithUnit(bytes);\n  if (!value) {\n    return \"?\";\n  }\n  return value + \" \" + unit;\n}\n\nexport function join(arr) {\n  if (arr === undefined || arr === null) {\n    return \"\";\n  }\n\n  return arr.join(\" / \");\n}\n\nexport function formatColumnValue(value, columnType = null) {\n  if (moment.isMoment(value)) {\n    if (columnType === \"date\") {\n      return formatDate(value);\n    }\n    return formatDateTime(value);\n  }\n\n  if (typeof value === \"boolean\") {\n    return value.toString();\n  }\n\n  return value;\n}\n","import { isFunction, map, filter, extend, omit, identity, range, isEmpty } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport Table from \"antd/lib/table\";\nimport Skeleton from \"antd/lib/skeleton\";\nimport FavoritesControl from \"@/components/FavoritesControl\";\nimport TimeAgo from \"@/components/TimeAgo\";\nimport { durationHumanize, formatDate, formatDateTime } from \"@/lib/utils\";\n\n// `this` refers to previous function in the chain (`Columns.***`).\n// Adds `sorter: true` field to column definition\nfunction sortable(...args) {\n  return extend(this(...args), { sorter: true });\n}\n\nexport const Columns = {\n  favorites(overrides) {\n    return extend(\n      {\n        width: \"1%\",\n        render: (text, item) => <FavoritesControl item={item} />,\n      },\n      overrides\n    );\n  },\n  avatar(overrides, formatTitle) {\n    formatTitle = isFunction(formatTitle) ? formatTitle : identity;\n    return extend(\n      {\n        width: \"1%\",\n        render: (user, item) => (\n          <img\n            src={item.user.profile_image_url}\n            className=\"profile__image_thumb\"\n            alt={formatTitle(user.name, item)}\n            title={formatTitle(user.name, item)}\n          />\n        ),\n      },\n      overrides\n    );\n  },\n  date(overrides) {\n    return extend(\n      {\n        render: text => formatDate(text),\n      },\n      overrides\n    );\n  },\n  dateTime(overrides) {\n    return extend(\n      {\n        render: text => formatDateTime(text),\n      },\n      overrides\n    );\n  },\n  duration(overrides) {\n    return extend(\n      {\n        width: \"1%\",\n        className: \"text-nowrap\",\n        render: text => durationHumanize(text),\n      },\n      overrides\n    );\n  },\n  timeAgo(overrides, timeAgoCustomProps = undefined) {\n    return extend(\n      {\n        render: value => <TimeAgo date={value} {...timeAgoCustomProps} />,\n      },\n      overrides\n    );\n  },\n  custom(render, overrides) {\n    return extend(\n      {\n        render,\n      },\n      overrides\n    );\n  },\n};\n\nColumns.date.sortable = sortable;\nColumns.dateTime.sortable = sortable;\nColumns.duration.sortable = sortable;\nColumns.timeAgo.sortable = sortable;\nColumns.custom.sortable = sortable;\n\nexport default class ItemsTable extends React.Component {\n  static propTypes = {\n    loading: PropTypes.bool,\n    // eslint-disable-next-line react/forbid-prop-types\n    items: PropTypes.arrayOf(PropTypes.object),\n    columns: PropTypes.arrayOf(\n      PropTypes.shape({\n        field: PropTypes.string, // data field\n        orderByField: PropTypes.string, // field to order by (defaults to `field`)\n        render: PropTypes.func, // (prop, item) => text | node; `prop` is `item[field]`\n        isAvailable: PropTypes.func, // return `true` to show column and `false` to hide; if omitted: show column\n      })\n    ),\n    showHeader: PropTypes.bool,\n    onRowClick: PropTypes.func, // (event, item) => void\n\n    orderByField: PropTypes.string,\n    orderByReverse: PropTypes.bool,\n    toggleSorting: PropTypes.func,\n    \"data-test\": PropTypes.string,\n    rowKey: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  };\n\n  static defaultProps = {\n    loading: false,\n    items: [],\n    columns: [],\n    showHeader: true,\n    onRowClick: null,\n\n    orderByField: null,\n    orderByReverse: false,\n    toggleSorting: () => {},\n  };\n\n  prepareColumns() {\n    const { orderByField, orderByReverse, toggleSorting } = this.props;\n    const orderByDirection = orderByReverse ? \"descend\" : \"ascend\";\n\n    return map(\n      map(\n        filter(this.props.columns, column => (isFunction(column.isAvailable) ? column.isAvailable() : true)),\n        column => extend(column, { orderByField: column.orderByField || column.field })\n      ),\n      (column, index) => {\n        // Bind click events only to sortable columns\n        const onHeaderCell = column.sorter ? () => ({ onClick: () => toggleSorting(column.orderByField) }) : null;\n\n        // Wrap render function to pass correct arguments\n        const render = isFunction(column.render) ? (text, row) => column.render(text, row.item) : identity;\n\n        return extend(omit(column, [\"field\", \"orderByField\", \"render\"]), {\n          key: \"column\" + index,\n          dataIndex: [\"item\", column.field],\n          defaultSortOrder: column.orderByField === orderByField ? orderByDirection : null,\n          onHeaderCell,\n          render,\n        });\n      }\n    );\n  }\n\n  getRowKey = record => {\n    const { rowKey } = this.props;\n    if (rowKey) {\n      if (isFunction(rowKey)) {\n        return rowKey(record.item);\n      }\n      return record.item[rowKey];\n    }\n    return record.key;\n  };\n\n  render() {\n    const tableDataProps = {\n      columns: this.prepareColumns(),\n      dataSource: map(this.props.items, (item, index) => ({ key: \"row\" + index, item })),\n    };\n\n    // Bind events only if `onRowClick` specified\n    const onTableRow = isFunction(this.props.onRowClick)\n      ? row => ({\n          onClick: event => {\n            this.props.onRowClick(event, row.item);\n          },\n        })\n      : null;\n\n    const { showHeader } = this.props;\n    if (this.props.loading) {\n      if (isEmpty(tableDataProps.dataSource)) {\n        tableDataProps.columns = tableDataProps.columns.map(column => ({\n          ...column,\n          sorter: false,\n          render: () => <Skeleton active paragraph={false} />,\n        }));\n        tableDataProps.dataSource = range(10).map(key => ({ key: `${key}` }));\n      } else {\n        tableDataProps.loading = { indicator: null };\n      }\n    }\n\n    return (\n      <Table\n        className={classNames(\"table-data\", { \"ant-table-headerless\": !showHeader })}\n        showHeader={showHeader}\n        rowKey={this.getRowKey}\n        pagination={false}\n        onRow={onTableRow}\n        data-test={this.props[\"data-test\"]}\n        {...tableDataProps}\n      />\n    );\n  }\n}\n","import { map } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Badge from \"antd/lib/badge\";\nimport Card from \"antd/lib/card\";\nimport Spin from \"antd/lib/spin\";\nimport Table from \"antd/lib/table\";\nimport { Columns } from \"@/components/items-list/components/ItemsTable\";\n\n// CounterCard\n\nexport function CounterCard({ title, value, loading }) {\n  return (\n    <Spin spinning={loading}>\n      <Card>\n        {title}\n        <div className=\"f-20\">{value}</div>\n      </Card>\n    </Spin>\n  );\n}\n\nCounterCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  loading: PropTypes.bool.isRequired,\n};\n\nCounterCard.defaultProps = {\n  value: \"\",\n};\n\n// Tables\n\nconst queryJobsColumns = [\n  { title: \"Queue\", dataIndex: \"origin\" },\n  { title: \"Query ID\", dataIndex: [\"meta\", \"query_id\"] },\n  { title: \"Org ID\", dataIndex: [\"meta\", \"org_id\"] },\n  { title: \"Data Source ID\", dataIndex: [\"meta\", \"data_source_id\"] },\n  { title: \"User ID\", dataIndex: [\"meta\", \"user_id\"] },\n  Columns.custom(scheduled => scheduled.toString(), { title: \"Scheduled\", dataIndex: [\"meta\", \"scheduled\"] }),\n  Columns.timeAgo({ title: \"Start Time\", dataIndex: \"started_at\" }),\n  Columns.timeAgo({ title: \"Enqueue Time\", dataIndex: \"enqueued_at\" }),\n];\n\nconst otherJobsColumns = [\n  { title: \"Queue\", dataIndex: \"origin\" },\n  { title: \"Job Name\", dataIndex: \"name\" },\n  Columns.timeAgo({ title: \"Start Time\", dataIndex: \"started_at\" }),\n  Columns.timeAgo({ title: \"Enqueue Time\", dataIndex: \"enqueued_at\" }),\n];\n\nconst workersColumns = [\n  Columns.custom(\n    value => (\n      <span>\n        <Badge status={{ busy: \"processing\", idle: \"default\", started: \"success\", suspended: \"warning\" }[value]} />{\" \"}\n        {value}\n      </span>\n    ),\n    { title: \"State\", dataIndex: \"state\" }\n  ),\n]\n  .concat(\n    map([\"Hostname\", \"PID\", \"Name\", \"Queues\", \"Current Job\", \"Successful Jobs\", \"Failed Jobs\"], c => ({\n      title: c,\n      dataIndex: c.toLowerCase().replace(/\\s/g, \"_\"),\n    }))\n  )\n  .concat([\n    Columns.dateTime({ title: \"Birth Date\", dataIndex: \"birth_date\" }),\n    Columns.duration({ title: \"Total Working Time\", dataIndex: \"total_working_time\" }),\n  ]);\n\nconst queuesColumns = map([\"Name\", \"Started\", \"Queued\"], c => ({ title: c, dataIndex: c.toLowerCase() }));\n\nconst TablePropTypes = {\n  loading: PropTypes.bool.isRequired,\n  items: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport function WorkersTable({ loading, items }) {\n  return (\n    <Table\n      loading={loading}\n      columns={workersColumns}\n      rowKey=\"name\"\n      dataSource={items}\n      pagination={{\n        defaultPageSize: 25,\n        pageSizeOptions: [\"10\", \"25\", \"50\"],\n        showSizeChanger: true,\n      }}\n    />\n  );\n}\n\nWorkersTable.propTypes = TablePropTypes;\n\nexport function QueuesTable({ loading, items }) {\n  return (\n    <Table\n      loading={loading}\n      columns={queuesColumns}\n      rowKey=\"name\"\n      dataSource={items}\n      pagination={{\n        defaultPageSize: 25,\n        pageSizeOptions: [\"10\", \"25\", \"50\"],\n        showSizeChanger: true,\n      }}\n    />\n  );\n}\n\nQueuesTable.propTypes = TablePropTypes;\n\nexport function QueryJobsTable({ loading, items }) {\n  return (\n    <Table\n      loading={loading}\n      columns={queryJobsColumns}\n      rowKey=\"id\"\n      dataSource={items}\n      pagination={{\n        defaultPageSize: 25,\n        pageSizeOptions: [\"10\", \"25\", \"50\"],\n        showSizeChanger: true,\n      }}\n    />\n  );\n}\n\nQueryJobsTable.propTypes = TablePropTypes;\n\nexport function OtherJobsTable({ loading, items }) {\n  return (\n    <Table\n      loading={loading}\n      columns={otherJobsColumns}\n      rowKey=\"id\"\n      dataSource={items}\n      pagination={{\n        defaultPageSize: 25,\n        pageSizeOptions: [\"10\", \"25\", \"50\"],\n        showSizeChanger: true,\n      }}\n    />\n  );\n}\n\nOtherJobsTable.propTypes = TablePropTypes;\n","import { partition, flatMap, values } from \"lodash\";\nimport React from \"react\";\nimport moment from \"moment\";\n\nimport Alert from \"antd/lib/alert\";\nimport Tabs from \"antd/lib/tabs\";\nimport * as Grid from \"antd/lib/grid\";\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport Layout from \"@/components/admin/Layout\";\nimport { CounterCard, WorkersTable, QueuesTable, QueryJobsTable, OtherJobsTable } from \"@/components/admin/RQStatus\";\n\nimport { axios } from \"@/services/axios\";\nimport location from \"@/services/location\";\nimport recordEvent from \"@/services/recordEvent\";\nimport routes from \"@/services/routes\";\n\nclass Jobs extends React.Component {\n  state = {\n    activeTab: location.hash,\n    isLoading: true,\n    error: null,\n\n    queueCounters: [],\n    overallCounters: { started: 0, queued: 0 },\n    startedJobs: [],\n    workers: [],\n  };\n\n  _refreshTimer = null;\n\n  componentDidMount() {\n    recordEvent(\"view\", \"page\", \"admin/rq_status\");\n    this.refresh();\n  }\n\n  componentWillUnmount() {\n    // Ignore data after component unmounted\n    clearTimeout(this._refreshTimer);\n    this.processQueues = () => {};\n    this.handleError = () => {};\n  }\n\n  refresh = () => {\n    axios\n      .get(\"/api/admin/queries/rq_status\")\n      .then(data => this.processQueues(data))\n      .catch(error => this.handleError(error));\n\n    this._refreshTimer = setTimeout(this.refresh, 60 * 1000);\n  };\n\n  processQueues = ({ queues, workers }) => {\n    const queueCounters = values(queues).map(({ started, ...rest }) => ({\n      started: started.length,\n      ...rest,\n    }));\n\n    const overallCounters = queueCounters.reduce(\n      (c, q) => ({\n        started: c.started + q.started,\n        queued: c.queued + q.queued,\n      }),\n      { started: 0, queued: 0 }\n    );\n\n    const startedJobs = flatMap(values(queues), queue =>\n      queue.started.map(job => ({\n        ...job,\n        enqueued_at: moment.utc(job.enqueued_at),\n        started_at: moment.utc(job.started_at),\n      }))\n    );\n\n    this.setState({ isLoading: false, queueCounters, startedJobs, overallCounters, workers });\n  };\n\n  handleError = error => {\n    this.setState({ isLoading: false, error });\n  };\n\n  render() {\n    const { isLoading, error, queueCounters, startedJobs, overallCounters, workers, activeTab } = this.state;\n    const [startedQueryJobs, otherStartedJobs] = partition(startedJobs, [\n      \"name\",\n      \"redash.tasks.queries.execution.execute_query\",\n    ]);\n\n    const changeTab = newTab => {\n      location.setHash(newTab);\n      this.setState({ activeTab: newTab });\n    };\n\n    return (\n      <Layout activeTab=\"jobs\">\n        <div className=\"p-15\">\n          {error && <Alert type=\"error\" message=\"Failed loading status. Please refresh.\" />}\n\n          {!error && (\n            <React.Fragment>\n              <Grid.Row gutter={15} className=\"m-b-15\">\n                <Grid.Col span={8}>\n                  <CounterCard title=\"Started Jobs\" value={overallCounters.started} loading={isLoading} />\n                </Grid.Col>\n                <Grid.Col span={8}>\n                  <CounterCard title=\"Queued Jobs\" value={overallCounters.queued} loading={isLoading} />\n                </Grid.Col>\n              </Grid.Row>\n\n              <Tabs activeKey={activeTab || \"queues\"} onTabClick={changeTab} animated={false}>\n                <Tabs.TabPane key=\"queues\" tab=\"Queues\">\n                  <QueuesTable loading={isLoading} items={queueCounters} />\n                </Tabs.TabPane>\n                <Tabs.TabPane key=\"workers\" tab=\"Workers\">\n                  <WorkersTable loading={isLoading} items={workers} />\n                </Tabs.TabPane>\n                <Tabs.TabPane key=\"queries\" tab=\"Queries\">\n                  <QueryJobsTable loading={isLoading} items={startedQueryJobs} />\n                </Tabs.TabPane>\n                <Tabs.TabPane key=\"other\" tab=\"Other Jobs\">\n                  <OtherJobsTable loading={isLoading} items={otherStartedJobs} />\n                </Tabs.TabPane>\n              </Tabs>\n            </React.Fragment>\n          )}\n        </div>\n      </Layout>\n    );\n  }\n}\n\nroutes.register(\n  \"Admin.Jobs\",\n  routeWithUserSession({\n    path: \"/admin/queries/jobs\",\n    title: \"RQ Status\",\n    render: pageProps => <Jobs {...pageProps} />,\n  })\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Pagination from \"antd/lib/pagination\";\n\nconst MIN_ITEMS_PER_PAGE = 5;\n\nexport default function Paginator({ page, showPageSizeSelect, pageSize, onPageSizeChange, totalCount, onChange }) {\n  if (totalCount <= (showPageSizeSelect ? MIN_ITEMS_PER_PAGE : pageSize)) {\n    return null;\n  }\n  return (\n    <div className=\"paginator-container\">\n      <Pagination\n        showSizeChanger={showPageSizeSelect}\n        pageSizeOptions={[\"5\", \"10\", \"20\", \"50\", \"100\"]}\n        onShowSizeChange={(_, size) => onPageSizeChange(size)}\n        defaultCurrent={page}\n        pageSize={pageSize}\n        total={totalCount}\n        onChange={onChange}\n      />\n    </div>\n  );\n}\n\nPaginator.propTypes = {\n  page: PropTypes.number.isRequired,\n  showPageSizeSelect: PropTypes.bool,\n  pageSize: PropTypes.number.isRequired,\n  totalCount: PropTypes.number.isRequired,\n  onPageSizeChange: PropTypes.func,\n  onChange: PropTypes.func,\n};\n\nPaginator.defaultProps = {\n  showPageSizeSelect: false,\n  onChange: () => {},\n  onPageSizeChange: () => {},\n};\n","import { map, trim, uniq, compact } from \"lodash\";\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Select from \"antd/lib/select\";\nimport Modal from \"antd/lib/modal\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\n\nfunction EditTagsDialog({ dialog, tags, getAvailableTags }) {\n  const [availableTags, setAvailableTags] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [values, setValues] = useState(() => uniq(map(tags, trim))); // lazy evaluate\n  const [selectRef, setSelectRef] = useState(null);\n\n  // Select is initially disabled, so autoFocus prop cannot make it focused.\n  // Solution is to pass focus to the select when available tags are loaded and\n  // select becomes enabled.\n  useEffect(() => {\n    if (selectRef && !isLoading) {\n      selectRef.focus();\n    }\n  }, [selectRef, isLoading]);\n\n  useEffect(() => {\n    let isCancelled = false;\n    getAvailableTags().then(availableTags => {\n      if (!isCancelled) {\n        setAvailableTags(uniq(compact(map(availableTags, trim))));\n        setIsLoading(false);\n      }\n    });\n    return () => {\n      isCancelled = true;\n    };\n  }, [getAvailableTags]);\n\n  return (\n    <Modal\n      {...dialog.props}\n      onOk={() => dialog.close(values)}\n      title=\"Add/Edit Tags\"\n      className=\"shortModal\"\n      wrapProps={{ \"data-test\": \"EditTagsDialog\" }}>\n      <Select\n        ref={setSelectRef}\n        mode=\"tags\"\n        className=\"w-100\"\n        placeholder=\"Add some tags...\"\n        defaultValue={values}\n        onChange={v => setValues(compact(map(v, trim)))}\n        disabled={isLoading}\n        loading={isLoading}>\n        {map(availableTags, tag => (\n          <Select.Option key={tag}>{tag}</Select.Option>\n        ))}\n      </Select>\n    </Modal>\n  );\n}\n\nEditTagsDialog.propTypes = {\n  dialog: DialogPropType.isRequired,\n  tags: PropTypes.arrayOf(PropTypes.string),\n  getAvailableTags: PropTypes.func.isRequired,\n};\n\nEditTagsDialog.defaultProps = {\n  tags: [],\n};\n\nexport default wrapDialog(EditTagsDialog);\n","import { map, trim } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Tooltip from \"@/components/Tooltip\";\nimport EditTagsDialog from \"./EditTagsDialog\";\nimport PlainButton from \"@/components/PlainButton\";\n\nexport class TagsControl extends React.Component {\n  static propTypes = {\n    tags: PropTypes.arrayOf(PropTypes.string),\n    canEdit: PropTypes.bool,\n    getAvailableTags: PropTypes.func,\n    onEdit: PropTypes.func,\n    className: PropTypes.string,\n    tagsExtra: PropTypes.node,\n    tagSeparator: PropTypes.node,\n    children: PropTypes.node,\n  };\n\n  static defaultProps = {\n    tags: [],\n    canEdit: false,\n    getAvailableTags: () => Promise.resolve([]),\n    onEdit: () => {},\n    className: \"\",\n    tagsExtra: null,\n    tagSeparator: null,\n    children: null,\n  };\n\n  editTags = (tags, getAvailableTags) => {\n    EditTagsDialog.showModal({ tags, getAvailableTags }).onClose(this.props.onEdit);\n  };\n\n  renderEditButton() {\n    const tags = map(this.props.tags, trim);\n    return (\n      <PlainButton\n        className=\"label label-tag hidden-xs\"\n        onClick={() => this.editTags(tags, this.props.getAvailableTags)}\n        data-test=\"EditTagsButton\">\n        {tags.length === 0 && (\n          <React.Fragment>\n            <i className=\"zmdi zmdi-plus m-r-5\" aria-hidden=\"true\" />\n            Add tag\n          </React.Fragment>\n        )}\n        {tags.length > 0 && (\n          <>\n            <i className=\"zmdi zmdi-edit\" aria-hidden=\"true\" />\n            <span className=\"sr-only\">Edit</span>\n          </>\n        )}\n      </PlainButton>\n    );\n  }\n\n  render() {\n    const { tags, tagSeparator } = this.props;\n    return (\n      <div className={\"tags-control \" + this.props.className} data-test=\"TagsControl\">\n        {this.props.children}\n        {map(tags, (tag, i) => (\n          <React.Fragment key={tag}>\n            {tagSeparator && i > 0 && <span className=\"tag-separator\">{tagSeparator}</span>}\n            <span className=\"label label-tag\" key={tag} title={tag} data-test=\"TagLabel\">\n              {tag}\n            </span>\n          </React.Fragment>\n        ))}\n        {this.props.canEdit && this.renderEditButton()}\n        {this.props.tagsExtra}\n      </div>\n    );\n  }\n}\n\nfunction modelTagsControl({ archivedTooltip }) {\n  // See comment for `propTypes`/`defaultProps`\n  // eslint-disable-next-line react/prop-types\n  function ModelTagsControl({ isDraft, isArchived, ...props }) {\n    return (\n      <TagsControl {...props}>\n        {!isArchived && isDraft && <span className=\"label label-tag-unpublished\">Unpublished</span>}\n        {isArchived && (\n          <Tooltip placement=\"right\" title={archivedTooltip}>\n            <span className=\"label label-tag-archived\">Archived</span>\n          </Tooltip>\n        )}\n      </TagsControl>\n    );\n  }\n\n  ModelTagsControl.propTypes = {\n    isDraft: PropTypes.bool,\n    isArchived: PropTypes.bool,\n  };\n\n  ModelTagsControl.defaultProps = {\n    isDraft: false,\n    isArchived: false,\n  };\n\n  return ModelTagsControl;\n}\n\nexport const QueryTagsControl = modelTagsControl({\n  archivedTooltip: \"This query is archived and can't be used in dashboards, or appear in search results.\",\n});\n\nexport const DashboardTagsControl = modelTagsControl({\n  archivedTooltip: \"This dashboard is archived and won't be listed in dashboards nor search results.\",\n});\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Tooltip from \"@/components/Tooltip\";\nimport PlainButton from \"@/components/PlainButton\";\nimport { localizeTime, durationHumanize } from \"@/lib/utils\";\nimport { RefreshScheduleType, RefreshScheduleDefault } from \"../proptypes\";\n\nimport \"./ScheduleDialog.css\";\n\nexport default class SchedulePhrase extends React.Component {\n  static propTypes = {\n    schedule: RefreshScheduleType,\n    isNew: PropTypes.bool.isRequired,\n    isLink: PropTypes.bool,\n    onClick: PropTypes.func,\n  };\n\n  static defaultProps = {\n    schedule: RefreshScheduleDefault,\n    isLink: false,\n    onClick: () => {},\n  };\n\n  get content() {\n    const { interval: seconds } = this.props.schedule || SchedulePhrase.defaultProps.schedule;\n    if (!seconds) {\n      return [\"Never\"];\n    }\n    const humanized = durationHumanize(seconds, {\n      omitSingleValueNumber: true,\n    });\n    const short = `Every ${humanized}`;\n    let full = `Refreshes every ${humanized}`;\n\n    const { time, day_of_week: dayOfWeek } = this.props.schedule;\n    if (time) {\n      full += ` at ${localizeTime(time)}`;\n    }\n    if (dayOfWeek) {\n      full += ` on ${dayOfWeek}`;\n    }\n\n    return [short, full];\n  }\n\n  render() {\n    if (this.props.isNew) {\n      return \"Never\";\n    }\n\n    const [short, full] = this.content;\n    const content = full ? <Tooltip title={full}>{short}</Tooltip> : short;\n\n    return this.props.isLink ? (\n      <PlainButton type=\"link\" className=\"schedule-phrase\" onClick={this.props.onClick} data-test=\"EditSchedule\">\n        {content}\n      </PlainButton>\n    ) : (\n      content\n    );\n  }\n}\n","import { omit, debounce } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport hoistNonReactStatics from \"hoist-non-react-statics\";\nimport { clientConfig } from \"@/services/auth\";\nimport { AxiosError } from \"axios\";\n\nexport interface PaginationOptions {\n  page?: number;\n  itemsPerPage?: number;\n}\n\nexport interface Controller<I, P = any> {\n  params: P; // TODO: Find out what params is (except merging with props)\n\n  isLoaded: boolean;\n  isEmpty: boolean;\n\n  // search\n  searchTerm?: string;\n  updateSearch: (searchTerm: string) => void;\n\n  // tags\n  selectedTags: string[];\n  updateSelectedTags: (selectedTags: string[]) => void;\n\n  // sorting\n  orderByField?: string;\n  orderByReverse: boolean;\n  toggleSorting: (orderByField: string) => void;\n\n  // pagination\n  page: number;\n  itemsPerPage: number;\n  totalItemsCount: number;\n  pageSizeOptions: number[];\n  pageItems: I[];\n  updatePagination: (options: PaginationOptions) => void; // ({ page: number, itemsPerPage: number }) => void\n\n  handleError: (error: any) => void; // TODO: Find out if error is string or object or Exception.\n}\n\nexport const ControllerType = PropTypes.shape({\n  // values of props declared by wrapped component and some additional props from items list\n  params: PropTypes.object.isRequired,\n\n  isLoaded: PropTypes.bool.isRequired,\n  isEmpty: PropTypes.bool.isRequired,\n\n  // search\n  searchTerm: PropTypes.string,\n  updateSearch: PropTypes.func.isRequired, // (searchTerm: string) => void\n\n  // tags\n  selectedTags: PropTypes.array.isRequired,\n  updateSelectedTags: PropTypes.func.isRequired, // (selectedTags: array of tags) => void\n\n  // sorting\n  orderByField: PropTypes.string,\n  orderByReverse: PropTypes.bool.isRequired,\n  toggleSorting: PropTypes.func.isRequired, // (orderByField: string) => void\n\n  // pagination\n  page: PropTypes.number.isRequired,\n  itemsPerPage: PropTypes.number.isRequired,\n  totalItemsCount: PropTypes.number.isRequired,\n  pageSizeOptions: PropTypes.arrayOf(PropTypes.number).isRequired,\n  pageItems: PropTypes.array.isRequired,\n  updatePagination: PropTypes.func.isRequired, // ({ page: number, itemsPerPage: number }) => void\n\n  handleError: PropTypes.func.isRequired, // (error) => void\n});\n\nexport type GenericItemSourceError = AxiosError | Error;\n\nexport interface ItemsListWrapperProps {\n  onError?: (error: AxiosError | Error) => void;\n  children: React.ReactNode;\n}\n\ninterface ItemsListWrapperState<I, P = any> extends Controller<I, P> {\n  totalCount?: number;\n  update: () => void;\n}\n\ntype ItemsSource = any; // TODO: Type ItemsSource\ntype StateStorage = any; // TODO: Type StateStore\n\nexport interface ItemsListWrappedComponentProps<I, P = any> {\n  controller: Controller<I, P>;\n}\n\nexport function wrap<I, P = any>(\n  WrappedComponent: React.ComponentType<ItemsListWrappedComponentProps<I>>,\n  createItemsSource: () => ItemsSource,\n  createStateStorage: () => StateStorage\n) {\n  class ItemsListWrapper extends React.Component<ItemsListWrapperProps, ItemsListWrapperState<I, P>> {\n    private _itemsSource: ItemsSource;\n\n    static propTypes = {\n      onError: PropTypes.func,\n      children: PropTypes.node,\n    };\n\n    static defaultProps = {\n      onError: (error: GenericItemSourceError) => {\n        // Allow calling chain to roll up, and then throw the error in global context\n        setTimeout(() => {\n          throw error;\n        });\n      },\n      children: null,\n    };\n\n    constructor(props: ItemsListWrapperProps) {\n      super(props);\n\n      const stateStorage = createStateStorage();\n      const itemsSource = createItemsSource();\n      this._itemsSource = itemsSource;\n\n      itemsSource.setState({ ...stateStorage.getState(), validate: false });\n      itemsSource.getCallbackContext = () => this.state;\n\n      itemsSource.onBeforeUpdate = () => {\n        const state = itemsSource.getState();\n        stateStorage.setState(state);\n        this.setState(this.getState({ ...state, isLoaded: false }));\n      };\n\n      itemsSource.onAfterUpdate = () => {\n        const state = itemsSource.getState();\n        this.setState(this.getState({ ...state, isLoaded: true }));\n      };\n\n      itemsSource.onError = (error: GenericItemSourceError) =>\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        this.props.onError!(error);\n\n      const initialState = this.getState({ ...itemsSource.getState(), isLoaded: false });\n      const { updatePagination, toggleSorting, updateSearch, updateSelectedTags, update, handleError } = itemsSource;\n      this.state = {\n        ...initialState,\n        toggleSorting, // eslint-disable-line react/no-unused-state\n        updateSearch: debounce(updateSearch, 200), // eslint-disable-line react/no-unused-state\n        updateSelectedTags, // eslint-disable-line react/no-unused-state\n        updatePagination, // eslint-disable-line react/no-unused-state\n        update, // eslint-disable-line react/no-unused-state\n        handleError, // eslint-disable-line react/no-unused-state\n      };\n    }\n\n    componentDidMount() {\n      this.state.update();\n    }\n\n    componentWillUnmount() {\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n      this._itemsSource.onBeforeUpdate = () => {};\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n      this._itemsSource.onAfterUpdate = () => {};\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n      this._itemsSource.onError = () => {};\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    getState({\n      isLoaded,\n      totalCount,\n      pageItems,\n      params,\n      ...rest\n    }: ItemsListWrapperState<I, P>): ItemsListWrapperState<I, P> {\n      return {\n        ...rest,\n\n        params: {\n          ...params, // custom params from items source\n          ...omit(this.props, [\"onError\", \"children\"]), // add all props except of own ones\n        },\n\n        isLoaded,\n        isEmpty: !isLoaded || totalCount === 0,\n        totalItemsCount: totalCount || 0,\n        pageSizeOptions: (clientConfig as any).pageSizeOptions, // TODO: Type auth.js\n        pageItems: pageItems || [],\n      };\n    }\n\n    render() {\n      // don't pass own props to wrapped component\n      const { children, onError, ...props } = this.props;\n      return (\n        <WrappedComponent {...props} controller={this.state}>\n          {children}\n        </WrappedComponent>\n      );\n    }\n  }\n\n  // Copy static methods from `WrappedComponent`\n  hoistNonReactStatics(ItemsListWrapper, WrappedComponent);\n\n  return ItemsListWrapper;\n}\n","import { isUndefined } from \"lodash\";\n\nexport default class Paginator {\n  page = 1;\n\n  itemsPerPage = 20;\n\n  totalCount = 0;\n\n  get totalPages() {\n    return Math.ceil(this.totalCount / this.itemsPerPage);\n  }\n\n  setPage(value, validate = true) {\n    if (isUndefined(value)) {\n      return;\n    }\n    value = parseInt(value, 10) || 1;\n    if (validate) {\n      this.page = value >= 1 && value <= this.totalPages ? value : 1;\n    } else {\n      this.page = value >= 1 ? value : 1;\n    }\n  }\n\n  setItemsPerPage(value, validate = true) {\n    if (isUndefined(value)) {\n      return;\n    }\n    value = parseInt(value, 10) || 20;\n    this.itemsPerPage = value >= 1 ? value : 1;\n    if (validate) {\n      this.setPage(this.page, validate);\n    }\n  }\n\n  setTotalCount(value, validate = true) {\n    if (isUndefined(value)) {\n      return;\n    }\n    value = parseInt(value, 10) || 0;\n    this.totalCount = value;\n    if (validate) {\n      this.setPage(this.page, validate);\n    }\n  }\n\n  constructor({ page, itemsPerPage, totalCount, validate = true } = {}) {\n    this.setItemsPerPage(itemsPerPage, validate);\n    this.setTotalCount(totalCount, validate);\n    this.setPage(page, validate);\n  }\n\n  getItemsForPage(items) {\n    const first = this.itemsPerPage * (this.page - 1);\n    const last = first + this.itemsPerPage;\n\n    return items.slice(first, last);\n  }\n}\n","import { isString, sortBy } from \"lodash\";\n\nconst ORDER_BY_REVERSE = \"-\";\n\nexport function compile(field, reverse) {\n  if (!field) {\n    return null;\n  }\n  return reverse ? ORDER_BY_REVERSE + field : field;\n}\n\nexport function parse(compiled) {\n  compiled = isString(compiled) ? compiled : \"\";\n  const reverse = compiled.startsWith(ORDER_BY_REVERSE);\n  if (reverse) {\n    compiled = compiled.substring(1);\n  }\n  const field = compiled !== \"\" ? compiled : null;\n  return { field, reverse };\n}\n\nexport default class Sorter {\n  field = null;\n\n  reverse = false;\n\n  sortByIteratees = null;\n\n  get compiled() {\n    return compile(this.field, this.reverse);\n  }\n\n  set compiled(value) {\n    const { field, reverse } = parse(value);\n    this.field = field;\n    this.reverse = reverse;\n  }\n\n  setField(value) {\n    this.field = isString(value) && value !== \"\" ? value : null;\n  }\n\n  setReverse(value) {\n    this.reverse = !!value; // cast to boolean\n  }\n\n  constructor({ orderByField, orderByReverse } = {}, sortByIteratees = undefined) {\n    this.setField(orderByField);\n    this.setReverse(orderByReverse);\n    this.sortByIteratees = sortByIteratees;\n  }\n\n  toggleField(field) {\n    if (!isString(field) || field === \"\") {\n      return;\n    }\n    if (field === this.field) {\n      this.reverse = !this.reverse;\n    } else {\n      this.field = field;\n      this.reverse = false;\n    }\n  }\n\n  sort(items) {\n    if (this.field) {\n      const customIteratee = this.sortByIteratees && this.sortByIteratees[this.field];\n      items = sortBy(items, customIteratee ? [customIteratee] : this.field);\n      if (this.reverse) {\n        items.reverse();\n      }\n      return items;\n    }\n  }\n}\n","import { identity, isFunction, isNil, isString } from \"lodash\";\n\nclass ItemsFetcher {\n  _getRequest(state, context) {\n    return this._originalGetRequest({}, context);\n  }\n\n  _processResults({ results, count }, state, context) {\n    return {\n      results: this._originalProcessResults(results, context),\n      count,\n    };\n  }\n\n  constructor({ getRequest, doRequest, processResults }) {\n    this._originalGetRequest = isFunction(getRequest) ? getRequest : identity;\n    this._originalDoRequest = doRequest;\n    this._originalProcessResults = isFunction(processResults) ? processResults : identity;\n  }\n\n  fetch(changes, state, context) {\n    const request = this._getRequest(state, context);\n    return this._originalDoRequest(request, context).then(data => this._processResults(data, state, context));\n  }\n}\n\n// For endpoints that return just an array with items; sorting and pagination\n// is performed on client\nexport class PlainListFetcher extends ItemsFetcher {\n  _allItems = [];\n\n  _getRequest({ searchTerm, selectedTags }, context) {\n    return this._originalGetRequest(\n      {\n        q: isString(searchTerm) && searchTerm !== \"\" ? searchTerm : undefined,\n        tags: selectedTags,\n      },\n      context\n    );\n  }\n\n  _processResults(data, { paginator, sorter }, context) {\n    this._allItems = this._originalProcessResults(data, context);\n    this._allItems = sorter.sort(this._allItems);\n    return {\n      results: paginator.getItemsForPage(this._allItems),\n      count: this._allItems.length,\n      allResults: this._allItems,\n    };\n  }\n\n  fetch(changes, state, context) {\n    // For plain lists we need to reload items from server only if tags or search changes.\n    if (isNil(changes) || changes.tags || changes.sorting) {\n      return super.fetch(changes, state, context);\n    }\n    // Sorting and pagination could be updated using previously fetched items.\n    const { paginator, sorter } = state;\n    if (changes.sorting) {\n      this._allItems = sorter.sort(this._allItems);\n    }\n    return Promise.resolve({\n      results: paginator.getItemsForPage(this._allItems),\n      count: this._allItems.length,\n      allResults: this._allItems,\n    });\n  }\n}\n\n// For endpoints that support server-side pagination (return object with\n// items for current page and total items count)\nexport class PaginatedListFetcher extends ItemsFetcher {\n  _getRequest({ paginator, sorter, searchTerm, selectedTags }, context) {\n    return this._originalGetRequest(\n      {\n        page: paginator.page,\n        page_size: paginator.itemsPerPage,\n        order: sorter.compiled,\n        q: isString(searchTerm) && searchTerm !== \"\" ? searchTerm : undefined,\n        tags: selectedTags,\n      },\n      context\n    );\n  }\n}\n","import { isFunction, identity, map, extend } from \"lodash\";\nimport Paginator from \"./Paginator\";\nimport Sorter from \"./Sorter\";\nimport { PlainListFetcher, PaginatedListFetcher } from \"./ItemsFetcher\";\n\nexport class ItemsSource {\n  onBeforeUpdate = null;\n\n  onAfterUpdate = null;\n\n  onError = null;\n\n  sortByIteratees = undefined;\n\n  getCallbackContext = () => null;\n\n  _beforeUpdate() {\n    if (isFunction(this.onBeforeUpdate)) {\n      return Promise.resolve(this.onBeforeUpdate(this.getState(), this.getCallbackContext()));\n    }\n    return Promise.resolve();\n  }\n\n  _afterUpdate() {\n    if (isFunction(this.onAfterUpdate)) {\n      return Promise.resolve(this.onAfterUpdate(this.getState(), this.getCallbackContext()));\n    }\n    return Promise.resolve();\n  }\n\n  // changes: object with flags or null (full refresh requested)\n  _changed(changes) {\n    const state = {\n      paginator: this._paginator,\n      sorter: this._sorter,\n      searchTerm: this._searchTerm,\n      selectedTags: this._selectedTags,\n    };\n    const customParams = {};\n    const context = {\n      ...this.getCallbackContext(),\n      setCustomParams: params => {\n        extend(customParams, params);\n      },\n    };\n    return this._beforeUpdate().then(() => {\n      const fetchToken = Math.random()\n        .toString(36)\n        .substr(2);\n      this._currentFetchToken = fetchToken;\n      return this._fetcher\n        .fetch(changes, state, context)\n        .then(({ results, count, allResults }) => {\n          if (this._currentFetchToken === fetchToken) {\n            this._pageItems = results;\n            this._allItems = allResults || null;\n            this._paginator.setTotalCount(count);\n            this._params = { ...this._params, ...customParams };\n            return this._afterUpdate();\n          }\n        })\n        .catch(error => this.handleError(error));\n    });\n  }\n\n  constructor({\n    getRequest,\n    doRequest,\n    processResults,\n    isPlainList = false,\n    sortByIteratees = undefined,\n    ...defaultState\n  }) {\n    if (!isFunction(getRequest)) {\n      getRequest = identity;\n    }\n\n    this._fetcher = isPlainList\n      ? new PlainListFetcher({ getRequest, doRequest, processResults })\n      : new PaginatedListFetcher({ getRequest, doRequest, processResults });\n\n    this.sortByIteratees = sortByIteratees;\n\n    this.setState(defaultState);\n    this._pageItems = [];\n\n    this._params = {};\n  }\n\n  getState() {\n    return {\n      page: this._paginator.page,\n      itemsPerPage: this._paginator.itemsPerPage,\n      orderByField: this._sorter.field,\n      orderByReverse: this._sorter.reverse,\n      searchTerm: this._searchTerm,\n      selectedTags: this._selectedTags,\n      totalCount: this._paginator.totalCount,\n      pageItems: this._pageItems,\n      allItems: this._allItems,\n      params: this._params,\n    };\n  }\n\n  setState(state) {\n    this._paginator = new Paginator(state);\n    this._sorter = new Sorter(state, this.sortByIteratees);\n\n    this._searchTerm = state.searchTerm || \"\";\n    this._selectedTags = state.selectedTags || [];\n\n    this._savedOrderByField = this._sorter.field;\n  }\n\n  updatePagination = ({ page, itemsPerPage }) => {\n    const { page: prevPage, itemsPerPage: prevItemsPerPage } = this._paginator;\n    this._paginator.setItemsPerPage(itemsPerPage);\n    this._paginator.setPage(page);\n    this._changed({\n      pagination: {\n        page: prevPage !== this._paginator.page, // page changed flag\n        itemsPerPage: prevItemsPerPage !== this._paginator.itemsPerPage, // items per page changed flags\n      },\n    });\n  };\n\n  toggleSorting = orderByField => {\n    this._sorter.toggleField(orderByField);\n    this._savedOrderByField = this._sorter.field;\n    this._changed({ sorting: true });\n  };\n\n  updateSearch = searchTerm => {\n    // here we update state directly, but later `fetchData` will update it properly\n    this._searchTerm = searchTerm;\n    // in search mode ignore the ordering and use the ranking order\n    // provided by the server-side FTS backend instead, unless it was\n    // requested by the user by actively ordering in search mode\n    if (searchTerm === \"\") {\n      this._sorter.setField(this._savedOrderByField); // restore ordering\n    } else {\n      this._sorter.setField(null);\n    }\n    this._paginator.setPage(1);\n    this._changed({ search: true, pagination: { page: true } });\n  };\n\n  updateSelectedTags = selectedTags => {\n    this._selectedTags = selectedTags;\n    this._paginator.setPage(1);\n    this._changed({ tags: true, pagination: { page: true } });\n  };\n\n  update = () => this._changed();\n\n  handleError = error => {\n    if (isFunction(this.onError)) {\n      this.onError(error);\n    }\n  };\n}\n\nexport class ResourceItemsSource extends ItemsSource {\n  constructor({ getResource, getItemProcessor, ...rest }) {\n    getItemProcessor = isFunction(getItemProcessor) ? getItemProcessor : () => null;\n    super({\n      ...rest,\n      doRequest: (request, context) => {\n        const resource = getResource(context)(request);\n        return resource;\n      },\n      processResults: (results, context) => {\n        let processItem = getItemProcessor(context);\n        processItem = isFunction(processItem) ? processItem : identity;\n        return map(results, item => processItem(item, context));\n      },\n    });\n  }\n}\n","import { defaults } from \"lodash\";\nimport { clientConfig } from \"@/services/auth\";\nimport location from \"@/services/location\";\nimport { parse as parseOrderBy, compile as compileOrderBy } from \"./Sorter\";\n\nexport class StateStorage {\n  constructor(state = {}) {\n    this._state = { ...state };\n  }\n\n  getState() {\n    return defaults(this._state, {\n      page: 1,\n      itemsPerPage: clientConfig.pageSize,\n      orderByField: \"created_at\",\n      orderByReverse: false,\n      searchTerm: \"\",\n      tags: [],\n    });\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  setState() {}\n}\n\nexport class UrlStateStorage extends StateStorage {\n  getState() {\n    const defaultState = super.getState();\n    const params = location.search;\n\n    const searchTerm = params.q || \"\";\n\n    // in search mode order by should be explicitly specified in url, otherwise use default\n    const defaultOrderBy =\n      searchTerm !== \"\" ? \"\" : compileOrderBy(defaultState.orderByField, defaultState.orderByReverse);\n\n    const { field: orderByField, reverse: orderByReverse } = parseOrderBy(params.order || defaultOrderBy);\n\n    return {\n      page: parseInt(params.page, 10) || defaultState.page,\n      itemsPerPage: parseInt(params.page_size, 10) || defaultState.itemsPerPage,\n      orderByField,\n      orderByReverse,\n      searchTerm,\n    };\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  setState({ page, itemsPerPage, orderByField, orderByReverse, searchTerm }) {\n    location.setSearch(\n      {\n        page,\n        page_size: itemsPerPage,\n        order: compileOrderBy(orderByField, orderByReverse),\n        q: searchTerm !== \"\" ? searchTerm : null,\n      },\n      true\n    );\n  }\n}\n","import React from \"react\";\nimport BigMessage from \"@/components/BigMessage\";\n\n// Default \"loading\" message for list pages\nexport default function LoadingState(props) {\n  return (\n    <div className=\"text-center\">\n      <BigMessage icon=\"fa-spinner fa-2x fa-pulse\" message=\"Loading...\" {...props} />\n    </div>\n  );\n}\n","import { map, uniqueId } from \"lodash\";\nimport React from \"react\";\n\nimport Switch from \"antd/lib/switch\";\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport Link from \"@/components/Link\";\nimport Paginator from \"@/components/Paginator\";\nimport { QueryTagsControl } from \"@/components/tags-control/TagsControl\";\nimport SchedulePhrase from \"@/components/queries/SchedulePhrase\";\nimport TimeAgo from \"@/components/TimeAgo\";\nimport Layout from \"@/components/admin/Layout\";\n\nimport { wrap as itemsList, ControllerType } from \"@/components/items-list/ItemsList\";\nimport { ItemsSource } from \"@/components/items-list/classes/ItemsSource\";\nimport { StateStorage } from \"@/components/items-list/classes/StateStorage\";\n\nimport LoadingState from \"@/components/items-list/components/LoadingState\";\nimport ItemsTable, { Columns } from \"@/components/items-list/components/ItemsTable\";\n\nimport { axios } from \"@/services/axios\";\nimport { Query } from \"@/services/query\";\nimport recordEvent from \"@/services/recordEvent\";\nimport routes from \"@/services/routes\";\n\nclass OutdatedQueries extends React.Component {\n  static propTypes = {\n    controller: ControllerType.isRequired,\n  };\n\n  listColumns = [\n    {\n      title: \"ID\",\n      field: \"id\",\n      width: \"1%\",\n      align: \"right\",\n      sorter: true,\n    },\n    Columns.custom.sortable(\n      (text, item) => (\n        <React.Fragment>\n          <Link className=\"table-main-title\" href={\"queries/\" + item.id}>\n            {item.name}\n          </Link>\n          <QueryTagsControl\n            className=\"d-block\"\n            tags={item.tags}\n            isDraft={item.is_draft}\n            isArchived={item.is_archived}\n          />\n        </React.Fragment>\n      ),\n      {\n        title: \"Name\",\n        field: \"name\",\n        width: null,\n      }\n    ),\n    Columns.avatar({ field: \"user\", className: \"p-l-0 p-r-0\" }, name => `Created by ${name}`),\n    Columns.dateTime.sortable({ title: \"Created At\", field: \"created_at\" }),\n    Columns.duration.sortable({ title: \"Runtime\", field: \"runtime\" }),\n    Columns.dateTime.sortable({ title: \"Last Executed At\", field: \"retrieved_at\", orderByField: \"executed_at\" }),\n    Columns.custom.sortable((text, item) => <SchedulePhrase schedule={item.schedule} isNew={item.isNew()} />, {\n      title: \"Update Schedule\",\n      field: \"schedule\",\n    }),\n  ];\n\n  state = {\n    autoUpdate: true,\n  };\n\n  _updateTimer = null;\n  autoUpdateSwitchId = uniqueId(\"auto-update-switch\");\n\n  componentDidMount() {\n    recordEvent(\"view\", \"page\", \"admin/queries/outdated\");\n    this.update(true);\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this._updateTimer);\n  }\n\n  update = (isInitialCall = false) => {\n    if (!isInitialCall && this.state.autoUpdate) {\n      this.props.controller.update();\n    }\n    this._updateTimer = setTimeout(this.update, 60 * 1000);\n  };\n\n  render() {\n    const { controller } = this.props;\n    return (\n      <Layout activeTab={controller.params.currentPage}>\n        <div className=\"m-15\">\n          <div>\n            <label htmlFor={this.autoUpdateSwitchId} className=\"m-0\">\n              Auto update\n            </label>\n            <Switch\n              id={this.autoUpdateSwitchId}\n              className=\"m-l-10\"\n              checked={this.state.autoUpdate}\n              onChange={autoUpdate => this.setState({ autoUpdate })}\n            />\n          </div>\n          {controller.params.lastUpdatedAt && (\n            <div className=\"m-t-5\">\n              Last updated: <TimeAgo date={controller.params.lastUpdatedAt * 1000} />\n            </div>\n          )}\n        </div>\n        {!controller.isLoaded && <LoadingState />}\n        {controller.isLoaded && controller.isEmpty && (\n          <div className=\"text-center p-15\">There are no outdated queries.</div>\n        )}\n        {controller.isLoaded && !controller.isEmpty && (\n          <div className=\"bg-white tiled table-responsive\">\n            <ItemsTable\n              items={controller.pageItems}\n              columns={this.listColumns}\n              orderByField={controller.orderByField}\n              orderByReverse={controller.orderByReverse}\n              toggleSorting={controller.toggleSorting}\n            />\n            <Paginator\n              showPageSizeSelect\n              totalCount={controller.totalItemsCount}\n              pageSize={controller.itemsPerPage}\n              onPageSizeChange={itemsPerPage => controller.updatePagination({ itemsPerPage })}\n              page={controller.page}\n              onChange={page => controller.updatePagination({ page })}\n            />\n          </div>\n        )}\n      </Layout>\n    );\n  }\n}\n\nconst OutdatedQueriesPage = itemsList(\n  OutdatedQueries,\n  () =>\n    new ItemsSource({\n      doRequest(request, context) {\n        return (\n          axios\n            .get(\"/api/admin/queries/outdated\")\n            // eslint-disable-next-line camelcase\n            .then(({ queries, updated_at }) => {\n              context.setCustomParams({ lastUpdatedAt: parseFloat(updated_at) });\n              return queries;\n            })\n        );\n      },\n      processResults(items) {\n        return map(items, item => new Query(item));\n      },\n      isPlainList: true,\n    }),\n  () => new StateStorage({ orderByField: \"created_at\", orderByReverse: true })\n);\n\nroutes.register(\n  \"Admin.OutdatedQueries\",\n  routeWithUserSession({\n    path: \"/admin/queries/outdated\",\n    title: \"Outdated Queries\",\n    render: pageProps => <OutdatedQueriesPage {...pageProps} currentPage=\"outdated_queries\" />,\n  })\n);\n","/* eslint-disable react/prop-types */\n\nimport { toPairs } from \"lodash\";\nimport React from \"react\";\n\nimport List from \"antd/lib/list\";\nimport Card from \"antd/lib/card\";\nimport TimeAgo from \"@/components/TimeAgo\";\n\nimport { toHuman, prettySize } from \"@/lib/utils\";\n\nexport function General({ info }) {\n  info = toPairs(info);\n  return (\n    <Card title=\"General\" size=\"small\">\n      {info.length === 0 && <div className=\"text-muted text-center\">No data</div>}\n      {info.length > 0 && (\n        <List\n          size=\"small\"\n          itemLayout=\"vertical\"\n          dataSource={info}\n          renderItem={([name, value]) => (\n            <List.Item extra={<span className=\"badge\">{value}</span>}>{toHuman(name)}</List.Item>\n          )}\n        />\n      )}\n    </Card>\n  );\n}\n\nexport function DatabaseMetrics({ info }) {\n  return (\n    <Card title=\"Redash Database\" size=\"small\">\n      {info.length === 0 && <div className=\"text-muted text-center\">No data</div>}\n      {info.length > 0 && (\n        <List\n          size=\"small\"\n          itemLayout=\"vertical\"\n          dataSource={info}\n          renderItem={([name, size]) => (\n            <List.Item extra={<span className=\"badge\">{prettySize(size)}</span>}>{name}</List.Item>\n          )}\n        />\n      )}\n    </Card>\n  );\n}\n\nexport function Queues({ info }) {\n  info = toPairs(info);\n  return (\n    <Card title=\"Queues\" size=\"small\">\n      {info.length === 0 && <div className=\"text-muted text-center\">No data</div>}\n      {info.length > 0 && (\n        <List\n          size=\"small\"\n          itemLayout=\"vertical\"\n          dataSource={info}\n          renderItem={([name, queue]) => (\n            <List.Item extra={<span className=\"badge\">{queue.size}</span>}>{name}</List.Item>\n          )}\n        />\n      )}\n    </Card>\n  );\n}\n\nexport function Manager({ info }) {\n  const items = info\n    ? [\n        <List.Item\n          extra={\n            <span className=\"badge\">\n              <TimeAgo date={info.lastRefreshAt} placeholder=\"n/a\" />\n            </span>\n          }>\n          Last Refresh\n        </List.Item>,\n        <List.Item\n          extra={\n            <span className=\"badge\">\n              <TimeAgo date={info.startedAt} placeholder=\"n/a\" />\n            </span>\n          }>\n          Started\n        </List.Item>,\n        <List.Item extra={<span className=\"badge\">{info.outdatedQueriesCount}</span>}>\n          Outdated Queries Count\n        </List.Item>,\n      ]\n    : [];\n\n  return (\n    <Card title=\"Manager\" size=\"small\">\n      {!info && <div className=\"text-muted text-center\">No data</div>}\n      {info && <List size=\"small\" itemLayout=\"vertical\" dataSource={items} renderItem={item => item} />}\n    </Card>\n  );\n}\n","import { omit } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport Layout from \"@/components/admin/Layout\";\nimport * as StatusBlock from \"@/components/admin/StatusBlock\";\n\nimport { axios } from \"@/services/axios\";\nimport recordEvent from \"@/services/recordEvent\";\nimport routes from \"@/services/routes\";\n\nimport \"./system-status.less\";\n\nclass SystemStatus extends React.Component {\n  static propTypes = {\n    onError: PropTypes.func,\n  };\n\n  static defaultProps = {\n    onError: () => {},\n  };\n\n  state = {\n    queues: [],\n    manager: null,\n    databaseMetrics: {},\n    status: {},\n  };\n\n  _refreshTimer = null;\n\n  componentDidMount() {\n    recordEvent(\"view\", \"page\", \"admin/status\");\n    this.refresh();\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this._refreshTimer);\n  }\n\n  refresh = () => {\n    axios\n      .get(\"/status.json\")\n      .then(data => {\n        this.setState({\n          queues: data.manager.queues,\n          manager: {\n            startedAt: data.manager.started_at * 1000,\n            lastRefreshAt: data.manager.last_refresh_at * 1000,\n            outdatedQueriesCount: data.manager.outdated_queries_count,\n          },\n          databaseMetrics: data.database_metrics.metrics || [],\n          status: omit(data, [\"workers\", \"manager\", \"database_metrics\"]),\n        });\n      })\n      .catch(error => this.props.onError(error));\n    this._refreshTimer = setTimeout(this.refresh, 60 * 1000);\n  };\n\n  render() {\n    return (\n      <Layout activeTab=\"system_status\">\n        <div className=\"system-status-page\">\n          <div className=\"system-status-page-blocks\">\n            <div className=\"system-status-page-block\">\n              <StatusBlock.General info={this.state.status} />\n            </div>\n            <div className=\"system-status-page-block\">\n              <StatusBlock.Manager info={this.state.manager} />\n            </div>\n            <div className=\"system-status-page-block\">\n              <StatusBlock.Queues info={this.state.queues} />\n            </div>\n            <div className=\"system-status-page-block\">\n              <StatusBlock.DatabaseMetrics info={this.state.databaseMetrics} />\n            </div>\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nroutes.register(\n  \"Admin.SystemStatus\",\n  routeWithUserSession({\n    path: \"/admin/status\",\n    title: \"System Status\",\n    render: pageProps => <SystemStatus {...pageProps} />,\n  })\n);\n","import { axios } from \"@/services/axios\";\nimport { merge } from \"lodash\";\n\n// backwards compatibility\nconst normalizeCondition = {\n  \"greater than\": \">\",\n  \"less than\": \"<\",\n  equals: \"=\",\n};\n\nconst transformResponse = data =>\n  merge({}, data, {\n    options: {\n      op: normalizeCondition[data.options.op] || data.options.op,\n    },\n  });\n\nconst transformRequest = data => {\n  const newData = Object.assign({}, data);\n  if (newData.query_id === undefined) {\n    newData.query_id = newData.query.id;\n    newData.destination_id = newData.destinations;\n    delete newData.query;\n    delete newData.destinations;\n  }\n\n  return newData;\n};\n\nconst saveOrCreateUrl = data => (data.id ? `api/alerts/${data.id}` : \"api/alerts\");\n\nconst Alert = {\n  query: () => axios.get(\"api/alerts\"),\n  get: ({ id }) => axios.get(`api/alerts/${id}`).then(transformResponse),\n  save: data => axios.post(saveOrCreateUrl(data), transformRequest(data)),\n  delete: data => axios.delete(`api/alerts/${data.id}`),\n  mute: data => axios.post(`api/alerts/${data.id}/mute`),\n  unmute: data => axios.delete(`api/alerts/${data.id}/mute`),\n};\n\nexport default Alert;\n","import { toUpper } from \"lodash\";\nimport React from \"react\";\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport Link from \"@/components/Link\";\nimport PageHeader from \"@/components/PageHeader\";\nimport Paginator from \"@/components/Paginator\";\nimport EmptyState, { EmptyStateHelpMessage } from \"@/components/empty-state/EmptyState\";\nimport { wrap as itemsList, ControllerType } from \"@/components/items-list/ItemsList\";\nimport { ResourceItemsSource } from \"@/components/items-list/classes/ItemsSource\";\nimport { StateStorage } from \"@/components/items-list/classes/StateStorage\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\n\nimport ItemsTable, { Columns } from \"@/components/items-list/components/ItemsTable\";\n\nimport Alert from \"@/services/alert\";\nimport { currentUser } from \"@/services/auth\";\nimport routes from \"@/services/routes\";\n\nexport const STATE_CLASS = {\n  unknown: \"label-warning\",\n  ok: \"label-success\",\n  triggered: \"label-danger\",\n};\n\nclass AlertsList extends React.Component {\n  static propTypes = {\n    controller: ControllerType.isRequired,\n  };\n\n  listColumns = [\n    Columns.custom.sortable(\n      (text, alert) => (\n        <span title={alert.options.muted ? \"Muted\" : \"Active\"}>\n          <i className={`fa fa-bell-${alert.options.muted ? \"slash\" : \"o\"} p-r-0`} aria-hidden=\"true\" />\n          <span className=\"sr-only\">{alert.options.muted ? \"Muted\" : \"Active\"}</span>\n        </span>\n      ),\n      {\n        title: (\n          <>\n            <i className=\"fa fa-bell p-r-0\" aria-hidden=\"true\" />\n            <span className=\"sr-only\">Sort by notification status.</span>\n          </>\n        ),\n        field: \"muted\",\n        width: \"1%\",\n      }\n    ),\n    Columns.custom.sortable(\n      (text, alert) => (\n        <div>\n          <Link className=\"table-main-title\" href={\"alerts/\" + alert.id}>\n            {alert.name}\n          </Link>\n        </div>\n      ),\n      {\n        title: \"Name\",\n        field: \"name\",\n      }\n    ),\n    Columns.custom((text, item) => item.user.name, { title: \"Created By\", width: \"1%\" }),\n    Columns.custom.sortable(\n      (text, alert) => (\n        <div>\n          <span className={`label ${STATE_CLASS[alert.state]}`}>{toUpper(alert.state)}</span>\n        </div>\n      ),\n      {\n        title: \"State\",\n        field: \"state\",\n        width: \"1%\",\n        className: \"text-nowrap\",\n      }\n    ),\n    Columns.timeAgo.sortable({ title: \"Last Updated At\", field: \"updated_at\", width: \"1%\" }),\n    Columns.dateTime.sortable({ title: \"Created At\", field: \"created_at\", width: \"1%\" }),\n  ];\n\n  render() {\n    const { controller } = this.props;\n\n    return (\n      <div className=\"page-alerts-list\">\n        <div className=\"container\">\n          <PageHeader\n            title={controller.params.pageTitle}\n            actions={\n              currentUser.hasPermission(\"list_alerts\") ? (\n                <Link.Button block type=\"primary\" href=\"alerts/new\">\n                  <i className=\"fa fa-plus m-r-5\" aria-hidden=\"true\" />\n                  New Alert\n                </Link.Button>\n              ) : null\n            }\n          />\n          <div>\n            {controller.isLoaded && controller.isEmpty ? (\n              <DynamicComponent name=\"AlertsList.EmptyState\">\n                <EmptyState\n                  icon=\"fa fa-bell-o\"\n                  illustration=\"alert\"\n                  description=\"Get notified on certain events\"\n                  helpMessage={<EmptyStateHelpMessage helpTriggerType=\"ALERTS\" />}\n                  showAlertStep\n                />\n              </DynamicComponent>\n            ) : (\n              <div className=\"table-responsive bg-white tiled\">\n                <ItemsTable\n                  loading={!controller.isLoaded}\n                  items={controller.pageItems}\n                  columns={this.listColumns}\n                  orderByField={controller.orderByField}\n                  orderByReverse={controller.orderByReverse}\n                  toggleSorting={controller.toggleSorting}\n                />\n                <Paginator\n                  showPageSizeSelect\n                  totalCount={controller.totalItemsCount}\n                  pageSize={controller.itemsPerPage}\n                  onPageSizeChange={itemsPerPage => controller.updatePagination({ itemsPerPage })}\n                  page={controller.page}\n                  onChange={page => controller.updatePagination({ page })}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst AlertsListPage = itemsList(\n  AlertsList,\n  () =>\n    new ResourceItemsSource({\n      isPlainList: true,\n      getRequest() {\n        return {};\n      },\n      getResource() {\n        return Alert.query.bind(Alert);\n      },\n    }),\n  () => new StateStorage({ orderByField: \"created_at\", orderByReverse: true, itemsPerPage: 20 })\n);\n\nroutes.register(\n  \"Alerts.List\",\n  routeWithUserSession({\n    path: \"/alerts\",\n    title: \"Alerts\",\n    render: pageProps => <AlertsListPage {...pageProps} currentPage=\"alerts\" />,\n  })\n);\n","import React, { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\n\nimport Modal from \"antd/lib/modal\";\nimport Dropdown from \"antd/lib/dropdown\";\nimport Menu from \"antd/lib/menu\";\nimport Button from \"antd/lib/button\";\n\nimport LoadingOutlinedIcon from \"@ant-design/icons/LoadingOutlined\";\nimport EllipsisOutlinedIcon from \"@ant-design/icons/EllipsisOutlined\";\nimport PlainButton from \"@/components/PlainButton\";\n\nexport default function MenuButton({ doDelete, canEdit, mute, unmute, muted }) {\n  const [loading, setLoading] = useState(false);\n\n  const execute = useCallback(action => {\n    setLoading(true);\n    action().finally(() => {\n      setLoading(false);\n    });\n  }, []);\n\n  const confirmDelete = useCallback(() => {\n    Modal.confirm({\n      title: \"Delete Alert\",\n      content: \"Are you sure you want to delete this alert?\",\n      okText: \"Delete\",\n      okType: \"danger\",\n      onOk: () => {\n        setLoading(true);\n        doDelete().catch(() => {\n          setLoading(false);\n        });\n      },\n      maskClosable: true,\n      autoFocusButton: null,\n    });\n  }, [doDelete]);\n\n  return (\n    <Dropdown\n      className={cx(\"m-l-5\", { disabled: !canEdit })}\n      trigger={[canEdit ? \"click\" : undefined]}\n      placement=\"bottomRight\"\n      overlay={\n        <Menu>\n          <Menu.Item>\n            {muted ? (\n              <PlainButton onClick={() => execute(unmute)}>Unmute Notifications</PlainButton>\n            ) : (\n              <PlainButton onClick={() => execute(mute)}>Mute Notifications</PlainButton>\n            )}\n          </Menu.Item>\n          <Menu.Item>\n            <PlainButton onClick={confirmDelete}>Delete</PlainButton>\n          </Menu.Item>\n        </Menu>\n      }>\n      <Button aria-label=\"More actions\">\n        {loading ? <LoadingOutlinedIcon /> : <EllipsisOutlinedIcon rotate={90} aria-hidden=\"true\" />}\n      </Button>\n    </Dropdown>\n  );\n}\n\nMenuButton.propTypes = {\n  doDelete: PropTypes.func.isRequired,\n  canEdit: PropTypes.bool.isRequired,\n  mute: PropTypes.func.isRequired,\n  unmute: PropTypes.func.isRequired,\n  muted: PropTypes.bool,\n};\n\nMenuButton.defaultProps = {\n  muted: false,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Input from \"antd/lib/input\";\nimport { getDefaultName } from \"../Alert\";\n\nimport { Alert as AlertType } from \"@/components/proptypes\";\n\nimport \"./Title.less\";\n\nexport default function Title({ alert, editMode, name, onChange, children }) {\n  const defaultName = getDefaultName(alert);\n  return (\n    <div className=\"alert-header\">\n      <div className=\"alert-title\">\n        <h3>\n          {editMode && alert.query ? (\n            // BUG: Input is not the same width as the container\n            // TODO: consider adding a label (not obvious for sighted users)\n            <Input\n              className=\"f-inherit\"\n              placeholder={defaultName}\n              value={name}\n              aria-label=\"Alert title\"\n              onChange={e => onChange(e.target.value)}\n            />\n          ) : (\n            name || defaultName\n          )}\n        </h3>\n      </div>\n      <div className=\"alert-actions\">{children}</div>\n    </div>\n  );\n}\n\nTitle.propTypes = {\n  alert: AlertType.isRequired,\n  name: PropTypes.string,\n  children: PropTypes.node,\n  onChange: PropTypes.func,\n  editMode: PropTypes.bool,\n};\n\nTitle.defaultProps = {\n  name: null,\n  children: null,\n  onChange: null,\n  editMode: false,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { head, includes, toString, isEmpty } from \"lodash\";\n\nimport Input from \"antd/lib/input\";\nimport WarningFilledIcon from \"@ant-design/icons/WarningFilled\";\nimport Select from \"antd/lib/select\";\nimport Divider from \"antd/lib/divider\";\n\nimport { AlertOptions as AlertOptionsType } from \"@/components/proptypes\";\n\nimport \"./Criteria.less\";\n\nconst CONDITIONS = {\n  \">\": \"\\u003e\",\n  \">=\": \"\\u2265\",\n  \"<\": \"\\u003c\",\n  \"<=\": \"\\u2264\",\n  \"==\": \"\\u003d\",\n  \"!=\": \"\\u2260\",\n};\n\nconst VALID_STRING_CONDITIONS = [\"==\", \"!=\"];\n\nfunction DisabledInput({ children, minWidth }) {\n  return (\n    <div className=\"criteria-disabled-input\" style={{ minWidth }}>\n      {children}\n    </div>\n  );\n}\n\nDisabledInput.propTypes = {\n  children: PropTypes.node.isRequired,\n  minWidth: PropTypes.number.isRequired,\n};\n\nexport default function Criteria({ columnNames, resultValues, alertOptions, onChange, editMode }) {\n  const columnValue = !isEmpty(resultValues) ? head(resultValues)[alertOptions.column] : null;\n  const invalidMessage = (() => {\n    // bail if condition is valid for strings\n    if (includes(VALID_STRING_CONDITIONS, alertOptions.op)) {\n      return null;\n    }\n\n    if (isNaN(alertOptions.value)) {\n      return \"Value column type doesn't match threshold type.\";\n    }\n\n    if (isNaN(columnValue)) {\n      return \"Value column isn't supported by condition type.\";\n    }\n\n    return null;\n  })();\n\n  const columnHint = (\n    <small className=\"alert-criteria-hint\">\n      Top row value is <code className=\"p-0\">{toString(columnValue) || \"unknown\"}</code>\n    </small>\n  );\n\n  return (\n    <div data-test=\"Criteria\">\n      <div className=\"input-title\">\n        <span className=\"input-label\">Value column</span>\n        {editMode ? (\n          <Select\n            value={alertOptions.column}\n            onChange={column => onChange({ column })}\n            dropdownMatchSelectWidth={false}\n            style={{ minWidth: 100 }}>\n            {columnNames.map(name => (\n              <Select.Option key={name}>{name}</Select.Option>\n            ))}\n          </Select>\n        ) : (\n          <DisabledInput minWidth={70}>{alertOptions.column}</DisabledInput>\n        )}\n      </div>\n      <div className=\"input-title\">\n        <span className=\"input-label\">Condition</span>\n        {editMode ? (\n          <Select\n            value={alertOptions.op}\n            onChange={op => onChange({ op })}\n            optionLabelProp=\"label\"\n            dropdownMatchSelectWidth={false}\n            style={{ width: 55 }}>\n            <Select.Option value=\">\" label={CONDITIONS[\">\"]}>\n              {CONDITIONS[\">\"]} greater than\n            </Select.Option>\n            <Select.Option value=\">=\" label={CONDITIONS[\">=\"]}>\n              {CONDITIONS[\">=\"]} greater than or equals\n            </Select.Option>\n            <Select.Option disabled key=\"dv1\">\n              <Divider className=\"select-option-divider m-t-10 m-b-5\" />\n            </Select.Option>\n            <Select.Option value=\"<\" label={CONDITIONS[\"<\"]}>\n              {CONDITIONS[\"<\"]} less than\n            </Select.Option>\n            <Select.Option value=\"<=\" label={CONDITIONS[\"<=\"]}>\n              {CONDITIONS[\"<=\"]} less than or equals\n            </Select.Option>\n            <Select.Option disabled key=\"dv2\">\n              <Divider className=\"select-option-divider m-t-10 m-b-5\" />\n            </Select.Option>\n            <Select.Option value=\"==\" label={CONDITIONS[\"==\"]}>\n              {CONDITIONS[\"==\"]} equals\n            </Select.Option>\n            <Select.Option value=\"!=\" label={CONDITIONS[\"!=\"]}>\n              {CONDITIONS[\"!=\"]} not equal to\n            </Select.Option>\n          </Select>\n        ) : (\n          <DisabledInput minWidth={50}>{CONDITIONS[alertOptions.op]}</DisabledInput>\n        )}\n      </div>\n      <div className=\"input-title\">\n        <label className=\"input-label\" htmlFor=\"threshold-criterion\">\n          Threshold\n        </label>\n        {editMode ? (\n          <Input\n            id=\"threshold-criterion\"\n            style={{ width: 90 }}\n            value={alertOptions.value}\n            onChange={e => onChange({ value: e.target.value })}\n          />\n        ) : (\n          <DisabledInput minWidth={50}>{alertOptions.value}</DisabledInput>\n        )}\n      </div>\n      <div className=\"ant-form-item-explain\">\n        {columnHint}\n        <br />\n        {invalidMessage && (\n          <small>\n            <WarningFilledIcon className=\"warning-icon-danger\" /> {invalidMessage}\n          </small>\n        )}\n      </div>\n    </div>\n  );\n}\n\nCriteria.propTypes = {\n  columnNames: PropTypes.arrayOf(PropTypes.string).isRequired,\n  resultValues: PropTypes.arrayOf(PropTypes.object).isRequired,\n  alertOptions: AlertOptionsType.isRequired,\n  onChange: PropTypes.func,\n  editMode: PropTypes.bool,\n};\n\nCriteria.defaultProps = {\n  onChange: () => {},\n  editMode: false,\n};\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { toLower, isNumber } from \"lodash\";\n\nimport InputNumber from \"antd/lib/input-number\";\nimport Select from \"antd/lib/select\";\n\nimport \"./Rearm.less\";\n\nconst DURATIONS = [\n  [\"Second\", 1],\n  [\"Minute\", 60],\n  [\"Hour\", 3600],\n  [\"Day\", 86400],\n  [\"Week\", 604800],\n];\n\nfunction RearmByDuration({ value, onChange, editMode }) {\n  const [durationIdx, setDurationIdx] = useState();\n  const [count, setCount] = useState();\n\n  useEffect(() => {\n    for (let i = DURATIONS.length - 1; i >= 0; i -= 1) {\n      const [, durValue] = DURATIONS[i];\n      if (value % durValue === 0) {\n        setDurationIdx(i);\n        setCount(value / durValue);\n        break;\n      }\n    }\n  }, [value]);\n\n  if (!isNumber(count) || !isNumber(durationIdx)) {\n    return null;\n  }\n\n  const onChangeCount = newCount => {\n    setCount(newCount);\n    onChange(newCount * DURATIONS[durationIdx][1]);\n  };\n\n  const onChangeIdx = newIdx => {\n    setDurationIdx(newIdx);\n    onChange(count * DURATIONS[newIdx][1]);\n  };\n\n  const plural = count !== 1 ? \"s\" : \"\";\n\n  if (editMode) {\n    return (\n      <>\n        <InputNumber value={count} onChange={onChangeCount} min={1} precision={0} />\n        <Select value={durationIdx} onChange={onChangeIdx}>\n          {DURATIONS.map(([name], idx) => (\n            <Select.Option value={idx} key={name}>\n              {name}\n              {plural}\n            </Select.Option>\n          ))}\n        </Select>\n      </>\n    );\n  }\n\n  const [name] = DURATIONS[durationIdx];\n  return count + \" \" + toLower(name) + plural;\n}\n\nRearmByDuration.propTypes = {\n  onChange: PropTypes.func,\n  value: PropTypes.number.isRequired,\n  editMode: PropTypes.bool.isRequired,\n};\n\nRearmByDuration.defaultProps = {\n  onChange: () => {},\n};\n\nfunction RearmEditor({ value, onChange }) {\n  const [selected, setSelected] = useState(value < 2 ? value : 2);\n\n  const _onChange = newSelected => {\n    setSelected(newSelected);\n    onChange(newSelected < 2 ? newSelected : 3600);\n  };\n\n  return (\n    <div className=\"alert-rearm\">\n      <Select\n        optionLabelProp=\"label\"\n        defaultValue={selected || 0}\n        dropdownMatchSelectWidth={false}\n        onChange={_onChange}>\n        <Select.Option value={0} label=\"Just once\">\n          Just once <em>until back to normal</em>\n        </Select.Option>\n        <Select.Option value={1} label=\"Each time alert is evaluated\">\n          Each time alert is evaluated <em>until back to normal</em>\n        </Select.Option>\n        <Select.Option value={2} label=\"At most every\">\n          At most every ... <em>when alert is evaluated</em>\n        </Select.Option>\n      </Select>\n      {selected === 2 && value && <RearmByDuration value={value} onChange={onChange} editMode />}\n    </div>\n  );\n}\n\nRearmEditor.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nfunction RearmViewer({ value }) {\n  let phrase = \"\";\n  switch (value) {\n    case 0:\n      phrase = \"just once, until back to normal\";\n      break;\n    case 1:\n      phrase = \"each time alert is evaluated, until back to normal\";\n      break;\n    default:\n      phrase = (\n        <>\n          at most every <RearmByDuration value={value} editMode={false} />, when alert is evaluated\n        </>\n      );\n  }\n\n  return <span>Notifications are sent {phrase}.</span>;\n}\n\nRearmViewer.propTypes = {\n  value: PropTypes.number.isRequired,\n};\n\nexport default function Rearm({ editMode, ...props }) {\n  return editMode ? <RearmEditor {...props} /> : <RearmViewer {...props} />;\n}\n\nRearm.propTypes = {\n  onChange: PropTypes.func,\n  value: PropTypes.number.isRequired,\n  editMode: PropTypes.bool,\n};\n\nRearm.defaultProps = {\n  onChange: null,\n  editMode: false,\n};\n","import { useState, useEffect, useRef } from \"react\";\nimport { useDebouncedCallback } from \"use-debounce\";\n\nexport default function useSearchResults(fetch, { initialResults = null, debounceTimeout = 200 } = {}) {\n  const [result, setResult] = useState(initialResults);\n  const [isLoading, setIsLoading] = useState(false);\n  const currentSearchTerm = useRef(null);\n  const isDestroyed = useRef(false);\n\n  const [doSearch] = useDebouncedCallback(searchTerm => {\n    setIsLoading(true);\n    currentSearchTerm.current = searchTerm;\n    fetch(searchTerm)\n      .catch(() => initialResults)\n      .then(data => {\n        if (searchTerm === currentSearchTerm.current && !isDestroyed.current) {\n          setResult(data);\n          setIsLoading(false);\n        }\n      });\n  }, debounceTimeout);\n\n  useEffect(\n    () =>\n      // ignore all requests after component destruction\n      () => {\n        isDestroyed.current = true;\n      },\n    []\n  );\n\n  return [doSearch, result, isLoading];\n}\n","import { find } from \"lodash\";\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\nimport Input from \"antd/lib/input\";\nimport Select from \"antd/lib/select\";\nimport { Query } from \"@/services/query\";\nimport PlainButton from \"@/components/PlainButton\";\nimport notification from \"@/services/notification\";\nimport { QueryTagsControl } from \"@/components/tags-control/TagsControl\";\nimport useSearchResults from \"@/lib/hooks/useSearchResults\";\n\nconst { Option } = Select;\nfunction search(term) {\n  if (term === null) {\n    return Promise.resolve(null);\n  }\n\n  // get recent\n  if (!term) {\n    return Query.recent().then(results => results.filter(item => !item.is_draft)); // filter out draft\n  }\n\n  // search by query\n  return Query.query({ q: term }).then(({ results }) => results);\n}\n\nexport default function QuerySelector(props) {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedQuery, setSelectedQuery] = useState();\n  const [doSearch, searchResults, searching] = useSearchResults(search, { initialResults: [] });\n\n  const placeholder = \"Search a query by name\";\n  const clearIcon = (\n    <i\n      className=\"fa fa-times hide-in-percy\"\n      role=\"button\"\n      tabIndex={0}\n      aria-label=\"Clear\"\n      onClick={() => selectQuery(null)}\n    />\n  );\n  const spinIcon = (\n    <span role=\"status\" aria-live=\"polite\" aria-relevant=\"additions removals\">\n      <i className={cx(\"fa fa-spinner fa-pulse hide-in-percy\", { hidden: !searching })} aria-hidden=\"true\" />\n      <span className=\"sr-only\">Searching...</span>\n    </span>\n  );\n\n  useEffect(() => {\n    doSearch(searchTerm);\n  }, [doSearch, searchTerm]);\n\n  // set selected from prop\n  useEffect(() => {\n    if (props.selectedQuery) {\n      setSelectedQuery(props.selectedQuery);\n    }\n  }, [props.selectedQuery]);\n\n  function selectQuery(queryId) {\n    let query = null;\n    if (queryId) {\n      query = find(searchResults, { id: queryId });\n      if (!query) {\n        // shouldn't happen\n        notification.error(\"Something went wrong...\", \"Couldn't select query\");\n      }\n    }\n\n    setSearchTerm(query ? null : \"\"); // empty string triggers recent fetch\n    setSelectedQuery(query);\n    props.onChange(query);\n  }\n\n  function renderResults() {\n    if (!searchResults.length) {\n      return <div className=\"text-muted\">No results matching search term.</div>;\n    }\n\n    return (\n      <ul className=\"list-group\">\n        {searchResults.map(q => (\n          <PlainButton\n            className={cx(\"query-selector-result\", \"list-group-item\", { inactive: q.is_draft })}\n            key={q.id}\n            role=\"listitem\"\n            onClick={() => selectQuery(q.id)}\n            data-test={`QueryId${q.id}`}>\n            {q.name} <QueryTagsControl isDraft={q.is_draft} tags={q.tags} className=\"inline-tags-control\" />\n          </PlainButton>\n        ))}\n      </ul>\n    );\n  }\n\n  if (props.disabled) {\n    return (\n      <Input value={selectedQuery && selectedQuery.name} aria-label=\"Tied query\" placeholder={placeholder} disabled />\n    );\n  }\n\n  if (props.type === \"select\") {\n    const suffixIcon = selectedQuery ? clearIcon : null;\n    const value = selectedQuery ? selectedQuery.name : searchTerm;\n\n    return (\n      <Select\n        showSearch\n        dropdownMatchSelectWidth={false}\n        placeholder={placeholder}\n        value={value || undefined} // undefined for the placeholder to show\n        onSearch={setSearchTerm}\n        onChange={selectQuery}\n        suffixIcon={searching ? spinIcon : suffixIcon}\n        notFoundContent={null}\n        filterOption={false}\n        defaultActiveFirstOption={false}\n        className={props.className}\n        data-test=\"QuerySelector\">\n        {searchResults &&\n          searchResults.map(q => {\n            const disabled = q.is_draft;\n            return (\n              <Option\n                value={q.id}\n                key={q.id}\n                disabled={disabled}\n                className=\"query-selector-result\"\n                data-test={`QueryId${q.id}`}>\n                {q.name}{\" \"}\n                <QueryTagsControl\n                  isDraft={q.is_draft}\n                  tags={q.tags}\n                  className={cx(\"inline-tags-control\", { disabled })}\n                />\n              </Option>\n            );\n          })}\n      </Select>\n    );\n  }\n\n  return (\n    <span data-test=\"QuerySelector\">\n      {selectedQuery ? (\n        <Input value={selectedQuery.name} aria-label=\"Tied query\" suffix={clearIcon} readOnly />\n      ) : (\n        <Input\n          placeholder={placeholder}\n          value={searchTerm}\n          aria-label=\"Tied query\"\n          onChange={e => setSearchTerm(e.target.value)}\n          suffix={spinIcon}\n        />\n      )}\n      <div className=\"scrollbox\" style={{ maxHeight: \"50vh\", marginTop: 15 }}>\n        {searchResults && renderResults()}\n      </div>\n    </span>\n  );\n}\n\nQuerySelector.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  selectedQuery: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  type: PropTypes.oneOf([\"select\", \"default\"]),\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n};\n\nQuerySelector.defaultProps = {\n  selectedQuery: null,\n  type: \"default\",\n  className: null,\n  disabled: false,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Link from \"@/components/Link\";\nimport QuerySelector from \"@/components/QuerySelector\";\nimport SchedulePhrase from \"@/components/queries/SchedulePhrase\";\nimport { Query as QueryType } from \"@/components/proptypes\";\n\nimport Tooltip from \"@/components/Tooltip\";\n\nimport WarningFilledIcon from \"@ant-design/icons/WarningFilled\";\nimport QuestionCircleTwoToneIcon from \"@ant-design/icons/QuestionCircleTwoTone\";\nimport LoadingOutlinedIcon from \"@ant-design/icons/LoadingOutlined\";\n\nimport \"./Query.less\";\n\nexport default function QueryFormItem({ query, queryResult, onChange, editMode }) {\n  const queryHint =\n    query && query.schedule ? (\n      <small>\n        Scheduled to refresh{\" \"}\n        <i className=\"alert-query-schedule\">\n          <SchedulePhrase schedule={query.schedule} isNew={false} />\n        </i>\n      </small>\n    ) : (\n      <small>\n        <WarningFilledIcon className=\"warning-icon-danger\" /> This query has no <i>refresh schedule</i>.{\" \"}\n        <Tooltip title=\"A query schedule is not necessary but is highly recommended for alerts. An Alert without a query schedule will only send notifications if a user in your organization manually executes this query.\">\n          <a role=\"presentation\">\n            Why it&apos;s recommended <QuestionCircleTwoToneIcon />\n          </a>\n        </Tooltip>\n      </small>\n    );\n\n  return (\n    <>\n      {editMode ? (\n        <QuerySelector onChange={onChange} selectedQuery={query} className=\"alert-query-selector\" type=\"select\" />\n      ) : (\n        <Tooltip title=\"Open query in a new tab.\">\n          <Link href={`queries/${query.id}`} target=\"_blank\" rel=\"noopener noreferrer\" className=\"alert-query-link\">\n            {query.name} <i className=\"fa fa-external-link\" aria-hidden=\"true\" />\n            <span className=\"sr-only\">(opens in a new tab)</span>\n          </Link>\n        </Tooltip>\n      )}\n      <div className=\"ant-form-item-explain\">{query && queryHint}</div>\n      {query && !queryResult && (\n        <div className=\"m-t-30\">\n          <LoadingOutlinedIcon className=\"m-r-5\" /> Loading query data\n        </div>\n      )}\n    </>\n  );\n}\n\nQueryFormItem.propTypes = {\n  query: QueryType,\n  queryResult: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  onChange: PropTypes.func,\n  editMode: PropTypes.bool,\n};\n\nQueryFormItem.defaultProps = {\n  query: null,\n  queryResult: null,\n  onChange: () => {},\n  editMode: false,\n};\n","import { filter, find, isEmpty, size } from \"lodash\";\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport Modal from \"antd/lib/modal\";\nimport Input from \"antd/lib/input\";\nimport List from \"antd/lib/list\";\nimport Button from \"antd/lib/button\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport BigMessage from \"@/components/BigMessage\";\nimport LoadingState from \"@/components/items-list/components/LoadingState\";\nimport notification from \"@/services/notification\";\nimport useSearchResults from \"@/lib/hooks/useSearchResults\";\n\nimport \"./SelectItemsDialog.less\";\n\nfunction ItemsList({ items, renderItem, onItemClick }) {\n  const renderListItem = useCallback(\n    item => {\n      const { content, className, isDisabled } = renderItem(item);\n\n      return (\n        <List.Item\n          className={classNames(\"select-items-list\", \"w-100\", \"p-l-10\", \"p-r-10\", { disabled: isDisabled }, className)}\n          onClick={isDisabled ? null : () => onItemClick(item)}>\n          {content}\n        </List.Item>\n      );\n    },\n    [renderItem, onItemClick]\n  );\n\n  return <List size=\"small\" dataSource={items} renderItem={renderListItem} />;\n}\n\nItemsList.propTypes = {\n  items: PropTypes.array,\n  renderItem: PropTypes.func,\n  onItemClick: PropTypes.func,\n};\n\nItemsList.defaultProps = {\n  items: [],\n  renderItem: () => {},\n  onItemClick: () => {},\n};\n\nfunction SelectItemsDialog({\n  dialog,\n  dialogTitle,\n  inputPlaceholder,\n  itemKey,\n  renderItem,\n  renderStagedItem,\n  searchItems,\n  selectedItemsTitle,\n  width,\n  showCount,\n  extraFooterContent,\n}) {\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [search, items, isLoading] = useSearchResults(searchItems, { initialResults: [] });\n  const hasResults = items.length > 0;\n\n  useEffect(() => {\n    search();\n  }, [search]);\n\n  const isItemSelected = useCallback(\n    item => {\n      const key = itemKey(item);\n      return !!find(selectedItems, i => itemKey(i) === key);\n    },\n    [selectedItems, itemKey]\n  );\n\n  const toggleItem = useCallback(\n    item => {\n      if (isItemSelected(item)) {\n        const key = itemKey(item);\n        setSelectedItems(filter(selectedItems, i => itemKey(i) !== key));\n      } else {\n        setSelectedItems([...selectedItems, item]);\n      }\n    },\n    [selectedItems, itemKey, isItemSelected]\n  );\n\n  const save = useCallback(() => {\n    dialog.close(selectedItems).catch(error => {\n      if (error) {\n        notification.error(\"Failed to save some of selected items.\");\n      }\n    });\n  }, [dialog, selectedItems]);\n\n  return (\n    <Modal\n      {...dialog.props}\n      className=\"select-items-dialog\"\n      width={width}\n      title={dialogTitle}\n      footer={\n        <div className=\"d-flex align-items-center\">\n          <span className=\"flex-fill m-r-5\" style={{ textAlign: \"left\", color: \"rgba(0, 0, 0, 0.5)\" }}>\n            {extraFooterContent}\n          </span>\n          <Button {...dialog.props.cancelButtonProps} onClick={dialog.dismiss}>\n            Cancel\n          </Button>\n          <Button\n            {...dialog.props.okButtonProps}\n            onClick={save}\n            disabled={selectedItems.length === 0 || dialog.props.okButtonProps.disabled}\n            type=\"primary\">\n            Save\n            {showCount && !isEmpty(selectedItems) ? ` (${size(selectedItems)})` : null}\n          </Button>\n        </div>\n      }>\n      <div className=\"d-flex align-items-center m-b-10\">\n        <div className=\"flex-fill\">\n          <Input.Search\n            onChange={event => search(event.target.value)}\n            placeholder={inputPlaceholder}\n            aria-label={inputPlaceholder}\n            autoFocus\n          />\n        </div>\n        {renderStagedItem && (\n          <div className=\"w-50 m-l-20\">\n            <h5 className=\"m-0\">{selectedItemsTitle}</h5>\n          </div>\n        )}\n      </div>\n\n      <div className=\"d-flex align-items-stretch\" style={{ minHeight: \"30vh\", maxHeight: \"50vh\" }}>\n        <div className=\"flex-fill scrollbox\">\n          {isLoading && <LoadingState className=\"\" />}\n          {!isLoading && !hasResults && (\n            <BigMessage icon=\"fa-search\" message=\"No items match your search.\" className=\"\" />\n          )}\n          {!isLoading && hasResults && (\n            <ItemsList\n              items={items}\n              renderItem={item => renderItem(item, { isSelected: isItemSelected(item) })}\n              onItemClick={toggleItem}\n            />\n          )}\n        </div>\n        {renderStagedItem && (\n          <div className=\"w-50 m-l-20 scrollbox\">\n            {selectedItems.length > 0 && (\n              <ItemsList\n                items={selectedItems}\n                renderItem={item => renderStagedItem(item, { isSelected: true })}\n                onItemClick={toggleItem}\n              />\n            )}\n          </div>\n        )}\n      </div>\n    </Modal>\n  );\n}\n\nSelectItemsDialog.propTypes = {\n  dialog: DialogPropType.isRequired,\n  dialogTitle: PropTypes.string,\n  inputPlaceholder: PropTypes.string,\n  selectedItemsTitle: PropTypes.string,\n  searchItems: PropTypes.func.isRequired, // (searchTerm: string): Promise<Items[]> if `searchTerm === ''` load all\n  itemKey: PropTypes.func, // (item) => string|number - return key of item (by default `id`)\n  // left list\n  // (item, { isSelected }) => {\n  //   content: node, // item contents\n  //   className: string = '', // additional class for item wrapper\n  //   isDisabled: bool = false, // is item clickable or disabled\n  // }\n  renderItem: PropTypes.func,\n  // right list; args/results save as for `renderItem`. if not specified - `renderItem` will be used\n  renderStagedItem: PropTypes.func,\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  extraFooterContent: PropTypes.node,\n  showCount: PropTypes.bool,\n};\n\nSelectItemsDialog.defaultProps = {\n  dialogTitle: \"Add Items\",\n  inputPlaceholder: \"Search...\",\n  selectedItemsTitle: \"Selected items\",\n  itemKey: item => item.id,\n  renderItem: () => \"\",\n  renderStagedItem: null, // hidden by default\n  width: \"80%\",\n  extraFooterContent: null,\n  showCount: false,\n};\n\nexport default wrapDialog(SelectItemsDialog);\n","import { axios } from \"@/services/axios\";\n\nexport const IMG_ROOT = \"static/images/destinations\";\n\nconst Destination = {\n  query: () => axios.get(\"api/destinations\"),\n  get: ({ id }) => axios.get(`api/destinations/${id}`),\n  types: () => axios.get(\"api/destinations/types\"),\n  create: data => axios.post(`api/destinations`, data),\n  save: data => axios.post(`api/destinations/${data.id}`, data),\n  delete: ({ id }) => axios.delete(`api/destinations/${id}`),\n};\n\nexport default Destination;\n","import { axios } from \"@/services/axios\";\n\nconst AlertSubscription = {\n  query: ({ alertId }) => axios.get(`api/alerts/${alertId}/subscriptions`),\n  create: data => axios.post(`api/alerts/${data.alert_id}/subscriptions`, data),\n  delete: data => axios.delete(`api/alerts/${data.alert_id}/subscriptions/${data.id}`),\n};\n\nexport default AlertSubscription;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Tooltip from \"@/components/Tooltip\";\n\nexport default function ListItemAddon({ isSelected, isStaged, alreadyInGroup, deselectedIcon }) {\n  if (isStaged) {\n    return (\n      <>\n        <i className=\"fa fa-remove\" aria-hidden=\"true\" />\n        <span className=\"sr-only\">Remove</span>\n      </>\n    );\n  }\n  if (alreadyInGroup) {\n    return (\n      <Tooltip title=\"Already selected\">\n        {/* eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex */}\n        <span tabIndex={0}>\n          <i className=\"fa fa-check\" aria-hidden=\"true\" />\n          <span className=\"sr-only\">Already selected</span>\n        </span>\n      </Tooltip>\n    );\n  }\n  return isSelected ? (\n    <>\n      <i className=\"fa fa-check\" aria-hidden=\"true\" />\n      <span className=\"sr-only\">Selected</span>\n    </>\n  ) : (\n    <>\n      <i className={`fa ${deselectedIcon}`} aria-hidden=\"true\" />\n      <span className=\"sr-only\">Select</span>\n    </>\n  );\n}\n\nListItemAddon.propTypes = {\n  isSelected: PropTypes.bool,\n  isStaged: PropTypes.bool,\n  alreadyInGroup: PropTypes.bool,\n  deselectedIcon: PropTypes.string,\n};\n\nListItemAddon.defaultProps = {\n  isSelected: false,\n  isStaged: false,\n  alreadyInGroup: false,\n  deselectedIcon: \"fa-angle-double-right\",\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { clientConfig, currentUser } from \"@/services/auth\";\nimport Tooltip from \"@/components/Tooltip\";\nimport Alert from \"antd/lib/alert\";\nimport HelpTrigger from \"@/components/HelpTrigger\";\nimport { useUniqueId } from \"@/lib/hooks/useUniqueId\";\n\nexport default function EmailSettingsWarning({ featureName, className, mode, adminOnly }) {\n  const messageDescriptionId = useUniqueId(\"sr-mail-description\");\n\n  if (!clientConfig.mailSettingsMissing) {\n    return null;\n  }\n\n  if (adminOnly && !currentUser.isAdmin) {\n    return null;\n  }\n\n  const message = (\n    <span id={messageDescriptionId}>\n      Your mail server isn&apos;t configured correctly, and is needed for {featureName} to work.{\" \"}\n      <HelpTrigger type=\"MAIL_CONFIG\" className=\"f-inherit\" />\n    </span>\n  );\n\n  if (mode === \"icon\") {\n    return (\n      <Tooltip title={message} placement=\"topRight\" arrowPointAtCenter>\n        {/* eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex */}\n        <span className={className} aria-label=\"Mail alert\" aria-describedby={messageDescriptionId} tabIndex={0}>\n          <i className={\"fa fa-exclamation-triangle\"} aria-hidden=\"true\" />\n        </span>\n      </Tooltip>\n    );\n  }\n\n  return <Alert message={message} type=\"error\" className={className} />;\n}\n\nEmailSettingsWarning.propTypes = {\n  featureName: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  mode: PropTypes.oneOf([\"alert\", \"icon\"]),\n  adminOnly: PropTypes.bool,\n};\n\nEmailSettingsWarning.defaultProps = {\n  className: null,\n  mode: \"alert\",\n  adminOnly: false,\n};\n","import { without, find, includes, map, toLower } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Link from \"@/components/Link\";\nimport Button from \"antd/lib/button\";\nimport SelectItemsDialog from \"@/components/SelectItemsDialog\";\nimport { Destination as DestinationType, UserProfile as UserType } from \"@/components/proptypes\";\n\nimport DestinationService, { IMG_ROOT } from \"@/services/destination\";\nimport AlertSubscription from \"@/services/alert-subscription\";\nimport { clientConfig, currentUser } from \"@/services/auth\";\nimport notification from \"@/services/notification\";\nimport ListItemAddon from \"@/components/groups/ListItemAddon\";\nimport EmailSettingsWarning from \"@/components/EmailSettingsWarning\";\nimport PlainButton from \"@/components/PlainButton\";\nimport Tooltip from \"@/components/Tooltip\";\n\nimport CloseOutlinedIcon from \"@ant-design/icons/CloseOutlined\";\nimport Switch from \"antd/lib/switch\";\n\nimport \"./AlertDestinations.less\";\n\nconst USER_EMAIL_DEST_ID = -1;\n\nfunction normalizeSub(sub) {\n  if (!sub.destination) {\n    sub.destination = {\n      id: USER_EMAIL_DEST_ID,\n      name: sub.user.email,\n      icon: \"DEPRECATED\",\n      type: \"email\",\n    };\n  }\n  return sub;\n}\n\nfunction ListItem({ destination: { name, type }, user, unsubscribe }) {\n  const canUnsubscribe = currentUser.isAdmin || currentUser.id === user.id;\n\n  return (\n    <li className=\"destination-wrapper\">\n      <img src={`${IMG_ROOT}/${type}.png`} className=\"destination-icon\" alt={name} />\n      <span className=\"flex-fill\">{name}</span>\n      {type === \"email\" && (\n        <EmailSettingsWarning className=\"destination-warning\" featureName=\"alert emails\" mode=\"icon\" />\n      )}\n      {canUnsubscribe && (\n        <Tooltip title=\"Remove\" mouseEnterDelay={0.5}>\n          <PlainButton className=\"remove-button\" onClick={unsubscribe}>\n            {/* TODO: lacks visual feedback */}\n            <CloseOutlinedIcon />\n          </PlainButton>\n        </Tooltip>\n      )}\n    </li>\n  );\n}\n\nListItem.propTypes = {\n  destination: DestinationType.isRequired,\n  user: UserType.isRequired,\n  unsubscribe: PropTypes.func.isRequired,\n};\n\nexport default class AlertDestinations extends React.Component {\n  static propTypes = {\n    alertId: PropTypes.any.isRequired,\n  };\n\n  state = {\n    dests: [],\n    subs: null,\n  };\n\n  componentDidMount() {\n    const { alertId } = this.props;\n    Promise.all([\n      DestinationService.query(), // get all destinations\n      AlertSubscription.query({ alertId }), // get subcriptions per alert\n    ]).then(([dests, subs]) => {\n      subs = subs.map(normalizeSub);\n      this.setState({ dests, subs });\n    });\n  }\n\n  showAddAlertSubDialog = () => {\n    const { dests, subs } = this.state;\n\n    SelectItemsDialog.showModal({\n      width: 570,\n      showCount: true,\n      extraFooterContent: (\n        <>\n          <i className=\"fa fa-info-circle\" aria-hidden=\"true\" /> Create new destinations in{\" \"}\n          <Tooltip title=\"Opens page in a new tab.\">\n            <Link href=\"destinations/new\" target=\"_blank\">\n              Alert Destinations\n            </Link>\n          </Tooltip>\n        </>\n      ),\n      dialogTitle: \"Add Existing Alert Destinations\",\n      inputPlaceholder: \"Search destinations...\",\n      searchItems: searchTerm => {\n        searchTerm = toLower(searchTerm);\n        return Promise.resolve(dests.filter(d => includes(toLower(d.name), searchTerm)));\n      },\n      renderItem: (item, { isSelected }) => {\n        const alreadyInGroup = !!find(subs, s => s.destination.id === item.id);\n\n        return {\n          content: (\n            <div className=\"destination-wrapper\">\n              <img src={`${IMG_ROOT}/${item.type}.png`} className=\"destination-icon\" alt={item.name} />\n              <span className=\"flex-fill\">{item.name}</span>\n              <ListItemAddon isSelected={isSelected} alreadyInGroup={alreadyInGroup} deselectedIcon=\"fa-plus\" />\n            </div>\n          ),\n          isDisabled: alreadyInGroup,\n          className: isSelected || alreadyInGroup ? \"selected\" : \"\",\n        };\n      },\n    }).onClose(items => {\n      const promises = map(items, item => this.subscribe(item));\n      return Promise.all(promises)\n        .then(() => {\n          notification.success(\"Subscribed.\");\n        })\n        .catch(() => {\n          notification.error(\"Failed saving subscription.\");\n          return Promise.reject(null); // keep dialog visible but suppress its default error message\n        });\n    });\n  };\n\n  onUserEmailToggle = sub => {\n    if (sub) {\n      this.unsubscribe(sub);\n    } else {\n      this.subscribe();\n    }\n  };\n\n  subscribe = dest => {\n    const { alertId } = this.props;\n\n    const sub = { alert_id: alertId };\n    if (dest) {\n      sub.destination_id = dest.id;\n    }\n\n    return AlertSubscription.create(sub).then(sub => {\n      const { subs } = this.state;\n      this.setState({\n        subs: [...subs, normalizeSub(sub)],\n      });\n    });\n  };\n\n  unsubscribe = sub => {\n    AlertSubscription.delete(sub)\n      .then(() => {\n        // not showing subscribe notification cause it's redundant here\n        const { subs } = this.state;\n        this.setState({\n          subs: without(subs, sub),\n        });\n      })\n      .catch(() => {\n        notification.error(\"Failed unsubscribing.\");\n      });\n  };\n\n  render() {\n    if (!this.props.alertId) {\n      return null;\n    }\n\n    const { subs } = this.state;\n    const currentUserEmailSub = find(subs, {\n      destination: { id: USER_EMAIL_DEST_ID },\n      user: { id: currentUser.id },\n    });\n    const filteredSubs = without(subs, currentUserEmailSub);\n    const { mailSettingsMissing } = clientConfig;\n\n    return (\n      <div className=\"alert-destinations\" data-test=\"AlertDestinations\">\n        <Tooltip title='Click to add an existing \"Alert Destination\"' mouseEnterDelay={0.5}>\n          <Button\n            data-test=\"ShowAddAlertSubDialog\"\n            type=\"primary\"\n            size=\"small\"\n            className=\"add-button\"\n            onClick={this.showAddAlertSubDialog}>\n            <i className=\"fa fa-plus f-12 m-r-5\" aria-hidden=\"true\" /> Add\n          </Button>\n        </Tooltip>\n        <ul>\n          <li className=\"destination-wrapper\">\n            <i className=\"destination-icon fa fa-envelope\" aria-hidden=\"true\" />\n            <span className=\"flex-fill\">{currentUser.email}</span>\n            <EmailSettingsWarning className=\"destination-warning\" featureName=\"alert emails\" mode=\"icon\" />\n            {!mailSettingsMissing && (\n              <Switch\n                size=\"small\"\n                className=\"toggle-button\"\n                checked={!!currentUserEmailSub}\n                loading={!subs}\n                onChange={() => this.onUserEmailToggle(currentUserEmailSub)}\n                data-test=\"UserEmailToggle\"\n              />\n            )}\n          </li>\n          {filteredSubs.map(s => (\n            <ListItem key={s.id} unsubscribe={() => this.unsubscribe(s)} {...s} />\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\nimport Form from \"antd/lib/form\";\n\nexport default function HorizontalFormItem({ children, label, className, ...props }) {\n  const labelCol = { span: 4 };\n  const wrapperCol = { span: 16 };\n  if (!label) {\n    wrapperCol.offset = 4;\n  }\n\n  className = cx(\"alert-form-item\", className);\n\n  return (\n    <Form.Item labelCol={labelCol} wrapperCol={wrapperCol} label={label} className={className} {...props}>\n      {children}\n    </Form.Item>\n  );\n}\n\nHorizontalFormItem.propTypes = {\n  children: PropTypes.node,\n  label: PropTypes.string,\n  className: PropTypes.string,\n};\n\nHorizontalFormItem.defaultProps = {\n  children: null,\n  label: null,\n  className: null,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\n\nimport Link from \"@/components/Link\";\nimport TimeAgo from \"@/components/TimeAgo\";\nimport { Alert as AlertType } from \"@/components/proptypes\";\n\nimport Form from \"antd/lib/form\";\nimport Button from \"antd/lib/button\";\nimport Tooltip from \"@/components/Tooltip\";\nimport AntAlert from \"antd/lib/alert\";\nimport * as Grid from \"antd/lib/grid\";\n\nimport Title from \"./components/Title\";\nimport Criteria from \"./components/Criteria\";\nimport Rearm from \"./components/Rearm\";\nimport Query from \"./components/Query\";\nimport AlertDestinations from \"./components/AlertDestinations\";\nimport HorizontalFormItem from \"./components/HorizontalFormItem\";\nimport { STATE_CLASS } from \"../alerts/AlertsList\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\n\nfunction AlertState({ state, lastTriggered }) {\n  return (\n    <div className=\"alert-state\">\n      <span className={`alert-state-indicator label ${STATE_CLASS[state]}`}>Status: {state}</span>\n      {state === \"unknown\" && <div className=\"ant-form-item-explain\">Alert condition has not been evaluated.</div>}\n      {lastTriggered && (\n        <div className=\"ant-form-item-explain\">\n          Last triggered{\" \"}\n          <span className=\"alert-last-triggered\">\n            <TimeAgo date={lastTriggered} />\n          </span>\n        </div>\n      )}\n    </div>\n  );\n}\n\nAlertState.propTypes = {\n  state: PropTypes.string.isRequired,\n  lastTriggered: PropTypes.string,\n};\n\nAlertState.defaultProps = {\n  lastTriggered: null,\n};\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport default class AlertView extends React.Component {\n  state = {\n    unmuting: false,\n  };\n\n  unmute = () => {\n    this.setState({ unmuting: true });\n    this.props.unmute().finally(() => {\n      this.setState({ unmuting: false });\n    });\n  };\n\n  render() {\n    const { alert, queryResult, canEdit, onEdit, menuButton } = this.props;\n    const { query, name, options, rearm } = alert;\n\n    return (\n      <>\n        <Title name={name} alert={alert}>\n          <DynamicComponent name=\"AlertView.HeaderExtra\" alert={alert} />\n          <Tooltip title={canEdit ? \"\" : \"You do not have sufficient permissions to edit this alert\"}>\n            <Button type=\"default\" onClick={canEdit ? onEdit : null} className={cx({ disabled: !canEdit })}>\n              <i className=\"fa fa-edit m-r-5\" aria-hidden=\"true\" />\n              Edit\n            </Button>\n            {menuButton}\n          </Tooltip>\n        </Title>\n        <div className=\"bg-white tiled p-20\">\n          <Grid.Row type=\"flex\" gutter={16}>\n            <Grid.Col xs={24} md={16} className=\"d-flex\">\n              <Form className=\"flex-fill\">\n                <HorizontalFormItem>\n                  <AlertState state={alert.state} lastTriggered={alert.last_triggered_at} />\n                </HorizontalFormItem>\n                <HorizontalFormItem label=\"Query\">\n                  <Query query={query} queryResult={queryResult} />\n                </HorizontalFormItem>\n                {queryResult && options && (\n                  <>\n                    <HorizontalFormItem label=\"Trigger when\" className=\"alert-criteria\">\n                      <Criteria\n                        columnNames={queryResult.getColumnNames()}\n                        resultValues={queryResult.getData()}\n                        alertOptions={options}\n                      />\n                    </HorizontalFormItem>\n                    <HorizontalFormItem label=\"Notifications\" className=\"form-item-line-height-normal\">\n                      <Rearm value={rearm || 0} />\n                      <br />\n                      Set to {options.custom_subject || options.custom_body ? \"custom\" : \"default\"} notification\n                      template.\n                    </HorizontalFormItem>\n                  </>\n                )}\n              </Form>\n            </Grid.Col>\n            <Grid.Col xs={24} md={8}>\n              {options.muted && (\n                <AntAlert\n                  className=\"m-b-20\"\n                  message={\n                    <>\n                      <i className=\"fa fa-bell-slash-o\" aria-hidden=\"true\" /> Notifications are muted\n                    </>\n                  }\n                  description={\n                    <>\n                      Notifications for this alert will not be sent.\n                      <br />\n                      {canEdit && (\n                        <>\n                          To restore notifications click\n                          <Button\n                            size=\"small\"\n                            type=\"primary\"\n                            onClick={this.unmute}\n                            loading={this.state.unmuting}\n                            className=\"m-t-5 m-l-5\">\n                            Unmute\n                          </Button>\n                        </>\n                      )}\n                    </>\n                  }\n                  type=\"warning\"\n                />\n              )}\n              <h4>\n                Destinations{\" \"}\n                <Tooltip title=\"Open Alert Destinations page in a new tab.\">\n                  <Link href=\"destinations\" target=\"_blank\">\n                    <i className=\"fa fa-external-link f-13\" aria-hidden=\"true\" />\n                    <span className=\"sr-only\">(opens in a new tab)</span>\n                  </Link>\n                </Tooltip>\n              </h4>\n              <AlertDestinations alertId={alert.id} />\n            </Grid.Col>\n          </Grid.Row>\n        </div>\n      </>\n    );\n  }\n}\n\nAlertView.propTypes = {\n  alert: AlertType.isRequired,\n  queryResult: PropTypes.object, // eslint-disable-line react/forbid-prop-types,\n  canEdit: PropTypes.bool.isRequired,\n  onEdit: PropTypes.func.isRequired,\n  menuButton: PropTypes.node.isRequired,\n  unmute: PropTypes.func,\n};\n\nAlertView.defaultProps = {\n  queryResult: null,\n  unmute: null,\n};\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { head, isEmpty, isNull, isUndefined } from \"lodash\";\nimport Mustache from \"mustache\";\n\nimport HelpTrigger from \"@/components/HelpTrigger\";\nimport { Alert as AlertType, Query as QueryType } from \"@/components/proptypes\";\n\nimport Input from \"antd/lib/input\";\nimport Select from \"antd/lib/select\";\nimport Modal from \"antd/lib/modal\";\nimport Switch from \"antd/lib/switch\";\n\nimport \"./NotificationTemplate.less\";\n\nfunction normalizeCustomTemplateData(alert, query, columnNames, resultValues) {\n  const topValue = !isEmpty(resultValues) ? head(resultValues)[alert.options.column] : null;\n\n  return {\n    ALERT_STATUS: \"TRIGGERED\",\n    ALERT_CONDITION: alert.options.op,\n    ALERT_THRESHOLD: alert.options.value,\n    ALERT_NAME: alert.name,\n    ALERT_URL: `${window.location.origin}/alerts/${alert.id}`,\n    QUERY_NAME: query.name,\n    QUERY_URL: `${window.location.origin}/queries/${query.id}`,\n    QUERY_RESULT_VALUE: isNull(topValue) || isUndefined(topValue) ? \"UNKNOWN\" : topValue,\n    QUERY_RESULT_ROWS: resultValues,\n    QUERY_RESULT_COLS: columnNames,\n  };\n}\n\nfunction NotificationTemplate({ alert, query, columnNames, resultValues, subject, setSubject, body, setBody }) {\n  const hasContent = !!(subject || body);\n  const [enabled, setEnabled] = useState(hasContent ? 1 : 0);\n  const [showPreview, setShowPreview] = useState(false);\n\n  const renderData = normalizeCustomTemplateData(alert, query, columnNames, resultValues);\n\n  const render = tmpl => Mustache.render(tmpl || \"\", renderData);\n  const onEnabledChange = value => {\n    if (value || !hasContent) {\n      setEnabled(value);\n      setShowPreview(false);\n    } else {\n      Modal.confirm({\n        title: \"Are you sure?\",\n        content: \"Switching to default template will discard your custom template.\",\n        onOk: () => {\n          setSubject(null);\n          setBody(null);\n          setEnabled(value);\n          setShowPreview(false);\n        },\n        maskClosable: true,\n        autoFocusButton: null,\n      });\n    }\n  };\n\n  return (\n    <div className=\"alert-template\">\n      <Select\n        value={enabled}\n        onChange={onEnabledChange}\n        optionLabelProp=\"label\"\n        dropdownMatchSelectWidth={false}\n        style={{ width: \"fit-content\" }}>\n        <Select.Option value={0} label=\"Use default template\">\n          Default template\n        </Select.Option>\n        <Select.Option value={1} label=\"Use custom template\">\n          Custom template\n        </Select.Option>\n      </Select>\n      {!!enabled && (\n        <div className=\"alert-custom-template\" data-test=\"AlertCustomTemplate\">\n          <div className=\"d-flex align-items-center\">\n            <h5 className=\"flex-fill\">Subject / Body</h5>\n            Preview{\" \"}\n            <Switch size=\"small\" className=\"alert-template-preview\" value={showPreview} onChange={setShowPreview} />\n          </div>\n          {/* TODO: consider adding real labels (not clear for sighted users as well) */}\n          <Input\n            value={showPreview ? render(subject) : subject}\n            aria-label=\"Subject\"\n            onChange={e => setSubject(e.target.value)}\n            disabled={showPreview}\n            data-test=\"CustomSubject\"\n          />\n          <Input.TextArea\n            value={showPreview ? render(body) : body}\n            aria-label=\"Body\"\n            autoSize={{ minRows: 9 }}\n            onChange={e => setBody(e.target.value)}\n            disabled={showPreview}\n            data-test=\"CustomBody\"\n          />\n          <HelpTrigger type=\"ALERT_NOTIF_TEMPLATE_GUIDE\" className=\"f-13\">\n            <i className=\"fa fa-question-circle\" aria-hidden=\"true\" /> Formatting guide{\" \"}\n            <span className=\"sr-only\">(help)</span>\n          </HelpTrigger>\n        </div>\n      )}\n    </div>\n  );\n}\n\nNotificationTemplate.propTypes = {\n  alert: AlertType.isRequired,\n  query: QueryType.isRequired,\n  columnNames: PropTypes.arrayOf(PropTypes.string).isRequired,\n  resultValues: PropTypes.arrayOf(PropTypes.any).isRequired,\n  subject: PropTypes.string,\n  setSubject: PropTypes.func.isRequired,\n  body: PropTypes.string,\n  setBody: PropTypes.func.isRequired,\n};\n\nNotificationTemplate.defaultProps = {\n  subject: \"\",\n  body: \"\",\n};\n\nexport default NotificationTemplate;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport HelpTrigger from \"@/components/HelpTrigger\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { Alert as AlertType } from \"@/components/proptypes\";\n\nimport Form from \"antd/lib/form\";\nimport Button from \"antd/lib/button\";\n\nimport Title from \"./components/Title\";\nimport Criteria from \"./components/Criteria\";\nimport NotificationTemplate from \"./components/NotificationTemplate\";\nimport Rearm from \"./components/Rearm\";\nimport Query from \"./components/Query\";\n\nimport HorizontalFormItem from \"./components/HorizontalFormItem\";\n\nexport default class AlertEdit extends React.Component {\n  _isMounted = false;\n\n  state = {\n    saving: false,\n  };\n\n  componentDidMount() {\n    this._isMounted = true;\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  save = () => {\n    this.setState({ saving: true });\n    this.props.save().catch(() => {\n      if (this._isMounted) {\n        this.setState({ saving: false });\n      }\n    });\n  };\n\n  cancel = () => {\n    this.props.cancel();\n  };\n\n  render() {\n    const { alert, queryResult, pendingRearm, onNotificationTemplateChange, menuButton } = this.props;\n    const { onQuerySelected, onNameChange, onRearmChange, onCriteriaChange } = this.props;\n    const { query, name, options } = alert;\n    const { saving } = this.state;\n\n    return (\n      <>\n        <Title name={name} alert={alert} onChange={onNameChange} editMode>\n          <DynamicComponent name=\"AlertEdit.HeaderExtra\" alert={alert} />\n          <Button className=\"m-r-5\" onClick={() => this.cancel()}>\n            <i className=\"fa fa-times m-r-5\" aria-hidden=\"true\" />\n            Cancel\n          </Button>\n          <Button type=\"primary\" onClick={() => this.save()}>\n            {saving ? (\n              <span role=\"status\" aria-live=\"polite\" aria-relevant=\"additions removals\">\n                <i className=\"fa fa-spinner fa-pulse m-r-5\" aria-hidden=\"true\" />\n                <span className=\"sr-only\">Saving...</span>\n              </span>\n            ) : (\n              <>\n                <i className=\"fa fa-check m-r-5\" aria-hidden=\"true\" />\n              </>\n            )}\n            Save Changes\n          </Button>\n          {menuButton}\n        </Title>\n        <div className=\"bg-white tiled p-20\">\n          <div className=\"d-flex\">\n            <Form className=\"flex-fill\">\n              <HorizontalFormItem label=\"Query\">\n                <Query query={query} queryResult={queryResult} onChange={onQuerySelected} editMode />\n              </HorizontalFormItem>\n              {queryResult && options && (\n                <>\n                  <HorizontalFormItem label=\"Trigger when\" className=\"alert-criteria\">\n                    <Criteria\n                      columnNames={queryResult.getColumnNames()}\n                      resultValues={queryResult.getData()}\n                      alertOptions={options}\n                      onChange={onCriteriaChange}\n                      editMode\n                    />\n                  </HorizontalFormItem>\n                  <HorizontalFormItem label=\"When triggered, send notification\">\n                    <Rearm value={pendingRearm || 0} onChange={onRearmChange} editMode />\n                  </HorizontalFormItem>\n                  <HorizontalFormItem label=\"Template\">\n                    <NotificationTemplate\n                      alert={alert}\n                      query={query}\n                      columnNames={queryResult.getColumnNames()}\n                      resultValues={queryResult.getData()}\n                      subject={options.custom_subject}\n                      setSubject={subject => onNotificationTemplateChange({ custom_subject: subject })}\n                      body={options.custom_body}\n                      setBody={body => onNotificationTemplateChange({ custom_body: body })}\n                    />\n                  </HorizontalFormItem>\n                </>\n              )}\n            </Form>\n            <div>\n              <HelpTrigger className=\"f-13\" type=\"ALERT_SETUP\">\n                Setup Instructions <i className=\"fa fa-question-circle\" aria-hidden=\"true\" />\n                <span className=\"sr-only\">(help)</span>\n              </HelpTrigger>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nAlertEdit.propTypes = {\n  alert: AlertType.isRequired,\n  queryResult: PropTypes.object, // eslint-disable-line react/forbid-prop-types,\n  pendingRearm: PropTypes.number,\n  menuButton: PropTypes.node.isRequired,\n  save: PropTypes.func.isRequired,\n  cancel: PropTypes.func.isRequired,\n  onQuerySelected: PropTypes.func.isRequired,\n  onNameChange: PropTypes.func.isRequired,\n  onCriteriaChange: PropTypes.func.isRequired,\n  onRearmChange: PropTypes.func.isRequired,\n  onNotificationTemplateChange: PropTypes.func.isRequired,\n};\n\nAlertEdit.defaultProps = {\n  queryResult: null,\n  pendingRearm: null,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport HelpTrigger from \"@/components/HelpTrigger\";\nimport { Alert as AlertType } from \"@/components/proptypes\";\n\nimport Form from \"antd/lib/form\";\nimport Button from \"antd/lib/button\";\n\nimport Title from \"./components/Title\";\nimport Criteria from \"./components/Criteria\";\nimport NotificationTemplate from \"./components/NotificationTemplate\";\nimport Rearm from \"./components/Rearm\";\nimport Query from \"./components/Query\";\nimport HorizontalFormItem from \"./components/HorizontalFormItem\";\n\nexport default class AlertNew extends React.Component {\n  state = {\n    saving: false,\n  };\n\n  save = () => {\n    this.setState({ saving: true });\n    this.props.save().catch(() => {\n      this.setState({ saving: false });\n    });\n  };\n\n  render() {\n    const { alert, queryResult, pendingRearm, onNotificationTemplateChange } = this.props;\n    const { onQuerySelected, onNameChange, onRearmChange, onCriteriaChange } = this.props;\n    const { query, name, options } = alert;\n    const { saving } = this.state;\n\n    return (\n      <>\n        <Title alert={alert} name={name} onChange={onNameChange} editMode />\n        <div className=\"bg-white tiled p-20\">\n          <div className=\"d-flex\">\n            <Form className=\"flex-fill\">\n              <div className=\"m-b-30\">\n                Start by selecting the query that you would like to monitor using the search bar.\n                <br />\n                Keep in mind that Alerts do not work with queries that use parameters.\n              </div>\n              <HorizontalFormItem label=\"Query\">\n                <Query query={query} queryResult={queryResult} onChange={onQuerySelected} editMode />\n              </HorizontalFormItem>\n              {queryResult && options && (\n                <>\n                  <HorizontalFormItem label=\"Trigger when\" className=\"alert-criteria\">\n                    <Criteria\n                      columnNames={queryResult.getColumnNames()}\n                      resultValues={queryResult.getData()}\n                      alertOptions={options}\n                      onChange={onCriteriaChange}\n                      editMode\n                    />\n                  </HorizontalFormItem>\n                  <HorizontalFormItem label=\"When triggered, send notification\">\n                    <Rearm value={pendingRearm || 0} onChange={onRearmChange} editMode />\n                  </HorizontalFormItem>\n                  <HorizontalFormItem label=\"Template\">\n                    <NotificationTemplate\n                      alert={alert}\n                      query={query}\n                      columnNames={queryResult.getColumnNames()}\n                      resultValues={queryResult.getData()}\n                      subject={options.custom_subject}\n                      setSubject={subject => onNotificationTemplateChange({ custom_subject: subject })}\n                      body={options.custom_body}\n                      setBody={body => onNotificationTemplateChange({ custom_body: body })}\n                    />\n                  </HorizontalFormItem>\n                </>\n              )}\n              <HorizontalFormItem>\n                <Button type=\"primary\" onClick={this.save} disabled={!query} className=\"btn-create-alert\">\n                  {saving && (\n                    <span role=\"status\" aria-live=\"polite\" aria-relevant=\"additions removals\">\n                      <i className=\"fa fa-spinner fa-pulse m-r-5\" aria-hidden=\"true\" />\n                      <span className=\"sr-only\">Saving...</span>\n                    </span>\n                  )}\n                  Create Alert\n                </Button>\n              </HorizontalFormItem>\n            </Form>\n            <HelpTrigger className=\"f-13\" type=\"ALERT_SETUP\">\n              Setup Instructions <i className=\"fa fa-question-circle\" aria-hidden=\"true\" />\n              <span className=\"sr-only\">(help)</span>\n            </HelpTrigger>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nAlertNew.propTypes = {\n  alert: AlertType.isRequired,\n  queryResult: PropTypes.object, // eslint-disable-line react/forbid-prop-types,\n  pendingRearm: PropTypes.number,\n  onQuerySelected: PropTypes.func.isRequired,\n  save: PropTypes.func.isRequired,\n  onNameChange: PropTypes.func.isRequired,\n  onRearmChange: PropTypes.func.isRequired,\n  onCriteriaChange: PropTypes.func.isRequired,\n  onNotificationTemplateChange: PropTypes.func.isRequired,\n};\n\nAlertNew.defaultProps = {\n  queryResult: null,\n  pendingRearm: null,\n};\n","import { head, includes, trim, template, values } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport LoadingState from \"@/components/items-list/components/LoadingState\";\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport navigateTo from \"@/components/ApplicationArea/navigateTo\";\n\nimport { currentUser } from \"@/services/auth\";\nimport notification from \"@/services/notification\";\nimport AlertService from \"@/services/alert\";\nimport { Query as QueryService } from \"@/services/query\";\nimport routes from \"@/services/routes\";\n\nimport MenuButton from \"./components/MenuButton\";\nimport AlertView from \"./AlertView\";\nimport AlertEdit from \"./AlertEdit\";\nimport AlertNew from \"./AlertNew\";\n\nconst MODES = {\n  NEW: 0,\n  VIEW: 1,\n  EDIT: 2,\n};\n\nconst defaultNameBuilder = template(\"<%= query.name %>: <%= options.column %> <%= options.op %> <%= options.value %>\");\n\nexport function getDefaultName(alert) {\n  if (!alert.query) {\n    return \"New Alert\";\n  }\n  return defaultNameBuilder(alert);\n}\n\nclass Alert extends React.Component {\n  static propTypes = {\n    mode: PropTypes.oneOf(values(MODES)),\n    alertId: PropTypes.string,\n    onError: PropTypes.func,\n  };\n\n  static defaultProps = {\n    mode: null,\n    alertId: null,\n    onError: () => {},\n  };\n\n  _isMounted = false;\n\n  state = {\n    alert: null,\n    queryResult: null,\n    pendingRearm: null,\n    canEdit: false,\n    mode: null,\n  };\n\n  componentDidMount() {\n    this._isMounted = true;\n    const { mode } = this.props;\n    this.setState({ mode });\n\n    if (mode === MODES.NEW) {\n      this.setState({\n        alert: {\n          options: {\n            op: \">\",\n            value: 1,\n            muted: false,\n          },\n        },\n        pendingRearm: 0,\n        canEdit: true,\n      });\n    } else {\n      const { alertId } = this.props;\n      AlertService.get({ id: alertId })\n        .then(alert => {\n          if (this._isMounted) {\n            const canEdit = currentUser.canEdit(alert);\n\n            // force view mode if can't edit\n            if (!canEdit) {\n              this.setState({ mode: MODES.VIEW });\n              notification.warn(\n                \"You cannot edit this alert\",\n                \"You do not have sufficient permissions to edit this alert, and have been redirected to the view-only page.\",\n                { duration: 0 }\n              );\n            }\n\n            this.setState({ alert, canEdit, pendingRearm: alert.rearm });\n            this.onQuerySelected(alert.query);\n          }\n        })\n        .catch(error => {\n          if (this._isMounted) {\n            this.props.onError(error);\n          }\n        });\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  save = () => {\n    const { alert, pendingRearm } = this.state;\n\n    alert.name = trim(alert.name) || getDefaultName(alert);\n    alert.rearm = pendingRearm || null;\n\n    return AlertService.save(alert)\n      .then(alert => {\n        notification.success(\"Saved.\");\n        navigateTo(`alerts/${alert.id}`, true);\n        this.setState({ alert, mode: MODES.VIEW });\n      })\n      .catch(() => {\n        notification.error(\"Failed saving alert.\");\n      });\n  };\n\n  onQuerySelected = query => {\n    this.setState(({ alert }) => ({\n      alert: Object.assign(alert, { query }),\n      queryResult: null,\n    }));\n\n    if (query) {\n      // get cached result for column names and values\n      new QueryService(query).getQueryResultPromise().then(queryResult => {\n        if (this._isMounted) {\n          this.setState({ queryResult });\n          let { column } = this.state.alert.options;\n          const columns = queryResult.getColumnNames();\n\n          // default to first column name if none chosen, or irrelevant in current query\n          if (!column || !includes(columns, column)) {\n            column = head(queryResult.getColumnNames());\n          }\n          this.setAlertOptions({ column });\n        }\n      });\n    }\n  };\n\n  onNameChange = name => {\n    const { alert } = this.state;\n    this.setState({\n      alert: Object.assign(alert, { name }),\n    });\n  };\n\n  onRearmChange = pendingRearm => {\n    this.setState({ pendingRearm });\n  };\n\n  setAlertOptions = obj => {\n    const { alert } = this.state;\n    const options = { ...alert.options, ...obj };\n    this.setState({\n      alert: Object.assign(alert, { options }),\n    });\n  };\n\n  delete = () => {\n    const { alert } = this.state;\n    return AlertService.delete(alert)\n      .then(() => {\n        notification.success(\"Alert deleted successfully.\");\n        navigateTo(\"alerts\");\n      })\n      .catch(() => {\n        notification.error(\"Failed deleting alert.\");\n      });\n  };\n\n  mute = () => {\n    const { alert } = this.state;\n    return AlertService.mute(alert)\n      .then(() => {\n        this.setAlertOptions({ muted: true });\n        notification.warn(\"Notifications have been muted.\");\n      })\n      .catch(() => {\n        notification.error(\"Failed muting notifications.\");\n      });\n  };\n\n  unmute = () => {\n    const { alert } = this.state;\n    return AlertService.unmute(alert)\n      .then(() => {\n        this.setAlertOptions({ muted: false });\n        notification.success(\"Notifications have been restored.\");\n      })\n      .catch(() => {\n        notification.error(\"Failed restoring notifications.\");\n      });\n  };\n\n  edit = () => {\n    const { id } = this.state.alert;\n    navigateTo(`alerts/${id}/edit`, true);\n    this.setState({ mode: MODES.EDIT });\n  };\n\n  cancel = () => {\n    const { id } = this.state.alert;\n    navigateTo(`alerts/${id}`, true);\n    this.setState({ mode: MODES.VIEW });\n  };\n\n  render() {\n    const { alert } = this.state;\n    if (!alert) {\n      return <LoadingState className=\"m-t-30\" />;\n    }\n\n    const muted = !!alert.options.muted;\n    const { queryResult, mode, canEdit, pendingRearm } = this.state;\n\n    const menuButton = (\n      <MenuButton doDelete={this.delete} muted={muted} mute={this.mute} unmute={this.unmute} canEdit={canEdit} />\n    );\n\n    const commonProps = {\n      alert,\n      queryResult,\n      pendingRearm,\n      save: this.save,\n      menuButton,\n      onQuerySelected: this.onQuerySelected,\n      onRearmChange: this.onRearmChange,\n      onNameChange: this.onNameChange,\n      onCriteriaChange: this.setAlertOptions,\n      onNotificationTemplateChange: this.setAlertOptions,\n    };\n\n    return (\n      <div className=\"alert-page\">\n        <div className=\"container\">\n          {mode === MODES.NEW && <AlertNew {...commonProps} />}\n          {mode === MODES.VIEW && (\n            <AlertView canEdit={canEdit} onEdit={this.edit} muted={muted} unmute={this.unmute} {...commonProps} />\n          )}\n          {mode === MODES.EDIT && <AlertEdit cancel={this.cancel} {...commonProps} />}\n        </div>\n      </div>\n    );\n  }\n}\n\nroutes.register(\n  \"Alerts.New\",\n  routeWithUserSession({\n    path: \"/alerts/new\",\n    title: \"New Alert\",\n    render: pageProps => <Alert {...pageProps} mode={MODES.NEW} />,\n  })\n);\nroutes.register(\n  \"Alerts.View\",\n  routeWithUserSession({\n    path: \"/alerts/:alertId\",\n    title: \"Alert\",\n    render: pageProps => <Alert {...pageProps} mode={MODES.VIEW} />,\n  })\n);\nroutes.register(\n  \"Alerts.Edit\",\n  routeWithUserSession({\n    path: \"/alerts/:alertId/edit\",\n    title: \"Alert\",\n    render: pageProps => <Alert {...pageProps} mode={MODES.EDIT} />,\n  })\n);\n","import { axios } from \"@/services/axios\";\n\nfunction processTags(data) {\n  return data.tags || [];\n}\n\nexport default function getTags(url) {\n  return axios.get(url).then(processTags);\n}\n","import { map, includes, difference } from \"lodash\";\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport Badge from \"antd/lib/badge\";\nimport Menu from \"antd/lib/menu\";\nimport CloseOutlinedIcon from \"@ant-design/icons/CloseOutlined\";\nimport getTags from \"@/services/getTags\";\nimport PlainButton from \"@/components/PlainButton\";\n\nimport \"./TagsList.less\";\n\ntype Tag = {\n  name: string;\n  count?: number;\n};\n\ntype TagsListProps = {\n  tagsUrl: string;\n  showUnselectAll: boolean;\n  onUpdate?: (selectedTags: string[]) => void;\n};\n\nfunction TagsList({ tagsUrl, showUnselectAll = false, onUpdate }: TagsListProps): JSX.Element | null {\n  const [allTags, setAllTags] = useState<Tag[]>([]);\n  const [selectedTags, setSelectedTags] = useState<string[]>([]);\n\n  useEffect(() => {\n    let isCancelled = false;\n\n    getTags(tagsUrl).then(tags => {\n      if (!isCancelled) {\n        setAllTags(tags);\n      }\n    });\n\n    return () => {\n      isCancelled = true;\n    };\n  }, [tagsUrl]);\n\n  const toggleTag = useCallback(\n    (event, tag) => {\n      let newSelectedTags;\n      if (event.shiftKey) {\n        // toggle tag\n        if (includes(selectedTags, tag)) {\n          newSelectedTags = difference(selectedTags, [tag]);\n        } else {\n          newSelectedTags = [...selectedTags, tag];\n        }\n      } else {\n        // if the tag is the only selected, deselect it, otherwise select only it\n        if (includes(selectedTags, tag) && selectedTags.length === 1) {\n          newSelectedTags = [];\n        } else {\n          newSelectedTags = [tag];\n        }\n      }\n\n      setSelectedTags(newSelectedTags);\n      if (onUpdate) {\n        onUpdate([...newSelectedTags]);\n      }\n    },\n    [selectedTags, onUpdate]\n  );\n\n  const unselectAll = useCallback(() => {\n    setSelectedTags([]);\n    if (onUpdate) {\n      onUpdate([]);\n    }\n  }, [onUpdate]);\n\n  if (allTags.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className=\"tags-list\">\n      <div className=\"tags-list-title\">\n        <span className=\"tags-list-label\">Tags</span>\n        {showUnselectAll && selectedTags.length > 0 && (\n          <PlainButton type=\"link\" onClick={unselectAll}>\n            <CloseOutlinedIcon />\n            clear selection\n          </PlainButton>\n        )}\n      </div>\n\n      <div className=\"tiled\">\n        <Menu className=\"invert-stripe-position\" mode=\"inline\" selectedKeys={selectedTags}>\n          {map(allTags, tag => (\n            <Menu.Item key={tag.name} className=\"m-0\">\n              <PlainButton\n                className=\"d-flex align-items-center justify-content-between\"\n                onClick={event => toggleTag(event, tag.name)}>\n                <span className=\"max-character col-xs-11\">{tag.name}</span>\n                <Badge count={tag.count} />\n              </PlainButton>\n            </Menu.Item>\n          ))}\n        </Menu>\n      </div>\n    </div>\n  );\n}\n\nexport default TagsList;\n","import { isFunction, isString, filter, map } from \"lodash\";\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Input from \"antd/lib/input\";\nimport AntdMenu from \"antd/lib/menu\";\nimport Link from \"@/components/Link\";\nimport TagsList from \"@/components/TagsList\";\n\n/*\n    SearchInput\n */\n\nexport function SearchInput({ placeholder, value, showIcon, onChange, label }) {\n  const [currentValue, setCurrentValue] = useState(value);\n\n  useEffect(() => {\n    setCurrentValue(value);\n  }, [value]);\n\n  const onInputChange = useCallback(\n    event => {\n      const newValue = event.target.value;\n      setCurrentValue(newValue);\n      onChange(newValue);\n    },\n    [onChange]\n  );\n\n  const InputControl = showIcon ? Input.Search : Input;\n  return (\n    <div className=\"m-b-10\">\n      <InputControl\n        className=\"form-control\"\n        placeholder={placeholder}\n        value={currentValue}\n        aria-label={label}\n        onChange={onInputChange}\n      />\n    </div>\n  );\n}\n\nSearchInput.propTypes = {\n  value: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  showIcon: PropTypes.bool,\n  onChange: PropTypes.func.isRequired,\n  label: PropTypes.string,\n};\n\nSearchInput.defaultProps = {\n  placeholder: \"Search...\",\n  showIcon: false,\n  label: \"Search\",\n};\n\n/*\n    Menu\n */\n\nexport function Menu({ items, selected }) {\n  items = filter(items, item => (isFunction(item.isAvailable) ? item.isAvailable() : true));\n  if (items.length === 0) {\n    return null;\n  }\n  return (\n    <div className=\"m-b-10 tags-list tiled\">\n      <AntdMenu className=\"invert-stripe-position\" mode=\"inline\" selectable={false} selectedKeys={[selected]}>\n        {map(items, item => (\n          <AntdMenu.Item key={item.key} className=\"m-0\">\n            <Link href={item.href}>\n              {isString(item.icon) && item.icon !== \"\" && (\n                <span className=\"btn-favorite m-r-5\">\n                  <i className={item.icon} aria-hidden=\"true\" />\n                </span>\n              )}\n              {isFunction(item.icon) && (item.icon(item) || null)}\n              {item.title}\n            </Link>\n          </AntdMenu.Item>\n        ))}\n      </AntdMenu>\n    </div>\n  );\n}\n\nMenu.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      key: PropTypes.string.isRequired,\n      href: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      icon: PropTypes.func, // function to render icon\n      isAvailable: PropTypes.func, // return `true` to show item and `false` to hide; if omitted: show item\n    })\n  ),\n  selected: PropTypes.string,\n};\n\nMenu.defaultProps = {\n  items: [],\n  selected: null,\n};\n\n/*\n    MenuIcon\n */\n\nexport function MenuIcon({ icon }) {\n  return (\n    <span className=\"btn-favorite m-r-5\">\n      <i className={icon} aria-hidden=\"true\" />\n    </span>\n  );\n}\n\nMenuIcon.propTypes = {\n  icon: PropTypes.string.isRequired,\n};\n\n/*\n    ProfileImage\n */\n\nexport function ProfileImage({ user }) {\n  if (!isString(user.profile_image_url) || user.profile_image_url === \"\") {\n    return null;\n  }\n  return <img src={user.profile_image_url} className=\"profile__image--sidebar m-r-5\" width=\"13\" alt={user.name} />;\n}\n\nProfileImage.propTypes = {\n  user: PropTypes.shape({\n    profile_image_url: PropTypes.string,\n    name: PropTypes.string,\n  }).isRequired,\n};\n\n/*\n    Tags\n */\n\nexport function Tags({ url, onChange, showUnselectAll }) {\n  if (url === \"\") {\n    return null;\n  }\n  return (\n    <div className=\"m-b-10\">\n      <TagsList tagsUrl={url} onUpdate={onChange} showUnselectAll={showUnselectAll} />\n    </div>\n  );\n}\n\nTags.propTypes = {\n  url: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  showUnselectAll: PropTypes.bool,\n  unselectAllButtonTitle: PropTypes.string,\n};\n","import { filter, includes, intersection } from \"lodash\";\nimport React, { useState, useMemo, useEffect, useCallback } from \"react\";\nimport Checkbox from \"antd/lib/checkbox\";\nimport { Columns } from \"../components/ItemsTable\";\n\nexport default function useItemsListExtraActions(controller, listColumns, ExtraActionsComponent) {\n  const [actionsState, setActionsState] = useState({ isAvailable: false });\n  const [selectedItems, setSelectedItems] = useState([]);\n\n  // clear selection when page changes\n  useEffect(() => {\n    setSelectedItems([]);\n  }, [controller.pageItems, actionsState.isAvailable]);\n\n  const areAllItemsSelected = useMemo(() => {\n    const allItems = controller.pageItems;\n    if (allItems.length === 0 || selectedItems.length === 0) {\n      return false;\n    }\n    return intersection(selectedItems, allItems).length === allItems.length;\n  }, [selectedItems, controller.pageItems]);\n\n  const toggleAllItems = useCallback(() => {\n    if (areAllItemsSelected) {\n      setSelectedItems([]);\n    } else {\n      setSelectedItems(controller.pageItems);\n    }\n  }, [areAllItemsSelected, controller.pageItems]);\n\n  const toggleItem = useCallback(\n    item => {\n      if (includes(selectedItems, item)) {\n        setSelectedItems(filter(selectedItems, s => s !== item));\n      } else {\n        setSelectedItems([...selectedItems, item]);\n      }\n    },\n    [selectedItems]\n  );\n\n  const checkboxColumn = useMemo(\n    () =>\n      Columns.custom(\n        (text, item) => <Checkbox checked={includes(selectedItems, item)} onChange={() => toggleItem(item)} />,\n        {\n          title: () => <Checkbox checked={areAllItemsSelected} onChange={toggleAllItems} />,\n          field: \"id\",\n          width: \"1%\",\n        }\n      ),\n    [selectedItems, areAllItemsSelected, toggleAllItems, toggleItem]\n  );\n\n  const Component = useCallback(\n    function ItemsListExtraActionsComponentWrapper(props) {\n      // this check mostly needed to avoid eslint exhaustive deps warning\n      if (!ExtraActionsComponent) {\n        return null;\n      }\n\n      return <ExtraActionsComponent onStateChange={setActionsState} {...props} />;\n    },\n    [ExtraActionsComponent]\n  );\n\n  return useMemo(\n    () => ({\n      areExtraActionsAvailable: actionsState.isAvailable,\n      listColumns: actionsState.isAvailable ? [checkboxColumn, ...listColumns] : listColumns,\n      Component,\n      selectedItems,\n      setSelectedItems,\n    }),\n    [actionsState, listColumns, checkboxColumn, selectedItems, Component]\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nimport \"./content-with-sidebar.less\";\n\nconst propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n};\n\nconst defaultProps = {\n  className: null,\n  children: null,\n};\n\n// Sidebar\n\nfunction Sidebar({ className, children, ...props }) {\n  return (\n    <div className={classNames(\"layout-sidebar\", className)} {...props}>\n      <div>{children}</div>\n    </div>\n  );\n}\n\nSidebar.propTypes = propTypes;\nSidebar.defaultProps = defaultProps;\n\n// Content\n\nfunction Content({ className, children, ...props }) {\n  return (\n    <div className={classNames(\"layout-content\", className)} {...props}>\n      <div>{children}</div>\n    </div>\n  );\n}\n\nContent.propTypes = propTypes;\nContent.defaultProps = defaultProps;\n\n// Layout\n\nexport default function Layout({ children, className = undefined, ...props }) {\n  return (\n    <div className={classNames(\"layout-with-sidebar\", className)} {...props}>\n      {children}\n    </div>\n  );\n}\n\nLayout.propTypes = propTypes;\nLayout.defaultProps = defaultProps;\n\nLayout.Sidebar = Sidebar;\nLayout.Content = Content;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport BigMessage from \"@/components/BigMessage\";\nimport { TagsControl } from \"@/components/tags-control/TagsControl\";\n\nexport default function NoTaggedObjectsFound({ objectType, tags }) {\n  return (\n    <BigMessage icon=\"fa-tags\">\n      No {objectType} found tagged with&nbsp;\n      <TagsControl className=\"inline-tags-control\" tags={Array.from(tags)} tagSeparator={\"+\"} />.\n    </BigMessage>\n  );\n}\n\nNoTaggedObjectsFound.propTypes = {\n  objectType: PropTypes.string.isRequired,\n  tags: PropTypes.oneOfType([PropTypes.array, PropTypes.objectOf(Set)]).isRequired,\n};\n","import * as React from \"react\";\nimport * as PropTypes from \"prop-types\";\nimport Button from \"antd/lib/button\";\nimport BigMessage from \"@/components/BigMessage\";\nimport NoTaggedObjectsFound from \"@/components/NoTaggedObjectsFound\";\nimport EmptyState, { EmptyStateHelpMessage } from \"@/components/empty-state/EmptyState\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport CreateDashboardDialog from \"@/components/dashboards/CreateDashboardDialog\";\nimport { currentUser } from \"@/services/auth\";\nimport HelpTrigger from \"@/components/HelpTrigger\";\n\nexport interface DashboardListEmptyStateProps {\n  page: string;\n  searchTerm: string;\n  selectedTags: string[];\n}\n\nexport default function DashboardListEmptyState({ page, searchTerm, selectedTags }: DashboardListEmptyStateProps) {\n  if (searchTerm !== \"\") {\n    return <BigMessage message=\"Sorry, we couldn't find anything.\" icon=\"fa-search\" />;\n  }\n  if (selectedTags.length > 0) {\n    return <NoTaggedObjectsFound objectType=\"dashboards\" tags={selectedTags} />;\n  }\n  switch (page) {\n    case \"favorites\":\n      return <BigMessage message=\"Mark dashboards as Favorite to list them here.\" icon=\"fa-star\" />;\n    case \"my\":\n      const my_msg = currentUser.hasPermission(\"create_dashboard\") ? (\n        <span>\n          <Button type=\"primary\" size=\"small\" onClick={() => CreateDashboardDialog.showModal()}>\n            Create your first dashboard!\n          </Button>{\" \"}\n          <HelpTrigger className=\"f-14\" type=\"DASHBOARDS\" showTooltip={false}>\n            Need help?\n          </HelpTrigger>\n        </span>\n      ) : (\n        <span>Sorry, we couldn't find anything.</span>\n      );\n      return <BigMessage icon=\"fa-search\">{my_msg}</BigMessage>;\n    default:\n      return (\n        <DynamicComponent name=\"DashboardList.EmptyState\">\n          <EmptyState\n            icon=\"zmdi zmdi-view-quilt\"\n            description=\"See the big picture\"\n            illustration=\"dashboard\"\n            helpMessage={<EmptyStateHelpMessage helpTriggerType=\"DASHBOARDS\" />}\n            showDashboardStep\n          />\n        </DynamicComponent>\n      );\n  }\n}\n\nDashboardListEmptyState.propTypes = {\n  page: PropTypes.string.isRequired,\n  searchTerm: PropTypes.string.isRequired,\n  selectedTags: PropTypes.array.isRequired,\n};\n","import React from \"react\";\nimport cx from \"classnames\";\n\nimport Button from \"antd/lib/button\";\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport Link from \"@/components/Link\";\nimport PageHeader from \"@/components/PageHeader\";\nimport Paginator from \"@/components/Paginator\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { DashboardTagsControl } from \"@/components/tags-control/TagsControl\";\nimport { wrap as itemsList, ControllerType } from \"@/components/items-list/ItemsList\";\nimport { ResourceItemsSource } from \"@/components/items-list/classes/ItemsSource\";\nimport { UrlStateStorage } from \"@/components/items-list/classes/StateStorage\";\nimport * as Sidebar from \"@/components/items-list/components/Sidebar\";\nimport ItemsTable, { Columns } from \"@/components/items-list/components/ItemsTable\";\nimport useItemsListExtraActions from \"@/components/items-list/hooks/useItemsListExtraActions\";\nimport CreateDashboardDialog from \"@/components/dashboards/CreateDashboardDialog\";\nimport Layout from \"@/components/layouts/ContentWithSidebar\";\n\nimport { Dashboard } from \"@/services/dashboard\";\nimport { currentUser } from \"@/services/auth\";\nimport routes from \"@/services/routes\";\n\nimport DashboardListEmptyState from \"./components/DashboardListEmptyState\";\n\nimport \"./dashboard-list.css\";\n\nconst sidebarMenu = [\n  {\n    key: \"all\",\n    href: \"dashboards\",\n    title: \"All Dashboards\",\n    icon: () => <Sidebar.MenuIcon icon=\"zmdi zmdi-view-quilt\" />,\n  },\n  {\n    key: \"my\",\n    href: \"dashboards/my\",\n    title: \"My Dashboards\",\n    icon: () => <Sidebar.ProfileImage user={currentUser} />,\n  },\n  {\n    key: \"favorites\",\n    href: \"dashboards/favorites\",\n    title: \"Favorites\",\n    icon: () => <Sidebar.MenuIcon icon=\"fa fa-star\" />,\n  },\n];\n\nconst listColumns = [\n  Columns.favorites({ className: \"p-r-0\" }),\n  Columns.custom.sortable(\n    (text, item) => (\n      <React.Fragment>\n        <Link className=\"table-main-title\" href={item.url} data-test={`DashboardId${item.id}`}>\n          {item.name}\n        </Link>\n        <DashboardTagsControl\n          className=\"d-block\"\n          tags={item.tags}\n          isDraft={item.is_draft}\n          isArchived={item.is_archived}\n        />\n      </React.Fragment>\n    ),\n    {\n      title: \"Name\",\n      field: \"name\",\n      width: null,\n    }\n  ),\n  Columns.custom((text, item) => item.user.name, { title: \"Created By\", width: \"1%\" }),\n  Columns.dateTime.sortable({\n    title: \"Created At\",\n    field: \"created_at\",\n    width: \"1%\",\n  }),\n];\n\nfunction DashboardListExtraActions(props) {\n  return <DynamicComponent name=\"DashboardList.Actions\" {...props} />;\n}\n\nfunction DashboardList({ controller }) {\n  const {\n    areExtraActionsAvailable,\n    listColumns: tableColumns,\n    Component: ExtraActionsComponent,\n    selectedItems,\n  } = useItemsListExtraActions(controller, listColumns, DashboardListExtraActions);\n\n  return (\n    <div className=\"page-dashboard-list\">\n      <div className=\"container\">\n        <PageHeader\n          title={controller.params.pageTitle}\n          actions={\n            currentUser.hasPermission(\"create_dashboard\") ? (\n              <Button block type=\"primary\" onClick={() => CreateDashboardDialog.showModal()}>\n                <i className=\"fa fa-plus m-r-5\" aria-hidden=\"true\" />\n                New Dashboard\n              </Button>\n            ) : null\n          }\n        />\n        <Layout>\n          <Layout.Sidebar className=\"m-b-0\">\n            <Sidebar.SearchInput\n              placeholder=\"Search Dashboards...\"\n              label=\"Search dashboards\"\n              value={controller.searchTerm}\n              onChange={controller.updateSearch}\n            />\n            <Sidebar.Menu items={sidebarMenu} selected={controller.params.currentPage} />\n            <Sidebar.Tags url=\"api/dashboards/tags\" onChange={controller.updateSelectedTags} showUnselectAll />\n          </Layout.Sidebar>\n          <Layout.Content>\n            <div data-test=\"DashboardLayoutContent\">\n              {controller.isLoaded && controller.isEmpty ? (\n                <DashboardListEmptyState\n                  page={controller.params.currentPage}\n                  searchTerm={controller.searchTerm}\n                  selectedTags={controller.selectedTags}\n                />\n              ) : (\n                <React.Fragment>\n                  <div className={cx({ \"m-b-10\": areExtraActionsAvailable })}>\n                    <ExtraActionsComponent selectedItems={selectedItems} />\n                  </div>\n                  <div className=\"bg-white tiled table-responsive\">\n                    <ItemsTable\n                      items={controller.pageItems}\n                      loading={!controller.isLoaded}\n                      columns={tableColumns}\n                      orderByField={controller.orderByField}\n                      orderByReverse={controller.orderByReverse}\n                      toggleSorting={controller.toggleSorting}\n                    />\n                    <Paginator\n                      showPageSizeSelect\n                      totalCount={controller.totalItemsCount}\n                      pageSize={controller.itemsPerPage}\n                      onPageSizeChange={itemsPerPage => controller.updatePagination({ itemsPerPage })}\n                      page={controller.page}\n                      onChange={page => controller.updatePagination({ page })}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n            </div>\n          </Layout.Content>\n        </Layout>\n      </div>\n    </div>\n  );\n}\n\nDashboardList.propTypes = {\n  controller: ControllerType.isRequired,\n};\n\nconst DashboardListPage = itemsList(\n  DashboardList,\n  () =>\n    new ResourceItemsSource({\n      getResource({ params: { currentPage } }) {\n        return {\n          all: Dashboard.query.bind(Dashboard),\n          my: Dashboard.myDashboards.bind(Dashboard),\n          favorites: Dashboard.favorites.bind(Dashboard),\n        }[currentPage];\n      },\n      getItemProcessor() {\n        return item => new Dashboard(item);\n      },\n    }),\n  () => new UrlStateStorage({ orderByField: \"created_at\", orderByReverse: true })\n);\n\nroutes.register(\n  \"Dashboards.List\",\n  routeWithUserSession({\n    path: \"/dashboards\",\n    title: \"Dashboards\",\n    render: pageProps => <DashboardListPage {...pageProps} currentPage=\"all\" />,\n  })\n);\nroutes.register(\n  \"Dashboards.Favorites\",\n  routeWithUserSession({\n    path: \"/dashboards/favorites\",\n    title: \"Favorite Dashboards\",\n    render: pageProps => <DashboardListPage {...pageProps} currentPage=\"favorites\" />,\n  })\n);\nroutes.register(\n  \"Dashboards.My\",\n  routeWithUserSession({\n    path: \"/dashboards/my\",\n    title: \"My Dashboards\",\n    render: pageProps => <DashboardListPage {...pageProps} currentPage=\"my\" />,\n  })\n);\n","import { each, filter, map, toLower, toString, trim, upperFirst, without } from \"lodash\";\nimport Mousetrap from \"mousetrap\";\nimport \"mousetrap/plugins/global-bind/mousetrap-global-bind\";\n\nconst modKey = /Mac|iPod|iPhone|iPad/.test(navigator.platform) ? \"Cmd\" : \"Ctrl\";\nconst altKey = /Mac|iPod|iPhone|iPad/.test(navigator.platform) ? \"Option\" : \"Alt\";\n\nexport function humanReadableShortcut(shortcut, limit = Infinity) {\n  const modifiers = {\n    mod: upperFirst(modKey),\n    alt: upperFirst(altKey),\n  };\n\n  shortcut = toLower(toString(shortcut));\n  shortcut = filter(map(shortcut.split(\",\"), trim), s => s !== \"\").slice(0, limit);\n  shortcut = map(shortcut, sc => {\n    sc = filter(map(sc.split(\"+\")), s => s !== \"\");\n    return map(sc, s => modifiers[s] || upperFirst(s)).join(\" + \");\n  }).join(\", \");\n\n  return shortcut !== \"\" ? shortcut : null;\n}\n\nconst handlers = {};\n\nfunction onShortcut(event, shortcut) {\n  event.preventDefault();\n  event.retunValue = false;\n  each(handlers[shortcut], fn => fn());\n}\n\nconst KeyboardShortcuts = {\n  modKey,\n  altKey,\n\n  bind: keymap => {\n    each(keymap, (fn, key) => {\n      const keys = key\n        .toLowerCase()\n        .split(\",\")\n        .map(trim);\n      each(keys, k => {\n        handlers[k] = [...without(handlers[k], fn), fn];\n        Mousetrap.bindGlobal(k, onShortcut);\n      });\n    });\n  },\n\n  unbind: keymap => {\n    each(keymap, (fn, key) => {\n      const keys = key\n        .toLowerCase()\n        .split(\",\")\n        .map(trim);\n      each(keys, k => {\n        handlers[k] = without(handlers[k], fn);\n        if (handlers[k].length === 0) {\n          handlers[k] = undefined;\n          Mousetrap.unbind(k);\n        }\n      });\n    });\n  },\n};\n\nexport default KeyboardShortcuts;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"antd/lib/button\";\nimport Badge from \"antd/lib/badge\";\nimport Tooltip from \"@/components/Tooltip\";\nimport KeyboardShortcuts from \"@/services/KeyboardShortcuts\";\n\nfunction ParameterApplyButton({ paramCount, onClick }) {\n  // show spinner when count is empty so the fade out is consistent\n  const icon = !paramCount ? (\n    <span role=\"status\" aria-live=\"polite\" aria-relevant=\"additions removals\">\n      <i className=\"fa fa-spinner fa-pulse\" aria-hidden=\"true\" />\n      <span className=\"sr-only\">Loading...</span>\n    </span>\n  ) : (\n    <i className=\"fa fa-check\" aria-hidden=\"true\" />\n  );\n\n  return (\n    <div className=\"parameter-apply-button\" data-show={!!paramCount} data-test=\"ParameterApplyButton\">\n      <Badge count={paramCount}>\n        <Tooltip title={paramCount ? `${KeyboardShortcuts.modKey} + Enter` : null}>\n          <span>\n            <Button onClick={onClick}>{icon} Apply Changes</Button>\n          </span>\n        </Tooltip>\n      </Badge>\n    </div>\n  );\n}\n\nParameterApplyButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  paramCount: PropTypes.number.isRequired,\n};\n\nexport default ParameterApplyButton;\n","const canvas = document.createElement(\"canvas\");\ncanvas.style.display = \"none\";\ndocument.body.appendChild(canvas);\n\nexport function calculateTextWidth(text: string, container = document.body) {\n  const ctx = canvas.getContext(\"2d\");\n  if (ctx) {\n    const containerStyle = window.getComputedStyle(container);\n    ctx.font = `${containerStyle.fontSize} ${containerStyle.fontFamily}`;\n    const textMetrics = ctx.measureText(text);\n    let actualWidth = textMetrics.width;\n    if (\"actualBoundingBoxLeft\" in textMetrics) {\n      // only available on evergreen browsers\n      actualWidth = Math.abs(textMetrics.actualBoundingBoxLeft) + Math.abs(textMetrics.actualBoundingBoxRight);\n    }\n    return actualWidth;\n  }\n\n  return null;\n}\n","import React, { useMemo } from \"react\";\nimport { maxBy } from \"lodash\";\nimport AntdSelect, { SelectProps, LabeledValue } from \"antd/lib/select\";\nimport { calculateTextWidth } from \"@/lib/calculateTextWidth\";\n\nconst MIN_LEN_FOR_VIRTUAL_SCROLL = 400;\n\ninterface VirtualScrollLabeledValue extends LabeledValue {\n  label: string;\n}\n\ninterface VirtualScrollSelectProps extends Omit<SelectProps<string>, \"optionFilterProp\" | \"children\"> {\n  options: Array<VirtualScrollLabeledValue>;\n}\nfunction SelectWithVirtualScroll({ options, ...props }: VirtualScrollSelectProps): JSX.Element {\n  const dropdownMatchSelectWidth = useMemo<number | boolean>(() => {\n    if (options && options.length > MIN_LEN_FOR_VIRTUAL_SCROLL) {\n      const largestOpt = maxBy(options, \"label.length\");\n\n      if (largestOpt) {\n        const offset = 40;\n        const optionText = largestOpt.label;\n        const width = calculateTextWidth(optionText);\n        if (width) {\n          return width + offset;\n        }\n      }\n\n      return true;\n    }\n\n    return false;\n  }, [options]);\n\n  return (\n    <AntdSelect<string>\n      dropdownMatchSelectWidth={dropdownMatchSelectWidth}\n      options={options}\n      allowClear={true}\n      optionFilterProp=\"label\" // as this component expects \"options\" prop\n      {...props}\n    />\n  );\n}\n\nexport default SelectWithVirtualScroll;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport DatePicker from \"antd/lib/date-picker\";\nimport { clientConfig } from \"@/services/auth\";\nimport { Moment } from \"@/components/proptypes\";\n\nconst DateInput = React.forwardRef(({ defaultValue, value, onSelect, className, ...props }, ref) => {\n  const format = clientConfig.dateFormat || \"YYYY-MM-DD\";\n  const additionalAttributes = {};\n  if (defaultValue && defaultValue.isValid()) {\n    additionalAttributes.defaultValue = defaultValue;\n  }\n  if (value === null || (value && value.isValid())) {\n    additionalAttributes.value = value;\n  }\n  return (\n    <DatePicker\n      ref={ref}\n      className={className}\n      {...additionalAttributes}\n      format={format}\n      placeholder=\"Select Date\"\n      onChange={onSelect}\n      {...props}\n    />\n  );\n});\n\nDateInput.propTypes = {\n  defaultValue: Moment,\n  value: Moment,\n  onSelect: PropTypes.func,\n  className: PropTypes.string,\n};\n\nDateInput.defaultProps = {\n  defaultValue: null,\n  value: undefined,\n  onSelect: () => {},\n  className: \"\",\n};\n\nexport default DateInput;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport DatePicker from \"antd/lib/date-picker\";\nimport { clientConfig } from \"@/services/auth\";\nimport { Moment } from \"@/components/proptypes\";\n\nconst DateTimeInput = React.forwardRef(({ defaultValue, value, withSeconds, onSelect, className, ...props }, ref) => {\n  const format = (clientConfig.dateFormat || \"YYYY-MM-DD\") + (withSeconds ? \" HH:mm:ss\" : \" HH:mm\");\n  const additionalAttributes = {};\n  if (defaultValue && defaultValue.isValid()) {\n    additionalAttributes.defaultValue = defaultValue;\n  }\n  if (value === null || (value && value.isValid())) {\n    additionalAttributes.value = value;\n  }\n  return (\n    <DatePicker\n      ref={ref}\n      className={className}\n      showTime\n      {...additionalAttributes}\n      format={format}\n      placeholder=\"Select Date and Time\"\n      onChange={onSelect}\n      {...props}\n    />\n  );\n});\n\nDateTimeInput.propTypes = {\n  defaultValue: Moment,\n  value: Moment,\n  withSeconds: PropTypes.bool,\n  onSelect: PropTypes.func,\n  className: PropTypes.string,\n};\n\nDateTimeInput.defaultProps = {\n  defaultValue: null,\n  value: undefined,\n  withSeconds: false,\n  onSelect: () => {},\n  className: \"\",\n};\n\nexport default DateTimeInput;\n","import React, { useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { isFunction, get, findIndex } from \"lodash\";\nimport Dropdown from \"antd/lib/dropdown\";\nimport Menu from \"antd/lib/menu\";\nimport Typography from \"antd/lib/typography\";\nimport { DynamicDateType } from \"@/services/parameters/DateParameter\";\nimport { DynamicDateRangeType } from \"@/services/parameters/DateRangeParameter\";\n\nimport ArrowLeftOutlinedIcon from \"@ant-design/icons/ArrowLeftOutlined\";\nimport ThunderboltTwoToneIcon from \"@ant-design/icons/ThunderboltTwoTone\";\nimport ThunderboltOutlinedIcon from \"@ant-design/icons/ThunderboltOutlined\";\n\nimport \"./DynamicButton.less\";\n\nconst { Text } = Typography;\n\nfunction DynamicButton({ options, selectedDynamicValue, onSelect, enabled, staticValueLabel }) {\n  const menu = (\n    <Menu\n      className=\"dynamic-menu\"\n      onClick={({ key }) => onSelect(get(options, key, \"static\"))}\n      selectedKeys={[`${findIndex(options, { value: selectedDynamicValue })}`]}\n      data-test=\"DynamicButtonMenu\">\n      {options.map((option, index) => (\n        // eslint-disable-next-line react/no-array-index-key\n        <Menu.Item key={index}>\n          {option.name} {option.label && <em>{isFunction(option.label) ? option.label() : option.label}</em>}\n        </Menu.Item>\n      ))}\n      {enabled && <Menu.Divider />}\n      {enabled && (\n        <Menu.Item>\n          <ArrowLeftOutlinedIcon />\n          <Text type=\"secondary\">{staticValueLabel}</Text>\n        </Menu.Item>\n      )}\n    </Menu>\n  );\n\n  const containerRef = useRef(null);\n\n  return (\n    <div ref={containerRef}>\n      <div role=\"presentation\" onClick={e => e.stopPropagation()}>\n        <Dropdown.Button\n          overlay={menu}\n          className=\"dynamic-button\"\n          placement=\"bottomRight\"\n          trigger={[\"click\"]}\n          icon={\n            enabled ? (\n              <ThunderboltTwoToneIcon className=\"dynamic-icon\" />\n            ) : (\n              <ThunderboltOutlinedIcon className=\"dynamic-icon\" />\n            )\n          }\n          getPopupContainer={() => containerRef.current}\n          data-test=\"DynamicButton\"\n        />\n      </div>\n    </div>\n  );\n}\n\nDynamicButton.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.object), // eslint-disable-line react/forbid-prop-types\n  selectedDynamicValue: PropTypes.oneOfType([DynamicDateType, DynamicDateRangeType]),\n  onSelect: PropTypes.func,\n  enabled: PropTypes.bool,\n  staticValueLabel: PropTypes.string,\n};\n\nDynamicButton.defaultProps = {\n  options: [],\n  selectedDynamicValue: null,\n  onSelect: () => {},\n  enabled: false,\n  staticValueLabel: \"Back to Static Value\",\n};\n\nexport default DynamicButton;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport moment from \"moment\";\nimport { includes } from \"lodash\";\nimport { isDynamicDate } from \"@/services/parameters/DateParameter\";\nimport DateInput from \"@/components/DateInput\";\nimport DateTimeInput from \"@/components/DateTimeInput\";\nimport DynamicButton from \"@/components/dynamic-parameters/DynamicButton\";\n\nimport \"./DynamicParameters.less\";\n\nclass DynamicDatePicker extends React.Component {\n  static propTypes = {\n    type: PropTypes.string,\n    className: PropTypes.string,\n    value: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n    parameter: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n    onSelect: PropTypes.func,\n    dynamicButtonOptions: PropTypes.shape({\n      staticValueLabel: PropTypes.string,\n      options: PropTypes.arrayOf(\n        PropTypes.shape({\n          name: PropTypes.string,\n          value: PropTypes.object,\n          label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n        })\n      ),\n    }),\n    dateOptions: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n  };\n\n  static defaultProps = {\n    type: \"\",\n    className: \"\",\n    value: null,\n    parameter: null,\n    dynamicButtonOptions: {\n      options: [],\n    },\n    onSelect: () => {},\n  };\n\n  constructor(props) {\n    super(props);\n    this.dateComponentRef = React.createRef();\n  }\n\n  onDynamicValueSelect = dynamicValue => {\n    const { onSelect, parameter } = this.props;\n    if (dynamicValue === \"static\") {\n      const parameterValue = parameter.getExecutionValue();\n      if (parameterValue) {\n        onSelect(moment(parameterValue));\n      } else {\n        onSelect(null);\n      }\n    } else {\n      onSelect(dynamicValue.value);\n    }\n    // give focus to the DatePicker to get keyboard shortcuts to work\n    this.dateComponentRef.current.focus();\n  };\n\n  render() {\n    const { type, value, className, dateOptions, dynamicButtonOptions, onSelect } = this.props;\n    const hasDynamicValue = isDynamicDate(value);\n    const isDateTime = includes(type, \"datetime\");\n\n    const additionalAttributes = {};\n\n    let DateComponent = DateInput;\n    if (isDateTime) {\n      DateComponent = DateTimeInput;\n      if (includes(type, \"with-seconds\")) {\n        additionalAttributes.withSeconds = true;\n      }\n    }\n\n    if (moment.isMoment(value) || value === null) {\n      additionalAttributes.value = value;\n    }\n\n    if (hasDynamicValue) {\n      const dynamicDate = value;\n      additionalAttributes.placeholder = dynamicDate && dynamicDate.name;\n      additionalAttributes.value = null;\n    }\n\n    return (\n      <div className={classNames(\"date-parameter\", className)}>\n        <DateComponent\n          {...dateOptions}\n          ref={this.dateComponentRef}\n          className={classNames(\"redash-datepicker\", type, { \"dynamic-value\": hasDynamicValue })}\n          onSelect={onSelect}\n          suffixIcon={null}\n          {...additionalAttributes}\n        />\n        <DynamicButton\n          options={dynamicButtonOptions.options}\n          staticValueLabel={dynamicButtonOptions.staticValueLabel}\n          selectedDynamicValue={hasDynamicValue ? value : null}\n          enabled={hasDynamicValue}\n          onSelect={this.onDynamicValueSelect}\n        />\n      </div>\n    );\n  }\n}\n\nexport default DynamicDatePicker;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getDynamicDateFromString } from \"@/services/parameters/DateParameter\";\nimport DynamicDatePicker from \"@/components/dynamic-parameters/DynamicDatePicker\";\n\nconst DYNAMIC_DATE_OPTIONS = [\n  {\n    name: \"Today/Now\",\n    value: getDynamicDateFromString(\"d_now\"),\n    label: () =>\n      getDynamicDateFromString(\"d_now\")\n        .value()\n        .format(\"MMM D\"),\n  },\n  {\n    name: \"Yesterday\",\n    value: getDynamicDateFromString(\"d_yesterday\"),\n    label: () =>\n      getDynamicDateFromString(\"d_yesterday\")\n        .value()\n        .format(\"MMM D\"),\n  },\n];\n\nfunction DateParameter(props) {\n  return (\n    <DynamicDatePicker\n      dynamicButtonOptions={{ options: DYNAMIC_DATE_OPTIONS }}\n      {...props}\n      dateOptions={{ \"aria-label\": \"Parameter date value\" }}\n    />\n  );\n}\n\nDateParameter.propTypes = {\n  type: PropTypes.string,\n  className: PropTypes.string,\n  value: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n  parameter: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n  onSelect: PropTypes.func,\n};\n\nDateParameter.defaultProps = {\n  type: \"\",\n  className: \"\",\n  value: null,\n  parameter: null,\n  onSelect: () => {},\n};\n\nexport default DateParameter;\n","import { isArray } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport DatePicker from \"antd/lib/date-picker\";\nimport { clientConfig } from \"@/services/auth\";\nimport { Moment } from \"@/components/proptypes\";\n\nconst { RangePicker } = DatePicker;\n\nconst DateRangeInput = React.forwardRef(({ defaultValue, value, onSelect, className, ...props }, ref) => {\n  const format = clientConfig.dateFormat || \"YYYY-MM-DD\";\n  const additionalAttributes = {};\n  if (isArray(defaultValue) && defaultValue[0].isValid() && defaultValue[1].isValid()) {\n    additionalAttributes.defaultValue = defaultValue;\n  }\n  if (value === null || (isArray(value) && value[0].isValid() && value[1].isValid())) {\n    additionalAttributes.value = value;\n  }\n  return (\n    <RangePicker\n      ref={ref}\n      className={className}\n      {...additionalAttributes}\n      format={format}\n      onChange={onSelect}\n      {...props}\n    />\n  );\n});\n\nDateRangeInput.propTypes = {\n  defaultValue: PropTypes.arrayOf(Moment),\n  value: PropTypes.arrayOf(Moment),\n  onSelect: PropTypes.func,\n  className: PropTypes.string,\n};\n\nDateRangeInput.defaultProps = {\n  defaultValue: null,\n  value: undefined,\n  onSelect: () => {},\n  className: \"\",\n};\n\nexport default DateRangeInput;\n","import { isArray } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport DatePicker from \"antd/lib/date-picker\";\nimport { clientConfig } from \"@/services/auth\";\nimport { Moment } from \"@/components/proptypes\";\n\nconst { RangePicker } = DatePicker;\n\nconst DateTimeRangeInput = React.forwardRef(\n  ({ defaultValue, value, withSeconds, onSelect, className, ...props }, ref) => {\n    const format = (clientConfig.dateFormat || \"YYYY-MM-DD\") + (withSeconds ? \" HH:mm:ss\" : \" HH:mm\");\n    const additionalAttributes = {};\n    if (isArray(defaultValue) && defaultValue[0].isValid() && defaultValue[1].isValid()) {\n      additionalAttributes.defaultValue = defaultValue;\n    }\n    if (value === null || (isArray(value) && value[0].isValid() && value[1].isValid())) {\n      additionalAttributes.value = value;\n    }\n    return (\n      <RangePicker\n        ref={ref}\n        className={className}\n        showTime\n        {...additionalAttributes}\n        format={format}\n        onChange={onSelect}\n        {...props}\n      />\n    );\n  }\n);\n\nDateTimeRangeInput.propTypes = {\n  defaultValue: PropTypes.arrayOf(Moment),\n  value: PropTypes.arrayOf(Moment),\n  withSeconds: PropTypes.bool,\n  onSelect: PropTypes.func,\n  className: PropTypes.string,\n};\n\nDateTimeRangeInput.defaultProps = {\n  defaultValue: null,\n  value: undefined,\n  withSeconds: false,\n  onSelect: () => {},\n  className: \"\",\n};\n\nexport default DateTimeRangeInput;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport moment from \"moment\";\nimport { includes, isArray, isObject } from \"lodash\";\nimport { isDynamicDateRange } from \"@/services/parameters/DateRangeParameter\";\nimport DateRangeInput from \"@/components/DateRangeInput\";\nimport DateTimeRangeInput from \"@/components/DateTimeRangeInput\";\nimport DynamicButton from \"@/components/dynamic-parameters/DynamicButton\";\n\nimport \"./DynamicParameters.less\";\n\nfunction isValidDateRangeValue(value) {\n  return isArray(value) && value.length === 2 && moment.isMoment(value[0]) && moment.isMoment(value[1]);\n}\n\nclass DynamicDateRangePicker extends React.Component {\n  static propTypes = {\n    type: PropTypes.oneOf([\"date-range\", \"datetime-range\", \"datetime-range-with-seconds\"]).isRequired,\n    className: PropTypes.string,\n    value: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n    parameter: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n    onSelect: PropTypes.func,\n    dynamicButtonOptions: PropTypes.shape({\n      staticValueLabel: PropTypes.string,\n      options: PropTypes.arrayOf(\n        PropTypes.shape({\n          name: PropTypes.string,\n          value: PropTypes.object,\n          label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n        })\n      ),\n    }),\n    dateRangeOptions: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n  };\n\n  static defaultProps = {\n    type: \"date-range\",\n    className: \"\",\n    value: null,\n    parameter: null,\n    dynamicButtonOptions: {\n      options: [],\n    },\n    onSelect: () => {},\n  };\n\n  constructor(props) {\n    super(props);\n    this.dateRangeComponentRef = React.createRef();\n  }\n\n  onDynamicValueSelect = dynamicValue => {\n    const { onSelect, parameter } = this.props;\n    if (dynamicValue === \"static\") {\n      const parameterValue = parameter.getExecutionValue();\n      if (isObject(parameterValue) && parameterValue.start && parameterValue.end) {\n        onSelect([moment(parameterValue.start), moment(parameterValue.end)]);\n      } else {\n        onSelect(null);\n      }\n    } else {\n      onSelect(dynamicValue.value);\n    }\n    // give focus to the DatePicker to get keyboard shortcuts to work\n    this.dateRangeComponentRef.current.focus();\n  };\n\n  render() {\n    const { type, value, onSelect, className, dynamicButtonOptions, dateRangeOptions, parameter, ...rest } = this.props;\n    const isDateTimeRange = includes(type, \"datetime-range\");\n    const hasDynamicValue = isDynamicDateRange(value);\n\n    const additionalAttributes = {};\n\n    let DateRangeComponent = DateRangeInput;\n    if (isDateTimeRange) {\n      DateRangeComponent = DateTimeRangeInput;\n      if (includes(type, \"with-seconds\")) {\n        additionalAttributes.withSeconds = true;\n      }\n    }\n\n    if (isValidDateRangeValue(value) || value === null) {\n      additionalAttributes.value = value;\n    }\n\n    if (hasDynamicValue) {\n      additionalAttributes.placeholder = [value && value.name];\n      additionalAttributes.value = null;\n    }\n\n    return (\n      <div {...rest} className={classNames(\"date-range-parameter\", className)}>\n        <DateRangeComponent\n          {...dateRangeOptions}\n          ref={this.dateRangeComponentRef}\n          className={classNames(\"redash-datepicker date-range-input\", type, { \"dynamic-value\": hasDynamicValue })}\n          onSelect={onSelect}\n          suffixIcon={null}\n          {...additionalAttributes}\n        />\n        <DynamicButton\n          options={dynamicButtonOptions.options}\n          staticValueLabel={dynamicButtonOptions.staticValueLabel}\n          selectedDynamicValue={hasDynamicValue ? value : null}\n          enabled={hasDynamicValue}\n          onSelect={this.onDynamicValueSelect}\n        />\n      </div>\n    );\n  }\n}\n\nexport default DynamicDateRangePicker;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { includes } from \"lodash\";\nimport { getDynamicDateRangeFromString } from \"@/services/parameters/DateRangeParameter\";\nimport DynamicDateRangePicker from \"@/components/dynamic-parameters/DynamicDateRangePicker\";\n\nconst DYNAMIC_DATE_OPTIONS = [\n  {\n    name: \"This week\",\n    value: getDynamicDateRangeFromString(\"d_this_week\"),\n    label: () =>\n      getDynamicDateRangeFromString(\"d_this_week\")\n        .value()[0]\n        .format(\"MMM D\") +\n      \" - \" +\n      getDynamicDateRangeFromString(\"d_this_week\")\n        .value()[1]\n        .format(\"MMM D\"),\n  },\n  {\n    name: \"This month\",\n    value: getDynamicDateRangeFromString(\"d_this_month\"),\n    label: () =>\n      getDynamicDateRangeFromString(\"d_this_month\")\n        .value()[0]\n        .format(\"MMMM\"),\n  },\n  {\n    name: \"This year\",\n    value: getDynamicDateRangeFromString(\"d_this_year\"),\n    label: () =>\n      getDynamicDateRangeFromString(\"d_this_year\")\n        .value()[0]\n        .format(\"YYYY\"),\n  },\n  {\n    name: \"Last week\",\n    value: getDynamicDateRangeFromString(\"d_last_week\"),\n    label: () =>\n      getDynamicDateRangeFromString(\"d_last_week\")\n        .value()[0]\n        .format(\"MMM D\") +\n      \" - \" +\n      getDynamicDateRangeFromString(\"d_last_week\")\n        .value()[1]\n        .format(\"MMM D\"),\n  },\n  {\n    name: \"Last month\",\n    value: getDynamicDateRangeFromString(\"d_last_month\"),\n    label: () =>\n      getDynamicDateRangeFromString(\"d_last_month\")\n        .value()[0]\n        .format(\"MMMM\"),\n  },\n  {\n    name: \"Last year\",\n    value: getDynamicDateRangeFromString(\"d_last_year\"),\n    label: () =>\n      getDynamicDateRangeFromString(\"d_last_year\")\n        .value()[0]\n        .format(\"YYYY\"),\n  },\n  {\n    name: \"Last 7 days\",\n    value: getDynamicDateRangeFromString(\"d_last_7_days\"),\n    label: () =>\n      getDynamicDateRangeFromString(\"d_last_7_days\")\n        .value()[0]\n        .format(\"MMM D\") + \" - Today\",\n  },\n  {\n    name: \"Last 14 days\",\n    value: getDynamicDateRangeFromString(\"d_last_14_days\"),\n    label: () =>\n      getDynamicDateRangeFromString(\"d_last_14_days\")\n        .value()[0]\n        .format(\"MMM D\") + \" - Today\",\n  },\n  {\n    name: \"Last 30 days\",\n    value: getDynamicDateRangeFromString(\"d_last_30_days\"),\n    label: () =>\n      getDynamicDateRangeFromString(\"d_last_30_days\")\n        .value()[0]\n        .format(\"MMM D\") + \" - Today\",\n  },\n  {\n    name: \"Last 60 days\",\n    value: getDynamicDateRangeFromString(\"d_last_60_days\"),\n    label: () =>\n      getDynamicDateRangeFromString(\"d_last_60_days\")\n        .value()[0]\n        .format(\"MMM D\") + \" - Today\",\n  },\n  {\n    name: \"Last 90 days\",\n    value: getDynamicDateRangeFromString(\"d_last_90_days\"),\n    label: () =>\n      getDynamicDateRangeFromString(\"d_last_90_days\")\n        .value()[0]\n        .format(\"MMM D\") + \" - Today\",\n  },\n  {\n    name: \"Last 12 months\",\n    value: getDynamicDateRangeFromString(\"d_last_12_months\"),\n    label: null,\n  },\n];\n\nconst DYNAMIC_DATETIME_OPTIONS = [\n  {\n    name: \"Today\",\n    value: getDynamicDateRangeFromString(\"d_today\"),\n    label: () =>\n      getDynamicDateRangeFromString(\"d_today\")\n        .value()[0]\n        .format(\"MMM D\"),\n  },\n  {\n    name: \"Yesterday\",\n    value: getDynamicDateRangeFromString(\"d_yesterday\"),\n    label: () =>\n      getDynamicDateRangeFromString(\"d_yesterday\")\n        .value()[0]\n        .format(\"MMM D\"),\n  },\n  ...DYNAMIC_DATE_OPTIONS,\n];\n\nfunction DateRangeParameter(props) {\n  const options = includes(props.type, \"datetime-range\") ? DYNAMIC_DATETIME_OPTIONS : DYNAMIC_DATE_OPTIONS;\n  return <DynamicDateRangePicker {...props} dynamicButtonOptions={{ options }} />;\n}\n\nDateRangeParameter.propTypes = {\n  type: PropTypes.string,\n  className: PropTypes.string,\n  value: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n  parameter: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n  onSelect: PropTypes.func,\n};\n\nDateRangeParameter.defaultProps = {\n  type: \"\",\n  className: \"\",\n  value: null,\n  parameter: null,\n  onSelect: () => {},\n};\n\nexport default DateRangeParameter;\n","import { find, isArray, get, first, map, intersection, isEqual, isEmpty } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport SelectWithVirtualScroll from \"@/components/SelectWithVirtualScroll\";\n\nexport default class QueryBasedParameterInput extends React.Component {\n  static propTypes = {\n    parameter: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n    value: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n    mode: PropTypes.oneOf([\"default\", \"multiple\"]),\n    queryId: PropTypes.number,\n    onSelect: PropTypes.func,\n    className: PropTypes.string,\n  };\n\n  static defaultProps = {\n    value: null,\n    mode: \"default\",\n    parameter: null,\n    queryId: null,\n    onSelect: () => {},\n    className: \"\",\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: [],\n      value: null,\n      loading: false,\n    };\n  }\n\n  componentDidMount() {\n    this._loadOptions(this.props.queryId);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.queryId !== prevProps.queryId) {\n      this._loadOptions(this.props.queryId);\n    }\n    if (this.props.value !== prevProps.value) {\n      this.setValue(this.props.value);\n    }\n  }\n\n  setValue(value) {\n    const { options } = this.state;\n    if (this.props.mode === \"multiple\") {\n      value = isArray(value) ? value : [value];\n      const optionValues = map(options, option => option.value);\n      const validValues = intersection(value, optionValues);\n      this.setState({ value: validValues });\n      return validValues;\n    }\n    const found = find(options, option => option.value === this.props.value) !== undefined;\n    value = found ? value : get(first(options), \"value\");\n    this.setState({ value });\n    return value;\n  }\n\n  async _loadOptions(queryId) {\n    if (queryId && queryId !== this.state.queryId) {\n      this.setState({ loading: true });\n      const options = await this.props.parameter.loadDropdownValues();\n\n      // stale queryId check\n      if (this.props.queryId === queryId) {\n        this.setState({ options, loading: false }, () => {\n          const updatedValue = this.setValue(this.props.value);\n          if (!isEqual(updatedValue, this.props.value)) {\n            this.props.onSelect(updatedValue);\n          }\n        });\n      }\n    }\n  }\n\n  render() {\n    const { className, mode, onSelect, queryId, value, ...otherProps } = this.props;\n    const { loading, options } = this.state;\n    return (\n      <span>\n        <SelectWithVirtualScroll\n          className={className}\n          disabled={loading}\n          loading={loading}\n          mode={mode}\n          value={this.state.value}\n          onChange={onSelect}\n          options={map(options, ({ value, name }) => ({ label: String(name), value }))}\n          showSearch\n          showArrow\n          notFoundContent={isEmpty(options) ? \"No options available\" : null}\n          {...otherProps}\n        />\n      </span>\n    );\n  }\n}\n","import { isEqual, isEmpty, map } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport SelectWithVirtualScroll from \"@/components/SelectWithVirtualScroll\";\nimport Input from \"antd/lib/input\";\nimport InputNumber from \"antd/lib/input-number\";\nimport DateParameter from \"@/components/dynamic-parameters/DateParameter\";\nimport DateRangeParameter from \"@/components/dynamic-parameters/DateRangeParameter\";\nimport QueryBasedParameterInput from \"./QueryBasedParameterInput\";\n\nimport \"./ParameterValueInput.less\";\n\nconst multipleValuesProps = {\n  maxTagCount: 3,\n  maxTagTextLength: 10,\n  maxTagPlaceholder: num => `+${num.length} more`,\n};\n\nclass ParameterValueInput extends React.Component {\n  static propTypes = {\n    type: PropTypes.string,\n    value: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n    enumOptions: PropTypes.string,\n    queryId: PropTypes.number,\n    parameter: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n    onSelect: PropTypes.func,\n    className: PropTypes.string,\n  };\n\n  static defaultProps = {\n    type: \"text\",\n    value: null,\n    enumOptions: \"\",\n    queryId: null,\n    parameter: null,\n    onSelect: () => {},\n    className: \"\",\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: props.parameter.hasPendingValue ? props.parameter.pendingValue : props.value,\n      isDirty: props.parameter.hasPendingValue,\n    };\n  }\n\n  componentDidUpdate = prevProps => {\n    const { value, parameter } = this.props;\n    // if value prop updated, reset dirty state\n    if (prevProps.value !== value || prevProps.parameter !== parameter) {\n      this.setState({\n        value: parameter.hasPendingValue ? parameter.pendingValue : value,\n        isDirty: parameter.hasPendingValue,\n      });\n    }\n  };\n\n  onSelect = value => {\n    const isDirty = !isEqual(value, this.props.value);\n    this.setState({ value, isDirty });\n    this.props.onSelect(value, isDirty);\n  };\n\n  renderDateParameter() {\n    const { type, parameter } = this.props;\n    const { value } = this.state;\n    return (\n      <DateParameter\n        type={type}\n        className={this.props.className}\n        value={value}\n        parameter={parameter}\n        onSelect={this.onSelect}\n      />\n    );\n  }\n\n  renderDateRangeParameter() {\n    const { type, parameter } = this.props;\n    const { value } = this.state;\n    return (\n      <DateRangeParameter\n        type={type}\n        className={this.props.className}\n        value={value}\n        parameter={parameter}\n        onSelect={this.onSelect}\n      />\n    );\n  }\n\n  renderEnumInput() {\n    const { enumOptions, parameter } = this.props;\n    const { value } = this.state;\n    const enumOptionsArray = enumOptions.split(\"\\n\").filter(v => v !== \"\");\n    // Antd Select doesn't handle null in multiple mode\n    const normalize = val => (parameter.multiValuesOptions && val === null ? [] : val);\n\n    return (\n      <SelectWithVirtualScroll\n        className={this.props.className}\n        mode={parameter.multiValuesOptions ? \"multiple\" : \"default\"}\n        value={normalize(value)}\n        onChange={this.onSelect}\n        options={map(enumOptionsArray, opt => ({ label: String(opt), value: opt }))}\n        showSearch\n        showArrow\n        notFoundContent={isEmpty(enumOptionsArray) ? \"No options available\" : null}\n        {...multipleValuesProps}\n      />\n    );\n  }\n\n  renderQueryBasedInput() {\n    const { queryId, parameter } = this.props;\n    const { value } = this.state;\n    return (\n      <QueryBasedParameterInput\n        className={this.props.className}\n        mode={parameter.multiValuesOptions ? \"multiple\" : \"default\"}\n        parameter={parameter}\n        value={value}\n        queryId={queryId}\n        onSelect={this.onSelect}\n        style={{ minWidth: 60 }}\n        {...multipleValuesProps}\n      />\n    );\n  }\n\n  renderNumberInput() {\n    const { className } = this.props;\n    const { value } = this.state;\n\n    const normalize = val => (isNaN(val) ? undefined : val);\n\n    return (\n      <InputNumber\n        className={className}\n        value={normalize(value)}\n        aria-label=\"Parameter number value\"\n        onChange={val => this.onSelect(normalize(val))}\n      />\n    );\n  }\n\n  renderTextInput() {\n    const { className } = this.props;\n    const { value } = this.state;\n\n    return (\n      <Input\n        className={className}\n        value={value}\n        aria-label=\"Parameter text value\"\n        data-test=\"TextParamInput\"\n        onChange={e => this.onSelect(e.target.value)}\n      />\n    );\n  }\n\n  renderInput() {\n    const { type } = this.props;\n    switch (type) {\n      case \"datetime-with-seconds\":\n      case \"datetime-local\":\n      case \"date\":\n        return this.renderDateParameter();\n      case \"datetime-range-with-seconds\":\n      case \"datetime-range\":\n      case \"date-range\":\n        return this.renderDateRangeParameter();\n      case \"enum\":\n        return this.renderEnumInput();\n      case \"query\":\n        return this.renderQueryBasedInput();\n      case \"number\":\n        return this.renderNumberInput();\n      default:\n        return this.renderTextInput();\n    }\n  }\n\n  render() {\n    const { isDirty } = this.state;\n\n    return (\n      <div className=\"parameter-input\" data-dirty={isDirty || null} data-test=\"ParameterValueInput\">\n        {this.renderInput()}\n      </div>\n    );\n  }\n}\n\nexport default ParameterValueInput;\n","import { includes, words, capitalize, clone, isNull } from \"lodash\";\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Checkbox from \"antd/lib/checkbox\";\nimport Modal from \"antd/lib/modal\";\nimport Form from \"antd/lib/form\";\nimport Button from \"antd/lib/button\";\nimport Select from \"antd/lib/select\";\nimport Input from \"antd/lib/input\";\nimport Divider from \"antd/lib/divider\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport QuerySelector from \"@/components/QuerySelector\";\nimport { Query } from \"@/services/query\";\nimport { useUniqueId } from \"@/lib/hooks/useUniqueId\";\n\nconst { Option } = Select;\nconst formItemProps = { labelCol: { span: 6 }, wrapperCol: { span: 16 } };\n\nfunction getDefaultTitle(text) {\n  return capitalize(words(text).join(\" \")); // humanize\n}\n\nfunction isTypeDateRange(type) {\n  return /-range/.test(type);\n}\n\nfunction joinExampleList(multiValuesOptions) {\n  const { prefix, suffix } = multiValuesOptions;\n  return [\"value1\", \"value2\", \"value3\"].map(value => `${prefix}${value}${suffix}`).join(\",\");\n}\n\nfunction NameInput({ name, type, onChange, existingNames, setValidation }) {\n  let helpText = \"\";\n  let validateStatus = \"\";\n\n  if (!name) {\n    helpText = \"Choose a keyword for this parameter\";\n    setValidation(false);\n  } else if (includes(existingNames, name)) {\n    helpText = \"Parameter with this name already exists\";\n    setValidation(false);\n    validateStatus = \"error\";\n  } else {\n    if (isTypeDateRange(type)) {\n      helpText = (\n        <React.Fragment>\n          Appears in query as{\" \"}\n          <code style={{ display: \"inline-block\", color: \"inherit\" }}>{`{{${name}.start}} {{${name}.end}}`}</code>\n        </React.Fragment>\n      );\n    }\n    setValidation(true);\n  }\n\n  return (\n    <Form.Item required label=\"Keyword\" help={helpText} validateStatus={validateStatus} {...formItemProps}>\n      <Input onChange={e => onChange(e.target.value)} autoFocus />\n    </Form.Item>\n  );\n}\n\nNameInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  existingNames: PropTypes.arrayOf(PropTypes.string).isRequired,\n  setValidation: PropTypes.func.isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nfunction EditParameterSettingsDialog(props) {\n  const [param, setParam] = useState(clone(props.parameter));\n  const [isNameValid, setIsNameValid] = useState(true);\n  const [initialQuery, setInitialQuery] = useState();\n\n  const isNew = !props.parameter.name;\n\n  // fetch query by id\n  useEffect(() => {\n    const queryId = props.parameter.queryId;\n    if (queryId) {\n      Query.get({ id: queryId }).then(setInitialQuery);\n    }\n  }, [props.parameter.queryId]);\n\n  function isFulfilled() {\n    // name\n    if (!isNameValid) {\n      return false;\n    }\n\n    // title\n    if (param.title === \"\") {\n      return false;\n    }\n\n    // query\n    if (param.type === \"query\" && !param.queryId) {\n      return false;\n    }\n\n    return true;\n  }\n\n  function onConfirm() {\n    // update title to default\n    if (!param.title) {\n      // forced to do this cause param won't update in time for save\n      param.title = getDefaultTitle(param.name);\n      setParam(param);\n    }\n\n    props.dialog.close(param);\n  }\n\n  const paramFormId = useUniqueId(\"paramForm\");\n\n  return (\n    <Modal\n      {...props.dialog.props}\n      title={isNew ? \"Add Parameter\" : param.name}\n      width={600}\n      footer={[\n        <Button key=\"cancel\" onClick={props.dialog.dismiss}>\n          Cancel\n        </Button>,\n        <Button\n          key=\"submit\"\n          htmlType=\"submit\"\n          disabled={!isFulfilled()}\n          type=\"primary\"\n          form={paramFormId}\n          data-test=\"SaveParameterSettings\">\n          {isNew ? \"Add Parameter\" : \"OK\"}\n        </Button>,\n      ]}>\n      <Form layout=\"horizontal\" onFinish={onConfirm} id={paramFormId}>\n        {isNew && (\n          <NameInput\n            name={param.name}\n            onChange={name => setParam({ ...param, name })}\n            setValidation={setIsNameValid}\n            existingNames={props.existingParams}\n            type={param.type}\n          />\n        )}\n        <Form.Item required label=\"Title\" {...formItemProps}>\n          <Input\n            value={isNull(param.title) ? getDefaultTitle(param.name) : param.title}\n            onChange={e => setParam({ ...param, title: e.target.value })}\n            data-test=\"ParameterTitleInput\"\n          />\n        </Form.Item>\n        <Form.Item label=\"Type\" {...formItemProps}>\n          <Select value={param.type} onChange={type => setParam({ ...param, type })} data-test=\"ParameterTypeSelect\">\n            <Option value=\"text\" data-test=\"TextParameterTypeOption\">\n              Text\n            </Option>\n            <Option value=\"number\" data-test=\"NumberParameterTypeOption\">\n              Number\n            </Option>\n            <Option value=\"enum\">Dropdown List</Option>\n            <Option value=\"query\">Query Based Dropdown List</Option>\n            <Option disabled key=\"dv1\">\n              <Divider className=\"select-option-divider\" />\n            </Option>\n            <Option value=\"date\" data-test=\"DateParameterTypeOption\">\n              Date\n            </Option>\n            <Option value=\"datetime-local\" data-test=\"DateTimeParameterTypeOption\">\n              Date and Time\n            </Option>\n            <Option value=\"datetime-with-seconds\">Date and Time (with seconds)</Option>\n            <Option disabled key=\"dv2\">\n              <Divider className=\"select-option-divider\" />\n            </Option>\n            <Option value=\"date-range\" data-test=\"DateRangeParameterTypeOption\">\n              Date Range\n            </Option>\n            <Option value=\"datetime-range\">Date and Time Range</Option>\n            <Option value=\"datetime-range-with-seconds\">Date and Time Range (with seconds)</Option>\n          </Select>\n        </Form.Item>\n        {param.type === \"enum\" && (\n          <Form.Item label=\"Values\" help=\"Dropdown list values (newline delimited)\" {...formItemProps}>\n            <Input.TextArea\n              rows={3}\n              value={param.enumOptions}\n              onChange={e => setParam({ ...param, enumOptions: e.target.value })}\n            />\n          </Form.Item>\n        )}\n        {param.type === \"query\" && (\n          <Form.Item label=\"Query\" help=\"Select query to load dropdown values from\" {...formItemProps}>\n            <QuerySelector\n              selectedQuery={initialQuery}\n              onChange={q => setParam({ ...param, queryId: q && q.id })}\n              type=\"select\"\n            />\n          </Form.Item>\n        )}\n        {(param.type === \"enum\" || param.type === \"query\") && (\n          <Form.Item className=\"m-b-0\" label=\" \" colon={false} {...formItemProps}>\n            <Checkbox\n              defaultChecked={!!param.multiValuesOptions}\n              onChange={e =>\n                setParam({\n                  ...param,\n                  multiValuesOptions: e.target.checked\n                    ? {\n                        prefix: \"\",\n                        suffix: \"\",\n                        separator: \",\",\n                      }\n                    : null,\n                })\n              }\n              data-test=\"AllowMultipleValuesCheckbox\">\n              Allow multiple values\n            </Checkbox>\n          </Form.Item>\n        )}\n        {(param.type === \"enum\" || param.type === \"query\") && param.multiValuesOptions && (\n          <Form.Item\n            label=\"Quotation\"\n            help={\n              <React.Fragment>\n                Placed in query as: <code>{joinExampleList(param.multiValuesOptions)}</code>\n              </React.Fragment>\n            }\n            {...formItemProps}>\n            <Select\n              value={param.multiValuesOptions.prefix}\n              onChange={quoteOption =>\n                setParam({\n                  ...param,\n                  multiValuesOptions: {\n                    ...param.multiValuesOptions,\n                    prefix: quoteOption,\n                    suffix: quoteOption,\n                  },\n                })\n              }\n              data-test=\"QuotationSelect\">\n              <Option value=\"\">None (default)</Option>\n              <Option value=\"'\">Single Quotation Mark</Option>\n              <Option value={'\"'} data-test=\"DoubleQuotationMarkOption\">\n                Double Quotation Mark\n              </Option>\n            </Select>\n          </Form.Item>\n        )}\n      </Form>\n    </Modal>\n  );\n}\n\nEditParameterSettingsDialog.propTypes = {\n  parameter: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  dialog: DialogPropType.isRequired,\n  existingParams: PropTypes.arrayOf(PropTypes.string),\n};\n\nEditParameterSettingsDialog.defaultProps = {\n  existingParams: [],\n};\n\nexport default wrapDialog(EditParameterSettingsDialog);\n","import { size, filter, forEach, extend, isEmpty } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { SortableContainer, SortableElement, DragHandle } from \"@redash/viz/lib/components/sortable\";\nimport location from \"@/services/location\";\nimport { Parameter, createParameter } from \"@/services/parameters\";\nimport ParameterApplyButton from \"@/components/ParameterApplyButton\";\nimport ParameterValueInput from \"@/components/ParameterValueInput\";\nimport PlainButton from \"@/components/PlainButton\";\nimport EditParameterSettingsDialog from \"./EditParameterSettingsDialog\";\nimport { toHuman } from \"@/lib/utils\";\n\nimport \"./Parameters.less\";\n\nfunction updateUrl(parameters) {\n  const params = extend({}, location.search);\n  parameters.forEach(param => {\n    extend(params, param.toUrlParams());\n  });\n  location.setSearch(params, true);\n}\n\nexport default class Parameters extends React.Component {\n  static propTypes = {\n    parameters: PropTypes.arrayOf(PropTypes.instanceOf(Parameter)),\n    editable: PropTypes.bool,\n    sortable: PropTypes.bool,\n    disableUrlUpdate: PropTypes.bool,\n    onValuesChange: PropTypes.func,\n    onPendingValuesChange: PropTypes.func,\n    onParametersEdit: PropTypes.func,\n    appendSortableToParent: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    parameters: [],\n    editable: false,\n    sortable: false,\n    disableUrlUpdate: false,\n    onValuesChange: () => {},\n    onPendingValuesChange: () => {},\n    onParametersEdit: () => {},\n    appendSortableToParent: true,\n  };\n\n  toCamelCase = str => {\n    if (isEmpty(str)) {\n      return \"\";\n    }\n    return str.replace(/\\s+/g, \"\").toLowerCase();\n  };\n\n  constructor(props) {\n    super(props);\n    const { parameters, disableUrlUpdate } = props;\n    this.state = { parameters };\n    if (!disableUrlUpdate) {\n      updateUrl(parameters);\n    }\n    const hideRegex = /hide_filter=([^&]+)/g;\n    const matches = window.location.search.matchAll(hideRegex);\n    this.hideValues = Array.from(matches, match => match[1]);\n  }\n\n  componentDidUpdate = prevProps => {\n    const { parameters, disableUrlUpdate } = this.props;\n    const parametersChanged = prevProps.parameters !== parameters;\n    const disableUrlUpdateChanged = prevProps.disableUrlUpdate !== disableUrlUpdate;\n    if (parametersChanged) {\n      this.setState({ parameters });\n    }\n    if ((parametersChanged || disableUrlUpdateChanged) && !disableUrlUpdate) {\n      updateUrl(parameters);\n    }\n  };\n\n  handleKeyDown = e => {\n    // Cmd/Ctrl/Alt + Enter\n    if (e.keyCode === 13 && (e.ctrlKey || e.metaKey || e.altKey)) {\n      e.stopPropagation();\n      this.applyChanges();\n    }\n  };\n\n  setPendingValue = (param, value, isDirty) => {\n    const { onPendingValuesChange } = this.props;\n    this.setState(({ parameters }) => {\n      if (isDirty) {\n        param.setPendingValue(value);\n      } else {\n        param.clearPendingValue();\n      }\n      onPendingValuesChange();\n      return { parameters };\n    });\n  };\n\n  moveParameter = ({ oldIndex, newIndex }) => {\n    const { onParametersEdit } = this.props;\n    if (oldIndex !== newIndex) {\n      this.setState(({ parameters }) => {\n        parameters.splice(newIndex, 0, parameters.splice(oldIndex, 1)[0]);\n        onParametersEdit(parameters);\n        return { parameters };\n      });\n    }\n  };\n\n  applyChanges = () => {\n    const { onValuesChange, disableUrlUpdate } = this.props;\n    this.setState(({ parameters }) => {\n      const parametersWithPendingValues = parameters.filter(p => p.hasPendingValue);\n      forEach(parameters, p => p.applyPendingValue());\n      if (!disableUrlUpdate) {\n        updateUrl(parameters);\n      }\n      onValuesChange(parametersWithPendingValues);\n      return { parameters };\n    });\n  };\n\n  showParameterSettings = (parameter, index) => {\n    const { onParametersEdit } = this.props;\n    EditParameterSettingsDialog.showModal({ parameter }).onClose(updated => {\n      this.setState(({ parameters }) => {\n        const updatedParameter = extend(parameter, updated);\n        parameters[index] = createParameter(updatedParameter, updatedParameter.parentQueryId);\n        onParametersEdit(parameters);\n        return { parameters };\n      });\n    });\n  };\n\n  renderParameter(param, index) {\n    if (this.hideValues.some(value => this.toCamelCase(value) === this.toCamelCase(param.name))) {\n      return null;\n    }\n    const { editable } = this.props;\n    if (param.hidden) {\n      return null;\n    }\n    return (\n      <div key={param.name} className=\"di-block\" data-test={`ParameterName-${param.name}`}>\n        <div className=\"parameter-heading\">\n          <label>{param.title || toHuman(param.name)}</label>\n          {editable && (\n            <PlainButton\n              className=\"btn btn-default btn-xs m-l-5\"\n              aria-label=\"Edit\"\n              onClick={() => this.showParameterSettings(param, index)}\n              data-test={`ParameterSettings-${param.name}`}\n              type=\"button\">\n              <i className=\"fa fa-cog\" aria-hidden=\"true\" />\n            </PlainButton>\n          )}\n        </div>\n\n        <ParameterValueInput\n          type={param.type}\n          value={param.normalizedValue}\n          parameter={param}\n          enumOptions={param.enumOptions}\n          queryId={param.queryId}\n          onSelect={(value, isDirty) => this.setPendingValue(param, value, isDirty)}\n        />\n      </div>\n    );\n  }\n\n  render() {\n    const { parameters } = this.state;\n    const { sortable, appendSortableToParent } = this.props;\n    const dirtyParamCount = size(filter(parameters, \"hasPendingValue\"));\n    return (\n      <SortableContainer\n        disabled={!sortable}\n        axis=\"xy\"\n        useDragHandle\n        lockToContainerEdges\n        helperClass=\"parameter-dragged\"\n        helperContainer={containerEl => (appendSortableToParent ? containerEl : document.body)}\n        updateBeforeSortStart={this.onBeforeSortStart}\n        onSortEnd={this.moveParameter}\n        containerProps={{\n          className: \"parameter-container\",\n          onKeyDown: dirtyParamCount ? this.handleKeyDown : null,\n        }}>\n        {parameters &&\n          parameters.map((param, index) => (\n            <SortableElement key={param.name} index={index}>\n              <div\n                className=\"parameter-block\"\n                data-editable={sortable || null}\n                data-test={`ParameterBlock-${param.name}`}>\n                {sortable && <DragHandle data-test={`DragHandle-${param.name}`} />}\n                {this.renderParameter(param, index)}\n              </div>\n            </SortableElement>\n          ))}\n        <ParameterApplyButton onClick={this.applyChanges} paramCount={dirtyParamCount} />\n      </SortableContainer>\n    );\n  }\n}\n","import React, { useMemo, useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport PropTypes from \"prop-types\";\nimport { Moment } from \"@/components/proptypes\";\n\nexport default function Timer({ from }) {\n  const startTime = useMemo(() => moment(from).valueOf(), [from]);\n  const [value, setValue] = useState(null);\n\n  useEffect(() => {\n    function update() {\n      const diff = moment.now() - startTime;\n      const format = diff > 1000 * 60 * 60 ? \"HH:mm:ss\" : \"mm:ss\"; // no HH under an hour\n      setValue(moment.utc(diff).format(format));\n    }\n    update();\n\n    const timer = setInterval(update, 1000);\n    return () => clearInterval(timer);\n  }, [startTime]);\n\n  return <span className=\"rd-timer\">{value}</span>;\n}\n\nTimer.propTypes = {\n  from: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.instanceOf(Date), Moment]),\n};\n\nTimer.defaultProps = {\n  from: null,\n};\n","import React from \"react\";\nimport { VisualizationType, registeredVisualizations } from \"@redash/viz/lib\";\n\nimport \"./VisualizationName.less\";\n\nfunction VisualizationName({ visualization }) {\n  const config = registeredVisualizations[visualization.type];\n  return (\n    <span className=\"visualization-name\">\n      {config && visualization.name !== config.name ? visualization.name : null}\n    </span>\n  );\n}\n\nVisualizationName.propTypes = {\n  visualization: VisualizationType.isRequired,\n};\n\nexport default VisualizationName;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { VisualizationType } from \"@redash/viz/lib\";\nimport Link from \"@/components/Link\";\nimport VisualizationName from \"@/components/visualizations/VisualizationName\";\n\nimport \"./QueryLink.less\";\n\nfunction QueryLink({ query, visualization, readOnly }) {\n  const getUrl = () => {\n    let hash = null;\n    if (visualization) {\n      if (visualization.type === \"TABLE\") {\n        // link to hard-coded table tab instead of the (hidden) visualization tab\n        hash = \"table\";\n      } else {\n        hash = visualization.id;\n      }\n    }\n\n    return query.getUrl(false, hash);\n  };\n\n  const QueryLinkWrapper = props => (readOnly ? <span {...props} /> : <Link href={getUrl()} {...props} />);\n\n  return (\n    <QueryLinkWrapper className=\"query-link\">\n      <VisualizationName visualization={visualization} /> <span>{query.name}</span>\n    </QueryLinkWrapper>\n  );\n}\n\nQueryLink.propTypes = {\n  query: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  visualization: VisualizationType,\n  readOnly: PropTypes.bool,\n};\n\nQueryLink.defaultProps = {\n  visualization: null,\n  readOnly: false,\n};\n\nexport default QueryLink;\n","import { isArray, indexOf, get, map, includes, every, some, toNumber } from \"lodash\";\nimport moment from \"moment\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Select from \"antd/lib/select\";\nimport { formatColumnValue } from \"@/lib/utils\";\n\nconst ALL_VALUES = \"###Redash::Filters::SelectAll###\";\nconst NONE_VALUES = \"###Redash::Filters::Clear###\";\n\nexport const FilterType = PropTypes.shape({\n  name: PropTypes.string.isRequired,\n  friendlyName: PropTypes.string.isRequired,\n  multiple: PropTypes.bool,\n  current: PropTypes.oneOfType([PropTypes.any, PropTypes.arrayOf(PropTypes.any)]),\n  values: PropTypes.arrayOf(PropTypes.any).isRequired,\n});\n\nexport const FiltersType = PropTypes.arrayOf(FilterType);\n\nfunction createFilterChangeHandler(filters, onChange) {\n  return (filter, values) => {\n    if (isArray(values)) {\n      values = map(values, value => filter.values[toNumber(value.key)] || value.key);\n    } else {\n      const _values = filter.values[toNumber(values.key)];\n      values = _values !== undefined ? _values : values.key;\n    }\n\n    if (filter.multiple && includes(values, ALL_VALUES)) {\n      values = [...filter.values];\n    }\n    if (filter.multiple && includes(values, NONE_VALUES)) {\n      values = [];\n    }\n    filters = map(filters, f => (f.name === filter.name ? { ...filter, current: values } : f));\n    onChange(filters);\n  };\n}\n\nexport function filterData(rows, filters = []) {\n  if (!isArray(rows)) {\n    return [];\n  }\n\n  let result = rows;\n\n  if (isArray(filters) && filters.length > 0) {\n    // \"every\" field's value should match \"some\" of corresponding filter's values\n    result = result.filter(row =>\n      every(filters, filter => {\n        const rowValue = row[filter.name];\n        const filterValues = isArray(filter.current) ? filter.current : [filter.current];\n        return some(filterValues, filterValue => {\n          if (moment.isMoment(rowValue)) {\n            return rowValue.isSame(filterValue);\n          }\n          // We compare with either the value or the String representation of the value,\n          // because Select2 casts true/false to \"true\"/\"false\".\n          return filterValue === rowValue || String(rowValue) === filterValue;\n        });\n      })\n    );\n  }\n\n  return result;\n}\n\nfunction Filters({ filters, onChange }) {\n  if (filters.length === 0) {\n    return null;\n  }\n\n  onChange = createFilterChangeHandler(filters, onChange);\n\n  return (\n    <div className=\"filters-wrapper\" data-test=\"Filters\">\n      <div className=\"container bg-white\">\n        <div className=\"row\">\n          {map(filters, filter => {\n            const options = map(filter.values, (value, index) => (\n              <Select.Option key={index}>{formatColumnValue(value, get(filter, \"column.type\"))}</Select.Option>\n            ));\n\n            return (\n              <div\n                key={filter.name}\n                className=\"col-sm-6 p-l-0 filter-container\"\n                data-test={`FilterName-${filter.name}`}>\n                <label>{filter.friendlyName}</label>\n                {options.length === 0 && <Select className=\"w-100\" disabled value=\"No values\" />}\n                {options.length > 0 && (\n                  <Select\n                    labelInValue\n                    className=\"w-100\"\n                    mode={filter.multiple ? \"multiple\" : \"default\"}\n                    value={\n                      isArray(filter.current)\n                        ? map(filter.current, value => ({\n                            key: `${indexOf(filter.values, value)}`,\n                            label: formatColumnValue(value),\n                          }))\n                        : { key: `${indexOf(filter.values, filter.current)}`, label: formatColumnValue(filter.current) }\n                    }\n                    allowClear={filter.multiple}\n                    optionFilterProp=\"children\"\n                    showSearch\n                    maxTagCount={3}\n                    maxTagTextLength={10}\n                    maxTagPlaceholder={num => `+${num.length} more`}\n                    onChange={values => onChange(filter, values)}>\n                    {!filter.multiple && options}\n                    {filter.multiple && [\n                      <Select.Option key={NONE_VALUES} data-test=\"ClearOption\">\n                        <i className=\"fa fa-square-o m-r-5\" aria-hidden=\"true\" />\n                        Clear\n                      </Select.Option>,\n                      <Select.Option key={ALL_VALUES} data-test=\"SelectAllOption\">\n                        <i className=\"fa fa-check-square-o m-r-5\" aria-hidden=\"true\" />\n                        Select All\n                      </Select.Option>,\n                      <Select.OptGroup key=\"Values\" title=\"Values\">\n                        {options}\n                      </Select.OptGroup>,\n                    ]}\n                  </Select>\n                )}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nFilters.propTypes = {\n  filters: FiltersType.isRequired,\n  onChange: PropTypes.func, // (name, value) => void\n};\n\nFilters.defaultProps = {\n  onChange: () => {},\n};\n\nexport default Filters;\n","import { useMemo } from \"react\";\nimport { get, invoke } from \"lodash\";\n\nfunction getQueryResultData(queryResult, queryResultStatus = null) {\n  return {\n    status: queryResultStatus || invoke(queryResult, \"getStatus\") || null,\n    columns: invoke(queryResult, \"getColumns\") || [],\n    rows: invoke(queryResult, \"getData\") || [],\n    filters: invoke(queryResult, \"getFilters\") || [],\n    updatedAt: invoke(queryResult, \"getUpdatedAt\") || null,\n    retrievedAt: get(queryResult, \"query_result.retrieved_at\", null),\n    truncated: invoke(queryResult, \"getTruncated\") || null,\n    log: invoke(queryResult, \"getLog\") || [],\n    error: invoke(queryResult, \"getError\") || null,\n    runtime: invoke(queryResult, \"getRuntime\") || null,\n    metadata: get(queryResult, \"query_result.data.metadata\", {}),\n  };\n}\n\nexport default function useQueryResultData(queryResult) {\n  // make sure it re-executes when queryResult status changes\n  const queryResultStatus = invoke(queryResult, \"getStatus\");\n  return useMemo(() => getQueryResultData(queryResult, queryResultStatus), [queryResult, queryResultStatus]);\n}\n","import { isFunction, noop } from \"lodash\";\nimport { useRef, useCallback } from \"react\";\n\n// This hook wraps a potentially changeable function object and always returns the same\n// function so it's safe to use it with other hooks: wrapper function stays the same,\n// but will always call a latest wrapped function.\n// A quick note regarding `react-hooks/exhaustive-deps`: since wrapper function doesn't\n// change, it's safe to use it as a dependency, it will never trigger other hooks.\nexport default function useImmutableCallback(callback) {\n  const callbackRef = useRef();\n  callbackRef.current = isFunction(callback) ? callback : noop;\n\n  return useCallback((...args) => callbackRef.current(...args), []);\n}\n","import React from \"react\";\nimport { pick } from \"lodash\";\nimport HelpTrigger from \"@/components/HelpTrigger\";\nimport Link from \"@/components/Link\";\nimport { Renderer as VisRenderer, Editor as VisEditor, updateVisualizationsSettings } from \"@redash/viz/lib\";\nimport { clientConfig } from \"@/services/auth\";\n\nimport countriesDataUrl from \"@redash/viz/lib/visualizations/choropleth/maps/countries.geo.json\";\nimport usaDataUrl from \"@redash/viz/lib/visualizations/choropleth/maps/usa-albers.geo.json\";\nimport subdivJapanDataUrl from \"@redash/viz/lib/visualizations/choropleth/maps/japan.prefectures.geo.json\";\n\nfunction wrapComponentWithSettings(WrappedComponent) {\n  return function VisualizationComponent(props) {\n    updateVisualizationsSettings({\n      HelpTriggerComponent: HelpTrigger,\n      LinkComponent: Link,\n      choroplethAvailableMaps: {\n        countries: {\n          name: \"Countries\",\n          url: countriesDataUrl,\n          fieldNames: {\n            name: \"Short name\",\n            name_long: \"Full name\",\n            abbrev: \"Abbreviated name\",\n            iso_a2: \"ISO code (2 letters)\",\n            iso_a3: \"ISO code (3 letters)\",\n            iso_n3: \"ISO code (3 digits)\",\n          },\n        },\n        usa: {\n          name: \"USA\",\n          url: usaDataUrl,\n          fieldNames: {\n            name: \"Name\",\n            ns_code: \"National Standard ANSI Code (8-character)\",\n            geoid: \"Geographic ID\",\n            usps_abbrev: \"USPS Abbreviation\",\n            fips_code: \"FIPS Code (2-character)\",\n          },\n        },\n        subdiv_japan: {\n          name: \"Japan/Prefectures\",\n          url: subdivJapanDataUrl,\n          fieldNames: {\n            name: \"Name\",\n            name_alt: \"Name (alternative)\",\n            name_local: \"Name (local)\",\n            iso_3166_2: \"ISO-3166-2\",\n            postal: \"Postal Code\",\n            type: \"Type\",\n            type_en: \"Type (EN)\",\n            region: \"Region\",\n            region_code: \"Region Code\",\n          },\n        },\n      },\n      ...pick(clientConfig, [\n        \"dateFormat\",\n        \"dateTimeFormat\",\n        \"integerFormat\",\n        \"floatFormat\",\n        \"booleanValues\",\n        \"tableCellMaxJSONSize\",\n        \"allowCustomJSVisualizations\",\n        \"hidePlotlyModeBar\",\n      ]),\n    });\n\n    return <WrappedComponent {...props} />;\n  };\n}\n\nexport const Renderer = wrapComponentWithSettings(VisRenderer);\nexport const Editor = wrapComponentWithSettings(VisEditor);\n","import { isEqual, map, find, fromPairs } from \"lodash\";\nimport React, { useState, useMemo, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport useQueryResultData from \"@/lib/useQueryResultData\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\nimport Filters, { FiltersType, filterData } from \"@/components/Filters\";\nimport { VisualizationType } from \"@redash/viz/lib\";\nimport { Renderer } from \"@/components/visualizations/visualizationComponents\";\n\nfunction combineFilters(localFilters, globalFilters) {\n  // tiny optimization - to avoid unnecessary updates\n  if (localFilters.length === 0 || globalFilters.length === 0) {\n    return localFilters;\n  }\n\n  return map(localFilters, localFilter => {\n    const globalFilter = find(globalFilters, f => f.name === localFilter.name);\n    if (globalFilter) {\n      return {\n        ...localFilter,\n        current: globalFilter.current,\n      };\n    }\n    return localFilter;\n  });\n}\n\nfunction areFiltersEqual(a, b) {\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  a = fromPairs(map(a, item => [item.name, item]));\n  b = fromPairs(map(b, item => [item.name, item]));\n\n  return isEqual(a, b);\n}\n\nexport default function VisualizationRenderer(props) {\n  const data = useQueryResultData(props.queryResult);\n  const [filters, setFilters] = useState(() => combineFilters(data.filters, props.filters)); // lazy initialization\n  const filtersRef = useRef();\n  filtersRef.current = filters;\n\n  const handleFiltersChange = useImmutableCallback(newFilters => {\n    if (!areFiltersEqual(newFilters, filters)) {\n      setFilters(newFilters);\n      props.onFiltersChange(newFilters);\n    }\n  });\n\n  // Reset local filters when query results updated\n  useEffect(() => {\n    handleFiltersChange(combineFilters(data.filters, props.filters));\n  }, [data.filters, props.filters, handleFiltersChange]);\n\n  // Update local filters when global filters changed.\n  // For correct behavior need to watch only `props.filters` here,\n  // therefore using ref to access current local filters\n  useEffect(() => {\n    handleFiltersChange(combineFilters(filtersRef.current, props.filters));\n  }, [props.filters, handleFiltersChange]);\n\n  const filteredData = useMemo(\n    () => ({\n      columns: data.columns,\n      rows: filterData(data.rows, filters),\n    }),\n    [data, filters]\n  );\n\n  const { showFilters, visualization } = props;\n\n  let options = { ...visualization.options };\n\n  // define pagination size based on context for Table visualization\n  if (visualization.type === \"TABLE\") {\n    options.paginationSize = props.context === \"widget\" ? \"small\" : \"default\";\n  }\n\n  return (\n    <Renderer\n      key={`visualization${visualization.id}`}\n      type={visualization.type}\n      options={options}\n      data={filteredData}\n      visualizationName={visualization.name}\n      addonBefore={showFilters && <Filters filters={filters} onChange={handleFiltersChange} />}\n    />\n  );\n}\n\nVisualizationRenderer.propTypes = {\n  visualization: VisualizationType.isRequired,\n  queryResult: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  showFilters: PropTypes.bool,\n  filters: FiltersType,\n  onFiltersChange: PropTypes.func,\n  context: PropTypes.oneOf([\"query\", \"widget\"]).isRequired,\n};\n\nVisualizationRenderer.defaultProps = {\n  showFilters: true,\n  filters: [],\n  onFiltersChange: () => {},\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"antd/lib/button\";\nimport Modal from \"antd/lib/modal\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport { FiltersType } from \"@/components/Filters\";\nimport VisualizationRenderer from \"@/components/visualizations/VisualizationRenderer\";\nimport VisualizationName from \"@/components/visualizations/VisualizationName\";\n\nfunction ExpandedWidgetDialog({ dialog, widget, filters }) {\n  return (\n    <Modal\n      {...dialog.props}\n      title={\n        <>\n          <VisualizationName visualization={widget.visualization} /> <span>{widget.getQuery().name}</span>\n        </>\n      }\n      width=\"95%\"\n      footer={<Button onClick={dialog.dismiss}>Close</Button>}>\n      <VisualizationRenderer\n        visualization={widget.visualization}\n        queryResult={widget.getQueryResult()}\n        filters={filters}\n        context=\"widget\"\n      />\n    </Modal>\n  );\n}\n\nExpandedWidgetDialog.propTypes = {\n  dialog: DialogPropType.isRequired,\n  widget: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  filters: FiltersType,\n};\n\nExpandedWidgetDialog.defaultProps = {\n  filters: [],\n};\n\nexport default wrapDialog(ExpandedWidgetDialog);\n","/* eslint-disable react/no-multi-comp */\n\nimport { isString, extend, each, has, map, includes, findIndex, find, fromPairs, clone, isEmpty } from \"lodash\";\nimport React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport Select from \"antd/lib/select\";\nimport Table from \"antd/lib/table\";\nimport Popover from \"antd/lib/popover\";\nimport Button from \"antd/lib/button\";\nimport Tag from \"antd/lib/tag\";\nimport Input from \"antd/lib/input\";\nimport Radio from \"antd/lib/radio\";\nimport Form from \"antd/lib/form\";\nimport Tooltip from \"@/components/Tooltip\";\nimport ParameterValueInput from \"@/components/ParameterValueInput\";\nimport { ParameterMappingType } from \"@/services/widget\";\nimport { Parameter, cloneParameter } from \"@/services/parameters\";\nimport HelpTrigger from \"@/components/HelpTrigger\";\n\nimport QuestionCircleFilledIcon from \"@ant-design/icons/QuestionCircleFilled\";\nimport EditOutlinedIcon from \"@ant-design/icons/EditOutlined\";\nimport CloseOutlinedIcon from \"@ant-design/icons/CloseOutlined\";\nimport CheckOutlinedIcon from \"@ant-design/icons/CheckOutlined\";\n\nimport \"./ParameterMappingInput.less\";\n\nexport const MappingType = {\n  DashboardAddNew: \"dashboard-add-new\",\n  DashboardMapToExisting: \"dashboard-map-to-existing\",\n  WidgetLevel: \"widget-level\",\n  StaticValue: \"static-value\",\n};\n\nexport function parameterMappingsToEditableMappings(mappings, parameters, existingParameterNames = []) {\n  return map(mappings, mapping => {\n    const result = extend({}, mapping);\n    const alreadyExists = includes(existingParameterNames, mapping.mapTo);\n    result.param = find(parameters, p => p.name === mapping.name);\n    switch (mapping.type) {\n      case ParameterMappingType.DashboardLevel:\n        result.type = alreadyExists ? MappingType.DashboardMapToExisting : MappingType.DashboardAddNew;\n        result.value = null;\n        break;\n      case ParameterMappingType.StaticValue:\n        result.type = MappingType.StaticValue;\n        result.param = cloneParameter(result.param);\n        result.param.setValue(result.value);\n        break;\n      case ParameterMappingType.WidgetLevel:\n        result.type = MappingType.WidgetLevel;\n        result.value = null;\n        break;\n      // no default\n    }\n    return result;\n  });\n}\n\nexport function editableMappingsToParameterMappings(mappings) {\n  return fromPairs(\n    map(\n      // convert to map\n      mappings,\n      mapping => {\n        const result = extend({}, mapping);\n        switch (mapping.type) {\n          case MappingType.DashboardAddNew:\n            result.type = ParameterMappingType.DashboardLevel;\n            result.value = null;\n            break;\n          case MappingType.DashboardMapToExisting:\n            result.type = ParameterMappingType.DashboardLevel;\n            result.value = null;\n            break;\n          case MappingType.StaticValue:\n            result.type = ParameterMappingType.StaticValue;\n            result.param = cloneParameter(mapping.param);\n            result.param.setValue(result.value);\n            result.value = result.param.value;\n            break;\n          case MappingType.WidgetLevel:\n            result.type = ParameterMappingType.WidgetLevel;\n            result.value = null;\n            break;\n          // no default\n        }\n        delete result.param;\n        return [result.name, result];\n      }\n    )\n  );\n}\n\nexport function synchronizeWidgetTitles(sourceMappings, widgets) {\n  const affectedWidgets = [];\n\n  each(sourceMappings, sourceMapping => {\n    if (sourceMapping.type === ParameterMappingType.DashboardLevel) {\n      each(widgets, widget => {\n        const widgetMappings = widget.options.parameterMappings;\n        each(widgetMappings, widgetMapping => {\n          // check if mapped to the same dashboard-level parameter\n          if (\n            widgetMapping.type === ParameterMappingType.DashboardLevel &&\n            widgetMapping.mapTo === sourceMapping.mapTo\n          ) {\n            // dirty check - update only when needed\n            if (widgetMapping.title !== sourceMapping.title) {\n              widgetMapping.title = sourceMapping.title;\n              affectedWidgets.push(widget);\n            }\n          }\n        });\n      });\n    }\n  });\n\n  return affectedWidgets;\n}\n\nexport class ParameterMappingInput extends React.Component {\n  static propTypes = {\n    mapping: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n    existingParamNames: PropTypes.arrayOf(PropTypes.string),\n    onChange: PropTypes.func,\n    inputError: PropTypes.string,\n  };\n\n  static defaultProps = {\n    mapping: {},\n    existingParamNames: [],\n    onChange: () => {},\n    inputError: null,\n  };\n\n  formItemProps = {\n    labelCol: { span: 5 },\n    wrapperCol: { span: 16 },\n    className: \"form-item\",\n  };\n\n  updateSourceType = type => {\n    let {\n      mapping: { mapTo },\n    } = this.props;\n    const { existingParamNames } = this.props;\n\n    // if mapped name doesn't already exists\n    // default to first select option\n    if (type === MappingType.DashboardMapToExisting && !includes(existingParamNames, mapTo)) {\n      mapTo = existingParamNames[0];\n    }\n\n    this.updateParamMapping({ type, mapTo });\n  };\n\n  updateParamMapping = update => {\n    const { onChange, mapping } = this.props;\n    const newMapping = extend({}, mapping, update);\n    if (newMapping.value !== mapping.value) {\n      newMapping.param = cloneParameter(newMapping.param);\n      newMapping.param.setValue(newMapping.value);\n    }\n    if (has(update, \"type\")) {\n      if (update.type === MappingType.StaticValue) {\n        newMapping.value = newMapping.param.value;\n      } else {\n        newMapping.value = null;\n      }\n    }\n    onChange(newMapping);\n  };\n\n  renderMappingTypeSelector() {\n    const noExisting = isEmpty(this.props.existingParamNames);\n    return (\n      <Radio.Group value={this.props.mapping.type} onChange={e => this.updateSourceType(e.target.value)}>\n        <Radio className=\"radio\" value={MappingType.DashboardAddNew} data-test=\"NewDashboardParameterOption\">\n          New dashboard parameter\n        </Radio>\n        <Radio className=\"radio\" value={MappingType.DashboardMapToExisting} disabled={noExisting}>\n          Existing dashboard parameter{\" \"}\n          {noExisting ? (\n            <Tooltip title=\"There are no dashboard parameters corresponding to this data type\">\n              <QuestionCircleFilledIcon />\n            </Tooltip>\n          ) : null}\n        </Radio>\n        <Radio className=\"radio\" value={MappingType.WidgetLevel} data-test=\"WidgetParameterOption\">\n          Widget parameter\n        </Radio>\n        <Radio className=\"radio\" value={MappingType.StaticValue} data-test=\"StaticValueOption\">\n          Static value\n        </Radio>\n      </Radio.Group>\n    );\n  }\n\n  renderDashboardAddNew() {\n    const {\n      mapping: { mapTo },\n    } = this.props;\n    return (\n      <Input\n        value={mapTo}\n        aria-label=\"Parameter name (key)\"\n        onChange={e => this.updateParamMapping({ mapTo: e.target.value })}\n      />\n    );\n  }\n\n  renderDashboardMapToExisting() {\n    const { mapping, existingParamNames } = this.props;\n    const options = map(existingParamNames, paramName => ({ label: paramName, value: paramName }));\n\n    return <Select value={mapping.mapTo} onChange={mapTo => this.updateParamMapping({ mapTo })} options={options} />;\n  }\n\n  renderStaticValue() {\n    const { mapping } = this.props;\n    return (\n      <ParameterValueInput\n        type={mapping.param.type}\n        value={mapping.param.normalizedValue}\n        enumOptions={mapping.param.enumOptions}\n        queryId={mapping.param.queryId}\n        parameter={mapping.param}\n        onSelect={value => this.updateParamMapping({ value })}\n      />\n    );\n  }\n\n  renderInputBlock() {\n    const { mapping } = this.props;\n    switch (mapping.type) {\n      case MappingType.DashboardAddNew:\n        return [\"Key\", \"Enter a new parameter keyword\", this.renderDashboardAddNew()];\n      case MappingType.DashboardMapToExisting:\n        return [\"Key\", \"Select from a list of existing parameters\", this.renderDashboardMapToExisting()];\n      case MappingType.StaticValue:\n        return [\"Value\", null, this.renderStaticValue()];\n      default:\n        return [];\n    }\n  }\n\n  render() {\n    const { inputError } = this.props;\n    const [label, help, input] = this.renderInputBlock();\n\n    return (\n      <Form layout=\"horizontal\">\n        <Form.Item label=\"Source\" {...this.formItemProps}>\n          {this.renderMappingTypeSelector()}\n        </Form.Item>\n        <Form.Item\n          style={{ height: 60, visibility: input ? \"visible\" : \"hidden\" }}\n          label={label}\n          {...this.formItemProps}\n          validateStatus={inputError ? \"error\" : \"\"}\n          help={inputError || help} // empty space so line doesn't collapse\n        >\n          {input}\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nclass MappingEditor extends React.Component {\n  static propTypes = {\n    mapping: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n    existingParamNames: PropTypes.arrayOf(PropTypes.string).isRequired,\n    onChange: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false,\n      mapping: clone(this.props.mapping),\n      inputError: null,\n    };\n  }\n\n  onVisibleChange = visible => {\n    if (visible) this.show();\n    else this.hide();\n  };\n\n  onChange = mapping => {\n    let inputError = null;\n\n    if (mapping.type === MappingType.DashboardAddNew) {\n      if (isEmpty(mapping.mapTo)) {\n        inputError = \"Keyword must have a value\";\n      } else if (includes(this.props.existingParamNames, mapping.mapTo)) {\n        inputError = \"A parameter with this name already exists\";\n      }\n    }\n\n    this.setState({ mapping, inputError });\n  };\n\n  save = () => {\n    this.props.onChange(this.props.mapping, this.state.mapping);\n    this.hide();\n  };\n\n  show = () => {\n    this.setState({\n      visible: true,\n      mapping: clone(this.props.mapping), // restore original state\n    });\n  };\n\n  hide = () => {\n    this.setState({ visible: false });\n  };\n\n  renderContent() {\n    const { mapping, inputError } = this.state;\n\n    return (\n      <div className=\"parameter-mapping-editor\" data-test=\"EditParamMappingPopover\">\n        <header>\n          Edit Source and Value <HelpTrigger type=\"VALUE_SOURCE_OPTIONS\" />\n        </header>\n        <ParameterMappingInput\n          mapping={mapping}\n          existingParamNames={this.props.existingParamNames}\n          onChange={this.onChange}\n          inputError={inputError}\n        />\n        <footer>\n          <Button onClick={this.hide}>Cancel</Button>\n          <Button onClick={this.save} disabled={!!inputError} type=\"primary\">\n            OK\n          </Button>\n        </footer>\n      </div>\n    );\n  }\n\n  render() {\n    const { visible, mapping } = this.state;\n    return (\n      <Popover\n        placement=\"left\"\n        trigger=\"click\"\n        content={this.renderContent()}\n        visible={visible}\n        onVisibleChange={this.onVisibleChange}>\n        <Button size=\"small\" type=\"dashed\" data-test={`EditParamMappingButton-${mapping.param.name}`}>\n          <EditOutlinedIcon />\n        </Button>\n      </Popover>\n    );\n  }\n}\n\nclass TitleEditor extends React.Component {\n  static propTypes = {\n    existingParams: PropTypes.arrayOf(PropTypes.object),\n    mapping: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n    onChange: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    existingParams: [],\n  };\n\n  state = {\n    showPopup: false,\n    title: \"\", // will be set on editing\n  };\n\n  onPopupVisibleChange = showPopup => {\n    this.setState({\n      showPopup,\n      title: showPopup ? this.getMappingTitle() : \"\",\n    });\n  };\n\n  onEditingTitleChange = event => {\n    this.setState({ title: event.target.value });\n  };\n\n  getMappingTitle() {\n    let { mapping } = this.props;\n\n    if (isString(mapping.title) && mapping.title !== \"\") {\n      return mapping.title;\n    }\n\n    // if mapped to dashboard, find source param and return it's title\n    if (mapping.type === MappingType.DashboardMapToExisting) {\n      const source = find(this.props.existingParams, { name: mapping.mapTo });\n      if (source) {\n        mapping = source;\n      }\n    }\n\n    return mapping.title || mapping.param.title;\n  }\n\n  save = () => {\n    const newMapping = extend({}, this.props.mapping, { title: this.state.title });\n    this.props.onChange(newMapping);\n    this.hide();\n  };\n\n  hide = () => {\n    this.setState({ showPopup: false });\n  };\n\n  renderPopover() {\n    const {\n      param: { title: paramTitle },\n    } = this.props.mapping;\n\n    return (\n      <div className=\"parameter-mapping-title-editor\">\n        <Input\n          size=\"small\"\n          value={this.state.title}\n          placeholder={paramTitle}\n          aria-label=\"Edit parameter title\"\n          onChange={this.onEditingTitleChange}\n          onPressEnter={this.save}\n          maxLength={100}\n          autoFocus\n        />\n        <Button size=\"small\" type=\"dashed\" onClick={this.hide}>\n          <CloseOutlinedIcon />\n        </Button>\n        <Button size=\"small\" type=\"dashed\" onClick={this.save}>\n          <CheckOutlinedIcon />\n        </Button>\n      </div>\n    );\n  }\n\n  renderEditButton() {\n    const { mapping } = this.props;\n    if (mapping.type === MappingType.StaticValue) {\n      return (\n        <Tooltip placement=\"right\" title=\"Titles for static values don't appear in widgets\">\n          {/* eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex */}\n          <span tabIndex={0}>\n            <i className=\"fa fa-eye-slash\" aria-hidden=\"true\" />\n          </span>\n        </Tooltip>\n      );\n    }\n    return (\n      <Popover\n        placement=\"right\"\n        trigger=\"click\"\n        content={this.renderPopover()}\n        visible={this.state.showPopup}\n        onVisibleChange={this.onPopupVisibleChange}>\n        <Button size=\"small\" type=\"dashed\">\n          <EditOutlinedIcon />\n        </Button>\n      </Popover>\n    );\n  }\n\n  render() {\n    const { mapping } = this.props;\n    // static value are non-editable hence disabled\n    const disabled = mapping.type === MappingType.StaticValue;\n\n    return (\n      <div className={classNames(\"parameter-mapping-title\", { disabled })}>\n        <span className=\"text\">{this.getMappingTitle()}</span>\n        {this.renderEditButton()}\n      </div>\n    );\n  }\n}\n\nexport class ParameterMappingListInput extends React.Component {\n  static propTypes = {\n    mappings: PropTypes.arrayOf(PropTypes.object),\n    existingParams: PropTypes.arrayOf(PropTypes.object),\n    onChange: PropTypes.func,\n  };\n\n  static defaultProps = {\n    mappings: [],\n    existingParams: [],\n    onChange: () => {},\n  };\n\n  static getStringValue(value) {\n    // null\n    if (!value) {\n      return \"\";\n    }\n\n    // range\n    if (value instanceof Object && \"start\" in value && \"end\" in value) {\n      return `${value.start} ~ ${value.end}`;\n    }\n\n    // just to be safe, array or object\n    if (typeof value === \"object\") {\n      return map(value, v => this.getStringValue(v)).join(\", \");\n    }\n\n    // rest\n    return value.toString();\n  }\n\n  static getDefaultValue(mapping, existingParams) {\n    const { type, mapTo, name } = mapping;\n    let { param } = mapping;\n\n    // if mapped to another param, swap 'em\n    if (type === MappingType.DashboardMapToExisting && mapTo !== name) {\n      const mappedTo = find(existingParams, { name: mapTo });\n      if (mappedTo) {\n        // just being safe\n        param = mappedTo;\n      }\n\n      // static type is different since it's fed param.normalizedValue\n    } else if (type === MappingType.StaticValue) {\n      param = cloneParameter(param).setValue(mapping.value);\n    }\n\n    let value = Parameter.getExecutionValue(param);\n\n    // in case of dynamic value display the name instead of value\n    if (param.hasDynamicValue) {\n      value = param.normalizedValue.name;\n    }\n\n    return this.getStringValue(value);\n  }\n\n  static getSourceTypeLabel({ type, mapTo }) {\n    switch (type) {\n      case MappingType.DashboardAddNew:\n      case MappingType.DashboardMapToExisting:\n        return (\n          <Fragment>\n            Dashboard <Tag className=\"tag\">{mapTo}</Tag>\n          </Fragment>\n        );\n      case MappingType.WidgetLevel:\n        return \"Widget parameter\";\n      case MappingType.StaticValue:\n        return \"Static value\";\n      default:\n        return \"\"; // won't happen (typescript-ftw)\n    }\n  }\n\n  updateParamMapping(oldMapping, newMapping) {\n    const mappings = [...this.props.mappings];\n    const index = findIndex(mappings, oldMapping);\n    if (index >= 0) {\n      // This should be the only possible case, but need to handle `else` too\n      mappings[index] = newMapping;\n    } else {\n      mappings.push(newMapping);\n    }\n    this.props.onChange(mappings);\n  }\n\n  render() {\n    const { existingParams } = this.props; // eslint-disable-line react/prop-types\n    const dataSource = this.props.mappings.map(mapping => ({ mapping }));\n\n    return (\n      <div className=\"parameters-mapping-list\">\n        <Table dataSource={dataSource} size=\"middle\" pagination={false} rowKey={(record, idx) => `row${idx}`}>\n          <Table.Column\n            title=\"Title\"\n            dataIndex=\"mapping\"\n            key=\"title\"\n            render={mapping => (\n              <TitleEditor\n                existingParams={existingParams}\n                mapping={mapping}\n                onChange={newMapping => this.updateParamMapping(mapping, newMapping)}\n              />\n            )}\n          />\n          <Table.Column\n            title=\"Keyword\"\n            dataIndex=\"mapping\"\n            key=\"keyword\"\n            className=\"keyword\"\n            render={mapping => <code>{`{{ ${mapping.name} }}`}</code>}\n          />\n          <Table.Column\n            title=\"Default Value\"\n            dataIndex=\"mapping\"\n            key=\"value\"\n            render={mapping => this.constructor.getDefaultValue(mapping, this.props.existingParams)}\n          />\n          <Table.Column\n            title=\"Value Source\"\n            dataIndex=\"mapping\"\n            key=\"source\"\n            render={mapping => {\n              const existingParamsNames = existingParams\n                .filter(({ type }) => type === mapping.param.type) // exclude mismatching param types\n                .map(({ name }) => name); // keep names only\n\n              return (\n                <Fragment>\n                  {this.constructor.getSourceTypeLabel(mapping)}{\" \"}\n                  <MappingEditor\n                    mapping={mapping}\n                    existingParamNames={existingParamsNames}\n                    onChange={(oldMapping, newMapping) => this.updateParamMapping(oldMapping, newMapping)}\n                  />\n                </Fragment>\n              );\n            }}\n          />\n        </Table>\n      </div>\n    );\n  }\n}\n","import { isMatch, map, find, sortBy } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Modal from \"antd/lib/modal\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport {\n  MappingType,\n  ParameterMappingListInput,\n  parameterMappingsToEditableMappings,\n  editableMappingsToParameterMappings,\n  synchronizeWidgetTitles,\n} from \"@/components/ParameterMappingInput\";\nimport notification from \"@/services/notification\";\n\nexport function getParamValuesSnapshot(mappings, dashboardParameters) {\n  return map(\n    sortBy(mappings, m => m.name),\n    m => {\n      let param;\n      switch (m.type) {\n        case MappingType.StaticValue:\n          return [m.name, m.value];\n        case MappingType.WidgetLevel:\n          return [m.name, m.param.value];\n        case MappingType.DashboardAddNew:\n        case MappingType.DashboardMapToExisting:\n          param = find(dashboardParameters, p => p.name === m.mapTo);\n          return [m.name, param ? param.value : null];\n        // no default\n      }\n    }\n  );\n}\n\nclass EditParameterMappingsDialog extends React.Component {\n  static propTypes = {\n    dashboard: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n    widget: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n    dialog: DialogPropType.isRequired,\n  };\n\n  originalParamValuesSnapshot = null;\n\n  constructor(props) {\n    super(props);\n\n    const parameterMappings = parameterMappingsToEditableMappings(\n      props.widget.options.parameterMappings,\n      props.widget.query.getParametersDefs(),\n      map(this.props.dashboard.getParametersDefs(), p => p.name)\n    );\n\n    this.originalParamValuesSnapshot = getParamValuesSnapshot(\n      parameterMappings,\n      this.props.dashboard.getParametersDefs()\n    );\n\n    this.state = {\n      saveInProgress: false,\n      parameterMappings,\n    };\n  }\n\n  saveWidget() {\n    const widget = this.props.widget;\n\n    this.setState({ saveInProgress: true });\n\n    const newMappings = editableMappingsToParameterMappings(this.state.parameterMappings);\n    widget.options.parameterMappings = newMappings;\n\n    const valuesChanged = !isMatch(\n      this.originalParamValuesSnapshot,\n      getParamValuesSnapshot(this.state.parameterMappings, this.props.dashboard.getParametersDefs())\n    );\n\n    const widgetsToSave = [\n      widget,\n      ...synchronizeWidgetTitles(widget.options.parameterMappings, this.props.dashboard.widgets),\n    ];\n\n    Promise.all(map(widgetsToSave, w => w.save()))\n      .then(() => {\n        this.props.dialog.close(valuesChanged);\n      })\n      .catch(() => {\n        notification.error(\"Widget cannot be updated\");\n      })\n      .finally(() => {\n        this.setState({ saveInProgress: false });\n      });\n  }\n\n  updateParamMappings(parameterMappings) {\n    this.setState({ parameterMappings });\n  }\n\n  render() {\n    const { dialog } = this.props;\n    return (\n      <Modal\n        {...dialog.props}\n        title=\"Parameters\"\n        onOk={() => this.saveWidget()}\n        okButtonProps={{ loading: this.state.saveInProgress }}\n        width={700}>\n        {this.state.parameterMappings.length > 0 && (\n          <ParameterMappingListInput\n            mappings={this.state.parameterMappings}\n            existingParams={this.props.dashboard.getParametersDefs()}\n            onChange={mappings => this.updateParamMappings(mappings)}\n          />\n        )}\n      </Modal>\n    );\n  }\n}\n\nexport default wrapDialog(EditParameterMappingsDialog);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\nimport { isEmpty } from \"lodash\";\nimport Dropdown from \"antd/lib/dropdown\";\nimport Modal from \"antd/lib/modal\";\nimport Menu from \"antd/lib/menu\";\nimport recordEvent from \"@/services/recordEvent\";\nimport { Moment } from \"@/components/proptypes\";\nimport PlainButton from \"@/components/PlainButton\";\n\nimport \"./Widget.less\";\n\nfunction WidgetDropdownButton({ extraOptions, showDeleteOption, onDelete }) {\n  const WidgetMenu = (\n    <Menu data-test=\"WidgetDropdownButtonMenu\">\n      {extraOptions}\n      {showDeleteOption && extraOptions && <Menu.Divider />}\n      {showDeleteOption && <Menu.Item onClick={onDelete}>Remove from Dashboard</Menu.Item>}\n    </Menu>\n  );\n\n  return (\n    <div className=\"widget-menu-regular\">\n      <Dropdown overlay={WidgetMenu} placement=\"bottomRight\" trigger={[\"click\"]}>\n        <PlainButton className=\"action p-l-15 p-r-15\" data-test=\"WidgetDropdownButton\" aria-label=\"More options\">\n          <i className=\"zmdi zmdi-more-vert\" aria-hidden=\"true\" />\n        </PlainButton>\n      </Dropdown>\n    </div>\n  );\n}\n\nWidgetDropdownButton.propTypes = {\n  extraOptions: PropTypes.node,\n  showDeleteOption: PropTypes.bool,\n  onDelete: PropTypes.func,\n};\n\nWidgetDropdownButton.defaultProps = {\n  extraOptions: null,\n  showDeleteOption: false,\n  onDelete: () => {},\n};\n\nfunction WidgetDeleteButton({ onClick }) {\n  return (\n    <div className=\"widget-menu-remove\">\n      <PlainButton\n        className=\"action\"\n        title=\"Remove From Dashboard\"\n        onClick={onClick}\n        data-test=\"WidgetDeleteButton\"\n        aria-label=\"Close\">\n        <i className=\"zmdi zmdi-close\" aria-hidden=\"true\" />\n      </PlainButton>\n    </div>\n  );\n}\n\nWidgetDeleteButton.propTypes = { onClick: PropTypes.func };\nWidgetDeleteButton.defaultProps = { onClick: () => {} };\n\nclass Widget extends React.Component {\n  static propTypes = {\n    widget: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n    className: PropTypes.string,\n    children: PropTypes.node,\n    header: PropTypes.node,\n    footer: PropTypes.node,\n    canEdit: PropTypes.bool,\n    isPublic: PropTypes.bool,\n    refreshStartedAt: Moment,\n    menuOptions: PropTypes.node,\n    tileProps: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n    onDelete: PropTypes.func,\n  };\n\n  static defaultProps = {\n    className: \"\",\n    children: null,\n    header: null,\n    footer: null,\n    canEdit: false,\n    isPublic: false,\n    refreshStartedAt: null,\n    menuOptions: null,\n    tileProps: {},\n    onDelete: () => {},\n  };\n\n  componentDidMount() {\n    const { widget } = this.props;\n    recordEvent(\"view\", \"widget\", widget.id);\n  }\n\n  deleteWidget = () => {\n    const { widget, onDelete } = this.props;\n\n    Modal.confirm({\n      title: \"Delete Widget\",\n      content: \"Are you sure you want to remove this widget from the dashboard?\",\n      okText: \"Delete\",\n      okType: \"danger\",\n      onOk: () => widget.delete().then(onDelete),\n      maskClosable: true,\n      autoFocusButton: null,\n    });\n  };\n\n  render() {\n    const { className, children, header, footer, canEdit, isPublic, menuOptions, tileProps } = this.props;\n    const showDropdownButton = !isPublic && (canEdit || !isEmpty(menuOptions));\n    return (\n      <div className=\"widget-wrapper\">\n        <div className={cx(\"tile body-container\", className)} {...tileProps}>\n          <div className=\"widget-actions\">\n            {showDropdownButton && (\n              <WidgetDropdownButton\n                extraOptions={menuOptions}\n                showDeleteOption={canEdit}\n                onDelete={this.deleteWidget}\n              />\n            )}\n            {canEdit && <WidgetDeleteButton onClick={this.deleteWidget} />}\n          </div>\n          <div className=\"body-row widget-header\">{header}</div>\n          {children}\n          {footer && <div className=\"body-row tile__bottom-control\">{footer}</div>}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Widget;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { compact, isEmpty, invoke, map } from \"lodash\";\nimport { markdown } from \"markdown\";\nimport cx from \"classnames\";\nimport Menu from \"antd/lib/menu\";\nimport HtmlContent from \"@redash/viz/lib/components/HtmlContent\";\nimport { currentUser } from \"@/services/auth\";\nimport recordEvent from \"@/services/recordEvent\";\nimport { formatDateTime } from \"@/lib/utils\";\nimport Link from \"@/components/Link\";\nimport Parameters from \"@/components/Parameters\";\nimport TimeAgo from \"@/components/TimeAgo\";\nimport Timer from \"@/components/Timer\";\nimport { Moment } from \"@/components/proptypes\";\nimport QueryLink from \"@/components/QueryLink\";\nimport { FiltersType } from \"@/components/Filters\";\nimport PlainButton from \"@/components/PlainButton\";\nimport ExpandedWidgetDialog from \"@/components/dashboards/ExpandedWidgetDialog\";\nimport EditParameterMappingsDialog from \"@/components/dashboards/EditParameterMappingsDialog\";\nimport VisualizationRenderer from \"@/components/visualizations/VisualizationRenderer\";\n\nimport Widget from \"./Widget\";\n\nfunction visualizationWidgetMenuOptions({ widget, canEditDashboard, onParametersEdit }) {\n  const canViewQuery = currentUser.hasPermission(\"view_query\");\n  const canEditParameters = canEditDashboard && !isEmpty(invoke(widget, \"query.getParametersDefs\"));\n  const widgetQueryResult = widget.getQueryResult();\n  const isQueryResultEmpty = !widgetQueryResult || !widgetQueryResult.isEmpty || widgetQueryResult.isEmpty();\n\n  const downloadLink = fileType => widgetQueryResult.getLink(widget.getQuery().id, fileType);\n  const downloadName = fileType => widgetQueryResult.getName(widget.getQuery().name, fileType);\n  return compact([\n    <Menu.Item key=\"download_csv\" disabled={isQueryResultEmpty}>\n      {!isQueryResultEmpty ? (\n        <Link href={downloadLink(\"csv\")} download={downloadName(\"csv\")} target=\"_self\">\n          Download as CSV File\n        </Link>\n      ) : (\n        \"Download as CSV File\"\n      )}\n    </Menu.Item>,\n    <Menu.Item key=\"download_tsv\" disabled={isQueryResultEmpty}>\n      {!isQueryResultEmpty ? (\n        <Link href={downloadLink(\"tsv\")} download={downloadName(\"tsv\")} target=\"_self\">\n          Download as TSV File\n        </Link>\n      ) : (\n        \"Download as TSV File\"\n      )}\n    </Menu.Item>,\n    <Menu.Item key=\"download_excel\" disabled={isQueryResultEmpty}>\n      {!isQueryResultEmpty ? (\n        <Link href={downloadLink(\"xlsx\")} download={downloadName(\"xlsx\")} target=\"_self\">\n          Download as Excel File\n        </Link>\n      ) : (\n        \"Download as Excel File\"\n      )}\n    </Menu.Item>,\n    (canViewQuery || canEditParameters) && <Menu.Divider key=\"divider\" />,\n    canViewQuery && (\n      <Menu.Item key=\"view_query\">\n        <Link href={widget.getQuery().getUrl(true, widget.visualization.id)}>View Query</Link>\n      </Menu.Item>\n    ),\n    canEditParameters && (\n      <Menu.Item key=\"edit_parameters\" onClick={onParametersEdit}>\n        Edit Parameters\n      </Menu.Item>\n    ),\n  ]);\n}\n\nfunction RefreshIndicator({ refreshStartedAt }) {\n  return (\n    <div className=\"refresh-indicator\">\n      <div className=\"refresh-icon\">\n        <i className=\"zmdi zmdi-refresh zmdi-hc-spin\" aria-hidden=\"true\" />\n        <span className=\"sr-only\">Refreshing...</span>\n      </div>\n      <Timer from={refreshStartedAt} />\n    </div>\n  );\n}\n\nRefreshIndicator.propTypes = { refreshStartedAt: Moment };\nRefreshIndicator.defaultProps = { refreshStartedAt: null };\n\nfunction VisualizationWidgetHeader({\n  widget,\n  refreshStartedAt,\n  parameters,\n  isEditing,\n  onParametersUpdate,\n  onParametersEdit,\n}) {\n  const canViewQuery = currentUser.hasPermission(\"view_query\");\n\n  return (\n    <>\n      <RefreshIndicator refreshStartedAt={refreshStartedAt} />\n      <div className=\"t-header widget clearfix\">\n        <div className=\"th-title\">\n          <p>\n            <QueryLink query={widget.getQuery()} visualization={widget.visualization} readOnly={!canViewQuery} />\n          </p>\n          {!isEmpty(widget.getQuery().description) && (\n            <HtmlContent className=\"text-muted markdown query--description\">\n              {markdown.toHTML(widget.getQuery().description || \"\")}\n            </HtmlContent>\n          )}\n        </div>\n      </div>\n      {!isEmpty(parameters) && (\n        <div className=\"m-b-10\">\n          <Parameters\n            parameters={parameters}\n            sortable={isEditing}\n            appendSortableToParent={false}\n            onValuesChange={onParametersUpdate}\n            onParametersEdit={onParametersEdit}\n          />\n        </div>\n      )}\n    </>\n  );\n}\n\nVisualizationWidgetHeader.propTypes = {\n  widget: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  refreshStartedAt: Moment,\n  parameters: PropTypes.arrayOf(PropTypes.object),\n  isEditing: PropTypes.bool,\n  onParametersUpdate: PropTypes.func,\n  onParametersEdit: PropTypes.func,\n};\n\nVisualizationWidgetHeader.defaultProps = {\n  refreshStartedAt: null,\n  onParametersUpdate: () => {},\n  onParametersEdit: () => {},\n  isEditing: false,\n  parameters: [],\n};\n\nfunction VisualizationWidgetFooter({ widget, isPublic, onRefresh, onExpand }) {\n  const widgetQueryResult = widget.getQueryResult();\n  const updatedAt = invoke(widgetQueryResult, \"getUpdatedAt\");\n  const [refreshClickButtonId, setRefreshClickButtonId] = useState();\n\n  const refreshWidget = buttonId => {\n    if (!refreshClickButtonId) {\n      setRefreshClickButtonId(buttonId);\n      onRefresh().finally(() => setRefreshClickButtonId(null));\n    }\n  };\n\n  return widgetQueryResult ? (\n    <>\n      <span>\n        {!isPublic && !!widgetQueryResult && (\n          <PlainButton\n            className=\"refresh-button hidden-print btn btn-sm btn-default btn-transparent\"\n            onClick={() => refreshWidget(1)}\n            data-test=\"RefreshButton\">\n            <i className={cx(\"zmdi zmdi-refresh\", { \"zmdi-hc-spin\": refreshClickButtonId === 1 })} aria-hidden=\"true\" />\n            <span className=\"sr-only\">\n              {refreshClickButtonId === 1 ? \"Refreshing, please wait. \" : \"Press to refresh. \"}\n            </span>{\" \"}\n            <TimeAgo date={updatedAt} />\n          </PlainButton>\n        )}\n        <span className=\"visible-print\">\n          <i className=\"zmdi zmdi-time-restore\" aria-hidden=\"true\" /> {formatDateTime(updatedAt)}\n        </span>\n        {isPublic && (\n          <span className=\"small hidden-print\">\n            <i className=\"zmdi zmdi-time-restore\" aria-hidden=\"true\" /> <TimeAgo date={updatedAt} />\n          </span>\n        )}\n      </span>\n      <span>\n        {!isPublic && (\n          <PlainButton\n            className=\"btn btn-sm btn-default hidden-print btn-transparent btn__refresh\"\n            onClick={() => refreshWidget(2)}>\n            <i className={cx(\"zmdi zmdi-refresh\", { \"zmdi-hc-spin\": refreshClickButtonId === 2 })} aria-hidden=\"true\" />\n            <span className=\"sr-only\">\n              {refreshClickButtonId === 2 ? \"Refreshing, please wait.\" : \"Press to refresh.\"}\n            </span>\n          </PlainButton>\n        )}\n        <PlainButton className=\"btn btn-sm btn-default hidden-print btn-transparent btn__refresh\" onClick={onExpand}>\n          <i className=\"zmdi zmdi-fullscreen\" aria-hidden=\"true\" />\n        </PlainButton>\n      </span>\n    </>\n  ) : null;\n}\n\nVisualizationWidgetFooter.propTypes = {\n  widget: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  isPublic: PropTypes.bool,\n  onRefresh: PropTypes.func.isRequired,\n  onExpand: PropTypes.func.isRequired,\n};\n\nVisualizationWidgetFooter.defaultProps = { isPublic: false };\n\nclass VisualizationWidget extends React.Component {\n  static propTypes = {\n    widget: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n    dashboard: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n    filters: FiltersType,\n    isPublic: PropTypes.bool,\n    isLoading: PropTypes.bool,\n    canEdit: PropTypes.bool,\n    isEditing: PropTypes.bool,\n    onLoad: PropTypes.func,\n    onRefresh: PropTypes.func,\n    onDelete: PropTypes.func,\n    onParameterMappingsChange: PropTypes.func,\n  };\n\n  static defaultProps = {\n    filters: [],\n    isPublic: false,\n    isLoading: false,\n    canEdit: false,\n    isEditing: false,\n    onLoad: () => {},\n    onRefresh: () => {},\n    onDelete: () => {},\n    onParameterMappingsChange: () => {},\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      localParameters: props.widget.getLocalParameters(),\n      localFilters: props.filters,\n    };\n  }\n\n  componentDidMount() {\n    const { widget, onLoad } = this.props;\n    recordEvent(\"view\", \"query\", widget.visualization.query.id, { dashboard: true });\n    recordEvent(\"view\", \"visualization\", widget.visualization.id, { dashboard: true });\n    onLoad();\n  }\n\n  onLocalFiltersChange = localFilters => {\n    this.setState({ localFilters });\n  };\n\n  expandWidget = () => {\n    ExpandedWidgetDialog.showModal({ widget: this.props.widget, filters: this.state.localFilters });\n  };\n\n  editParameterMappings = () => {\n    const { widget, dashboard, onRefresh, onParameterMappingsChange } = this.props;\n    EditParameterMappingsDialog.showModal({\n      dashboard,\n      widget,\n    }).onClose(valuesChanged => {\n      // refresh widget if any parameter value has been updated\n      if (valuesChanged) {\n        onRefresh();\n      }\n      onParameterMappingsChange();\n      this.setState({ localParameters: widget.getLocalParameters() });\n    });\n  };\n\n  renderVisualization() {\n    const { widget, filters } = this.props;\n    const widgetQueryResult = widget.getQueryResult();\n    const widgetStatus = widgetQueryResult && widgetQueryResult.getStatus();\n    switch (widgetStatus) {\n      case \"failed\":\n        return (\n          <div className=\"body-row-auto scrollbox\">\n            {widgetQueryResult.getError() && (\n              <div className=\"alert alert-danger m-5\">\n                Error running query: <strong>{widgetQueryResult.getError()}</strong>\n              </div>\n            )}\n          </div>\n        );\n      case \"done\":\n        return (\n          <div className=\"body-row-auto scrollbox\">\n            <VisualizationRenderer\n              visualization={widget.visualization}\n              queryResult={widgetQueryResult}\n              filters={filters}\n              onFiltersChange={this.onLocalFiltersChange}\n              context=\"widget\"\n            />\n          </div>\n        );\n      default:\n        return (\n          <div\n            className=\"body-row-auto spinner-container\"\n            role=\"status\"\n            aria-live=\"polite\"\n            aria-relevant=\"additions removals\">\n            <div className=\"spinner\">\n              <i className=\"zmdi zmdi-refresh zmdi-hc-spin zmdi-hc-5x\" aria-hidden=\"true\" />\n              <span className=\"sr-only\">Loading...</span>\n            </div>\n          </div>\n        );\n    }\n  }\n\n  render() {\n    const { widget, isLoading, isPublic, canEdit, isEditing, onRefresh } = this.props;\n    const { localParameters } = this.state;\n    const widgetQueryResult = widget.getQueryResult();\n    const isRefreshing = isLoading && !!(widgetQueryResult && widgetQueryResult.getStatus());\n    const onParametersEdit = parameters => {\n      const paramOrder = map(parameters, \"name\");\n      widget.options.paramOrder = paramOrder;\n      widget.save(\"options\", { paramOrder });\n    };\n\n    return (\n      <Widget\n        {...this.props}\n        className=\"widget-visualization\"\n        menuOptions={visualizationWidgetMenuOptions({\n          widget,\n          canEditDashboard: canEdit,\n          onParametersEdit: this.editParameterMappings,\n        })}\n        header={\n          <VisualizationWidgetHeader\n            widget={widget}\n            refreshStartedAt={isRefreshing ? widget.refreshStartedAt : null}\n            parameters={localParameters}\n            isEditing={isEditing}\n            onParametersUpdate={onRefresh}\n            onParametersEdit={onParametersEdit}\n          />\n        }\n        footer={\n          <VisualizationWidgetFooter\n            widget={widget}\n            isPublic={isPublic}\n            onRefresh={onRefresh}\n            onExpand={this.expandWidget}\n          />\n        }\n        tileProps={{ \"data-refreshing\": isRefreshing }}>\n        {this.renderVisualization()}\n      </Widget>\n    );\n  }\n}\n\nexport default VisualizationWidget;\n","import { toString } from \"lodash\";\nimport { markdown } from \"markdown\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDebouncedCallback } from \"use-debounce\";\nimport Modal from \"antd/lib/modal\";\nimport Input from \"antd/lib/input\";\nimport Tooltip from \"@/components/Tooltip\";\nimport Divider from \"antd/lib/divider\";\nimport Link from \"@/components/Link\";\nimport HtmlContent from \"@redash/viz/lib/components/HtmlContent\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport notification from \"@/services/notification\";\n\nimport \"./TextboxDialog.less\";\n\nfunction TextboxDialog({ dialog, isNew, ...props }) {\n  const [text, setText] = useState(toString(props.text));\n  const [preview, setPreview] = useState(null);\n\n  useEffect(() => {\n    setText(props.text);\n    setPreview(markdown.toHTML(props.text));\n  }, [props.text]);\n\n  const [updatePreview] = useDebouncedCallback(() => {\n    setPreview(markdown.toHTML(text));\n  }, 200);\n\n  const handleInputChange = useCallback(\n    event => {\n      setText(event.target.value);\n      updatePreview();\n    },\n    [updatePreview]\n  );\n\n  const saveWidget = useCallback(() => {\n    dialog.close(text).catch(() => {\n      notification.error(isNew ? \"Widget could not be added\" : \"Widget could not be saved\");\n    });\n  }, [dialog, isNew, text]);\n\n  const confirmDialogDismiss = useCallback(() => {\n    const originalText = props.text;\n    if (text !== originalText) {\n      Modal.confirm({\n        title: \"Quit editing?\",\n        content: \"Changes you made so far will not be saved. Are you sure?\",\n        okText: \"Yes, quit\",\n        okType: \"danger\",\n        onOk: () => dialog.dismiss(),\n        maskClosable: true,\n        autoFocusButton: null,\n        style: { top: 170 },\n      });\n    } else {\n      dialog.dismiss();\n    }\n  }, [dialog, text, props.text]);\n\n  return (\n    <Modal\n      {...dialog.props}\n      title={isNew ? \"Add Textbox\" : \"Edit Textbox\"}\n      onOk={saveWidget}\n      onCancel={confirmDialogDismiss}\n      okText={isNew ? \"Add to Dashboard\" : \"Save\"}\n      width={500}\n      wrapProps={{ \"data-test\": \"TextboxDialog\" }}>\n      <div className=\"textbox-dialog\">\n        <Input.TextArea\n          className=\"resize-vertical\"\n          rows=\"5\"\n          value={text}\n          aria-label=\"Textbox widget content\"\n          onChange={handleInputChange}\n          autoFocus\n          placeholder=\"This is where you write some text\"\n        />\n        <small>\n          Supports basic{\" \"}\n          <Link\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://www.markdownguide.org/cheat-sheet/#basic-syntax\">\n            <Tooltip title=\"Markdown guide opens in new window\">Markdown</Tooltip>\n          </Link>\n          .\n        </small>\n        {text && (\n          <React.Fragment>\n            <Divider dashed />\n            <strong className=\"preview-title\">Preview:</strong>\n            <HtmlContent className=\"preview markdown\">{preview}</HtmlContent>\n          </React.Fragment>\n        )}\n      </div>\n    </Modal>\n  );\n}\n\nTextboxDialog.propTypes = {\n  dialog: DialogPropType.isRequired,\n  isNew: PropTypes.bool,\n  text: PropTypes.string,\n};\n\nTextboxDialog.defaultProps = {\n  isNew: false,\n  text: \"\",\n};\n\nexport default wrapDialog(TextboxDialog);\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { markdown } from \"markdown\";\nimport Menu from \"antd/lib/menu\";\nimport HtmlContent from \"@redash/viz/lib/components/HtmlContent\";\nimport TextboxDialog from \"@/components/dashboards/TextboxDialog\";\nimport Widget from \"./Widget\";\n\nfunction TextboxWidget(props) {\n  const { widget, canEdit } = props;\n  const [text, setText] = useState(widget.text);\n\n  const editTextBox = () => {\n    TextboxDialog.showModal({\n      text: widget.text,\n    }).onClose(newText => {\n      widget.text = newText;\n      setText(newText);\n      return widget.save();\n    });\n  };\n\n  const TextboxMenuOptions = [\n    <Menu.Item key=\"edit\" onClick={editTextBox}>\n      Edit\n    </Menu.Item>,\n  ];\n\n  if (!widget.width) {\n    return null;\n  }\n\n  return (\n    <Widget {...props} menuOptions={canEdit ? TextboxMenuOptions : null} className=\"widget-text\">\n      <HtmlContent className=\"body-row-auto scrollbox t-body p-15 markdown\">{markdown.toHTML(text || \"\")}</HtmlContent>\n    </Widget>\n  );\n}\n\nTextboxWidget.propTypes = {\n  widget: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  canEdit: PropTypes.bool,\n};\n\nTextboxWidget.defaultProps = {\n  canEdit: false,\n};\n\nexport default TextboxWidget;\n","import React from \"react\";\nimport Widget from \"./Widget\";\n\nfunction RestrictedWidget(props) {\n  return (\n    <Widget {...props} className=\"d-flex justify-content-center align-items-center widget-restricted\">\n      <div className=\"t-body scrollbox\">\n        <div className=\"text-center\">\n          <h1>\n            <span className=\"zmdi zmdi-lock\" />\n          </h1>\n          <p className=\"text-muted\">This widget requires access to a data source you don&apos;t have access to.</p>\n        </div>\n      </div>\n    </Widget>\n  );\n}\n\nexport default RestrictedWidget;\n","import { includes, reduce, some } from \"lodash\";\n\n// TODO: Revisit this implementation when migrating widget component to React\n\nconst WIDGET_SELECTOR = '[data-widgetid=\"{0}\"]';\nconst WIDGET_CONTENT_SELECTOR = [\n  \".widget-header\", // header\n  \".visualization-renderer\", // visualization\n  \".scrollbox .alert\", // error state\n  \".spinner-container\", // loading state\n  \".tile__bottom-control\", // footer\n].join(\",\");\nconst INTERVAL = 200;\n\nexport default class AutoHeightController {\n  widgets = {};\n\n  interval = null;\n\n  onHeightChange = null;\n\n  constructor(handler) {\n    this.onHeightChange = handler;\n  }\n\n  update(widgets) {\n    const newWidgetIds = widgets\n      .filter(widget => widget.options.position.autoHeight)\n      .map(widget => widget.id.toString());\n\n    // added\n    newWidgetIds.filter(id => !includes(Object.keys(this.widgets), id)).forEach(this.add);\n\n    // removed\n    Object.keys(this.widgets)\n      .filter(id => !includes(newWidgetIds, id))\n      .forEach(this.remove);\n  }\n\n  add = id => {\n    if (this.isEmpty()) {\n      this.start();\n    }\n\n    const selector = WIDGET_SELECTOR.replace(\"{0}\", id);\n    this.widgets[id] = [\n      function getHeight() {\n        const widgetEl = document.querySelector(selector);\n        if (!widgetEl) {\n          return undefined; // safety\n        }\n\n        // get all content elements\n        const els = widgetEl.querySelectorAll(WIDGET_CONTENT_SELECTOR);\n\n        // calculate accumulated height\n        return reduce(\n          els,\n          (acc, el) => {\n            const height = el ? el.getBoundingClientRect().height : 0;\n            return acc + height;\n          },\n          0\n        );\n      },\n    ];\n  };\n\n  remove = id => {\n    // ignore if not an active autoHeight widget\n    if (!this.exists(id)) {\n      return;\n    }\n\n    // not actually deleting from this.widgets to prevent case of unwanted re-adding\n    this.widgets[id.toString()] = false;\n\n    if (this.isEmpty()) {\n      this.stop();\n    }\n  };\n\n  exists = id => !!this.widgets[id.toString()];\n\n  isEmpty = () => !some(this.widgets);\n\n  checkHeightChanges = () => {\n    Object.keys(this.widgets)\n      .filter(this.exists) // reject already removed items\n      .forEach(id => {\n        const [getHeight, prevHeight] = this.widgets[id];\n        const height = getHeight();\n        if (height && height !== prevHeight) {\n          this.widgets[id][1] = height; // save\n          this.onHeightChange(id, height); // dispatch\n        }\n      });\n  };\n\n  start = () => {\n    this.stop();\n    this.interval = setInterval(this.checkHeightChanges, INTERVAL);\n  };\n\n  stop = () => {\n    clearInterval(this.interval);\n  };\n\n  resume = () => {\n    if (!this.isEmpty()) {\n      this.start();\n    }\n  };\n\n  destroy = () => {\n    this.stop();\n    this.widgets = null;\n  };\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { chain, cloneDeep, find } from \"lodash\";\nimport cx from \"classnames\";\nimport { Responsive, WidthProvider } from \"react-grid-layout\";\nimport { VisualizationWidget, TextboxWidget, RestrictedWidget } from \"@/components/dashboards/dashboard-widget\";\nimport { FiltersType } from \"@/components/Filters\";\nimport cfg from \"@/config/dashboard-grid-options\";\nimport AutoHeightController from \"./AutoHeightController\";\nimport { WidgetTypeEnum } from \"@/services/widget\";\n\nimport \"react-grid-layout/css/styles.css\";\nimport \"./dashboard-grid.less\";\n\nconst ResponsiveGridLayout = WidthProvider(Responsive);\n\nconst WidgetType = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  options: PropTypes.shape({\n    position: PropTypes.shape({\n      col: PropTypes.number.isRequired,\n      row: PropTypes.number.isRequired,\n      sizeY: PropTypes.number.isRequired,\n      minSizeY: PropTypes.number.isRequired,\n      maxSizeY: PropTypes.number.isRequired,\n      sizeX: PropTypes.number.isRequired,\n      minSizeX: PropTypes.number.isRequired,\n      maxSizeX: PropTypes.number.isRequired,\n    }).isRequired,\n  }).isRequired,\n});\n\nconst SINGLE = \"single-column\";\nconst MULTI = \"multi-column\";\n\nconst DashboardWidget = React.memo(\n  function DashboardWidget({\n    widget,\n    dashboard,\n    onLoadWidget,\n    onRefreshWidget,\n    onRemoveWidget,\n    onParameterMappingsChange,\n    isEditing,\n    canEdit,\n    isPublic,\n    isLoading,\n    filters,\n  }) {\n    const { type } = widget;\n    const onLoad = () => onLoadWidget(widget);\n    const onRefresh = () => onRefreshWidget(widget);\n    const onDelete = () => onRemoveWidget(widget.id);\n\n    if (type === WidgetTypeEnum.VISUALIZATION) {\n      return (\n        <VisualizationWidget\n          widget={widget}\n          dashboard={dashboard}\n          filters={filters}\n          isEditing={isEditing}\n          canEdit={canEdit}\n          isPublic={isPublic}\n          isLoading={isLoading}\n          onLoad={onLoad}\n          onRefresh={onRefresh}\n          onDelete={onDelete}\n          onParameterMappingsChange={onParameterMappingsChange}\n        />\n      );\n    }\n    if (type === WidgetTypeEnum.TEXTBOX) {\n      return <TextboxWidget widget={widget} canEdit={canEdit} isPublic={isPublic} onDelete={onDelete} />;\n    }\n    return <RestrictedWidget widget={widget} />;\n  },\n  (prevProps, nextProps) =>\n    prevProps.widget === nextProps.widget &&\n    prevProps.canEdit === nextProps.canEdit &&\n    prevProps.isPublic === nextProps.isPublic &&\n    prevProps.isLoading === nextProps.isLoading &&\n    prevProps.filters === nextProps.filters &&\n    prevProps.isEditing === nextProps.isEditing\n);\n\nclass DashboardGrid extends React.Component {\n  static propTypes = {\n    isEditing: PropTypes.bool.isRequired,\n    isPublic: PropTypes.bool,\n    dashboard: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n    widgets: PropTypes.arrayOf(WidgetType).isRequired,\n    filters: FiltersType,\n    onBreakpointChange: PropTypes.func,\n    onLoadWidget: PropTypes.func,\n    onRefreshWidget: PropTypes.func,\n    onRemoveWidget: PropTypes.func,\n    onLayoutChange: PropTypes.func,\n    onParameterMappingsChange: PropTypes.func,\n  };\n\n  static defaultProps = {\n    isPublic: false,\n    filters: [],\n    onLoadWidget: () => {},\n    onRefreshWidget: () => {},\n    onRemoveWidget: () => {},\n    onLayoutChange: () => {},\n    onBreakpointChange: () => {},\n    onParameterMappingsChange: () => {},\n  };\n\n  static normalizeFrom(widget) {\n    const {\n      id,\n      options: { position: pos },\n    } = widget;\n\n    return {\n      i: id.toString(),\n      x: pos.col,\n      y: pos.row,\n      w: pos.sizeX,\n      h: pos.sizeY,\n      minW: pos.minSizeX,\n      maxW: pos.maxSizeX,\n      minH: pos.minSizeY,\n      maxH: pos.maxSizeY,\n    };\n  }\n\n  mode = null;\n\n  autoHeightCtrl = null;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      layouts: {},\n      disableAnimations: true,\n    };\n\n    // init AutoHeightController\n    this.autoHeightCtrl = new AutoHeightController(this.onWidgetHeightUpdated);\n    this.autoHeightCtrl.update(this.props.widgets);\n  }\n\n  componentDidMount() {\n    this.onBreakpointChange(document.body.offsetWidth <= cfg.mobileBreakPoint ? SINGLE : MULTI);\n    // Work-around to disable initial animation on widgets; `measureBeforeMount` doesn't work properly:\n    // it disables animation, but it cannot detect scrollbars.\n    setTimeout(() => {\n      this.setState({ disableAnimations: false });\n    }, 50);\n  }\n\n  componentDidUpdate() {\n    // update, in case widgets added or removed\n    this.autoHeightCtrl.update(this.props.widgets);\n  }\n\n  componentWillUnmount() {\n    this.autoHeightCtrl.destroy();\n  }\n\n  onLayoutChange = (_, layouts) => {\n    // workaround for when dashboard starts at single mode and then multi is empty or carries single col data\n    // fixes test dashboard_spec['shows widgets with full width']\n    // TODO: open react-grid-layout issue\n    if (layouts[MULTI]) {\n      this.setState({ layouts });\n    }\n\n    // workaround for https://github.com/STRML/react-grid-layout/issues/889\n    // remove next line when fix lands\n    this.mode = document.body.offsetWidth <= cfg.mobileBreakPoint ? SINGLE : MULTI;\n    // end workaround\n\n    // don't save single column mode layout\n    if (this.mode === SINGLE) {\n      return;\n    }\n\n    const normalized = chain(layouts[MULTI])\n      .keyBy(\"i\")\n      .mapValues(this.normalizeTo)\n      .value();\n\n    this.props.onLayoutChange(normalized);\n  };\n\n  onBreakpointChange = mode => {\n    this.mode = mode;\n    this.props.onBreakpointChange(mode === SINGLE);\n  };\n\n  // height updated by auto-height\n  onWidgetHeightUpdated = (widgetId, newHeight) => {\n    this.setState(({ layouts }) => {\n      const layout = cloneDeep(layouts[MULTI]); // must clone to allow react-grid-layout to compare prev/next state\n      const item = find(layout, { i: widgetId.toString() });\n      if (item) {\n        // update widget height\n        item.h = Math.ceil((newHeight + cfg.margins) / cfg.rowHeight);\n      }\n\n      return { layouts: { [MULTI]: layout } };\n    });\n  };\n\n  // height updated by manual resize\n  onWidgetResize = (layout, oldItem, newItem) => {\n    if (oldItem.h !== newItem.h) {\n      this.autoHeightCtrl.remove(Number(newItem.i));\n    }\n\n    this.autoHeightCtrl.resume();\n  };\n\n  normalizeTo = layout => ({\n    col: layout.x,\n    row: layout.y,\n    sizeX: layout.w,\n    sizeY: layout.h,\n    autoHeight: this.autoHeightCtrl.exists(layout.i),\n  });\n\n  render() {\n    const {\n      onLoadWidget,\n      onRefreshWidget,\n      onRemoveWidget,\n      onParameterMappingsChange,\n      filters,\n      dashboard,\n      isPublic,\n      isEditing,\n      widgets,\n    } = this.props;\n    const className = cx(\"dashboard-wrapper\", isEditing ? \"editing-mode\" : \"preview-mode\");\n\n    return (\n      <div className={className}>\n        <ResponsiveGridLayout\n          draggableCancel=\"input,.sortable-container\"\n          className={cx(\"layout\", { \"disable-animations\": this.state.disableAnimations })}\n          cols={{ [MULTI]: cfg.columns, [SINGLE]: 1 }}\n          rowHeight={cfg.rowHeight - cfg.margins}\n          margin={[cfg.margins, cfg.margins]}\n          isDraggable={isEditing}\n          isResizable={isEditing}\n          onResizeStart={this.autoHeightCtrl.stop}\n          onResizeStop={this.onWidgetResize}\n          layouts={this.state.layouts}\n          onLayoutChange={this.onLayoutChange}\n          onBreakpointChange={this.onBreakpointChange}\n          breakpoints={{ [MULTI]: cfg.mobileBreakPoint, [SINGLE]: 0 }}>\n          {widgets.map(widget => (\n            <div\n              key={widget.id}\n              data-grid={DashboardGrid.normalizeFrom(widget)}\n              data-widgetid={widget.id}\n              data-test={`WidgetId${widget.id}`}\n              className={cx(\"dashboard-widget-wrapper\", {\n                \"widget-auto-height-enabled\": this.autoHeightCtrl.exists(widget.id),\n              })}>\n              <DashboardWidget\n                dashboard={dashboard}\n                widget={widget}\n                filters={filters}\n                isPublic={isPublic}\n                isLoading={widget.loading}\n                isEditing={isEditing}\n                canEdit={dashboard.canEdit()}\n                onLoadWidget={onLoadWidget}\n                onRefreshWidget={onRefreshWidget}\n                onRemoveWidget={onRemoveWidget}\n                onParameterMappingsChange={onParameterMappingsChange}\n              />\n            </div>\n          ))}\n        </ResponsiveGridLayout>\n      </div>\n    );\n  }\n}\n\nexport default DashboardGrid;\n","const items = new Map();\n\nfunction checkItems() {\n  if (items.size > 0) {\n    items.forEach((item, node) => {\n      const bounds = node.getBoundingClientRect();\n      // convert to int (because these numbers needed for comparisons), but preserve 1 decimal point\n      const width = Math.round(bounds.width * 10);\n      const height = Math.round(bounds.height * 10);\n\n      if (item.width !== width || item.height !== height) {\n        item.width = width;\n        item.height = height;\n        item.callback(node);\n      }\n    });\n\n    setTimeout(checkItems, 100);\n  }\n}\n\nexport default function observe(node, callback) {\n  if (node && !items.has(node)) {\n    const shouldTrigger = items.size === 0;\n    items.set(node, { callback });\n    if (shouldTrigger) {\n      checkItems();\n    }\n    return () => items.delete(node);\n  }\n  return () => {};\n}\n","import { map, includes, groupBy, first, find } from \"lodash\";\nimport React, { useState, useMemo, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Select from \"antd/lib/select\";\nimport Modal from \"antd/lib/modal\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport { MappingType, ParameterMappingListInput } from \"@/components/ParameterMappingInput\";\nimport QuerySelector from \"@/components/QuerySelector\";\nimport notification from \"@/services/notification\";\nimport { Query } from \"@/services/query\";\nimport { useUniqueId } from \"@/lib/hooks/useUniqueId\";\n\nfunction VisualizationSelect({ query, visualization, onChange }) {\n  const visualizationGroups = useMemo(() => {\n    return query ? groupBy(query.visualizations, \"type\") : {};\n  }, [query]);\n\n  const vizSelectId = useUniqueId(\"visualization-select\");\n\n  const handleChange = useCallback(\n    visualizationId => {\n      const selectedVisualization = query ? find(query.visualizations, { id: visualizationId }) : null;\n      onChange(selectedVisualization || null);\n    },\n    [query, onChange]\n  );\n\n  if (!query) {\n    return null;\n  }\n\n  return (\n    <div>\n      <div className=\"form-group\">\n        <label htmlFor={vizSelectId}>Choose Visualization</label>\n        <Select\n          id={vizSelectId}\n          className=\"w-100\"\n          value={visualization ? visualization.id : undefined}\n          onChange={handleChange}>\n          {map(visualizationGroups, (visualizations, groupKey) => (\n            <Select.OptGroup key={groupKey} label={groupKey}>\n              {map(visualizations, visualization => (\n                <Select.Option key={`${visualization.id}`} value={visualization.id}>\n                  {visualization.name}\n                </Select.Option>\n              ))}\n            </Select.OptGroup>\n          ))}\n        </Select>\n      </div>\n    </div>\n  );\n}\n\nVisualizationSelect.propTypes = {\n  query: PropTypes.object,\n  visualization: PropTypes.object,\n  onChange: PropTypes.func,\n};\n\nVisualizationSelect.defaultProps = {\n  query: null,\n  visualization: null,\n  onChange: () => {},\n};\n\nfunction AddWidgetDialog({ dialog, dashboard }) {\n  const [selectedQuery, setSelectedQuery] = useState(null);\n  const [selectedVisualization, setSelectedVisualization] = useState(null);\n  const [parameterMappings, setParameterMappings] = useState([]);\n\n  const selectQuery = useCallback(\n    queryId => {\n      // Clear previously selected query (if any)\n      setSelectedQuery(null);\n      setSelectedVisualization(null);\n      setParameterMappings([]);\n\n      if (queryId) {\n        Query.get({ id: queryId }).then(query => {\n          if (query) {\n            const existingParamNames = map(dashboard.getParametersDefs(), param => param.name);\n            setSelectedQuery(query);\n            setParameterMappings(\n              map(query.getParametersDefs(), param => ({\n                name: param.name,\n                type: includes(existingParamNames, param.name)\n                  ? MappingType.DashboardMapToExisting\n                  : MappingType.DashboardAddNew,\n                mapTo: param.name,\n                value: param.normalizedValue,\n                title: \"\",\n                param,\n              }))\n            );\n            if (query.visualizations.length > 0) {\n              setSelectedVisualization(first(query.visualizations));\n            }\n          }\n        });\n      }\n    },\n    [dashboard]\n  );\n\n  const saveWidget = useCallback(() => {\n    dialog.close({ visualization: selectedVisualization, parameterMappings }).catch(() => {\n      notification.error(\"Widget could not be added\");\n    });\n  }, [dialog, selectedVisualization, parameterMappings]);\n\n  const existingParams = dashboard.getParametersDefs();\n  const parameterMappingsId = useUniqueId(\"parameter-mappings\");\n\n  return (\n    <Modal\n      {...dialog.props}\n      title=\"Add Widget\"\n      onOk={saveWidget}\n      okButtonProps={{\n        ...dialog.props.okButtonProps,\n        disabled: !selectedQuery || dialog.props.okButtonProps.disabled,\n      }}\n      okText=\"Add to Dashboard\"\n      width={700}>\n      <div data-test=\"AddWidgetDialog\">\n        <QuerySelector onChange={query => selectQuery(query ? query.id : null)} />\n\n        {selectedQuery && (\n          <VisualizationSelect\n            query={selectedQuery}\n            visualization={selectedVisualization}\n            onChange={setSelectedVisualization}\n          />\n        )}\n\n        {parameterMappings.length > 0 && [\n          <label key=\"parameters-title\" htmlFor={parameterMappingsId}>\n            Parameters\n          </label>,\n          <ParameterMappingListInput\n            key=\"parameters-list\"\n            id={parameterMappingsId}\n            mappings={parameterMappings}\n            existingParams={existingParams}\n            onChange={setParameterMappings}\n          />,\n        ]}\n      </div>\n    </Modal>\n  );\n}\n\nAddWidgetDialog.propTypes = {\n  dialog: DialogPropType.isRequired,\n  dashboard: PropTypes.object.isRequired,\n};\n\nexport default wrapDialog(AddWidgetDialog);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport Link from \"@/components/Link\";\n\n// PreviewCard\n\nexport function PreviewCard({ imageUrl, roundedImage, title, body, children, className, ...props }) {\n  return (\n    <div {...props} className={className + \" w-100 d-flex align-items-center\"}>\n      <img\n        src={imageUrl}\n        width=\"32\"\n        height=\"32\"\n        className={classNames({ \"profile__image--settings\": roundedImage }, \"m-r-5\")}\n        alt=\"Logo/Avatar\"\n      />\n      <div className=\"flex-fill\">\n        <div>{title}</div>\n        {body && <div className=\"text-muted\">{body}</div>}\n      </div>\n      {children}\n    </div>\n  );\n}\n\nPreviewCard.propTypes = {\n  imageUrl: PropTypes.string.isRequired,\n  title: PropTypes.node.isRequired,\n  body: PropTypes.node,\n  roundedImage: PropTypes.bool,\n  className: PropTypes.string,\n  children: PropTypes.node,\n};\n\nPreviewCard.defaultProps = {\n  body: null,\n  roundedImage: true,\n  className: \"\",\n  children: null,\n};\n\n// UserPreviewCard\n\nexport function UserPreviewCard({ user, withLink, children, ...props }) {\n  const title = withLink ? <Link href={\"users/\" + user.id}>{user.name}</Link> : user.name;\n  return (\n    <PreviewCard {...props} imageUrl={user.profile_image_url} title={title} body={user.email}>\n      {children}\n    </PreviewCard>\n  );\n}\n\nUserPreviewCard.propTypes = {\n  user: PropTypes.shape({\n    profile_image_url: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n  }).isRequired,\n  withLink: PropTypes.bool,\n  children: PropTypes.node,\n};\n\nUserPreviewCard.defaultProps = {\n  withLink: false,\n  children: null,\n};\n\n// DataSourcePreviewCard\n\nexport function DataSourcePreviewCard({ dataSource, withLink, children, ...props }) {\n  const imageUrl = `static/images/db-logos/${dataSource.type}.png`;\n  const title = withLink ? <Link href={\"data_sources/\" + dataSource.id}>{dataSource.name}</Link> : dataSource.name;\n  return (\n    <PreviewCard {...props} imageUrl={imageUrl} title={title}>\n      {children}\n    </PreviewCard>\n  );\n}\n\nDataSourcePreviewCard.propTypes = {\n  dataSource: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n  }).isRequired,\n  withLink: PropTypes.bool,\n  children: PropTypes.node,\n};\n\nDataSourcePreviewCard.defaultProps = {\n  withLink: false,\n  children: null,\n};\n","import { isString } from \"lodash\";\nimport DOMPurify from \"dompurify\";\n\nDOMPurify.setConfig({\n  ADD_ATTR: [\"target\"],\n});\n\nDOMPurify.addHook(\"afterSanitizeAttributes\", function(node) {\n  // Fix elements with `target` attribute:\n  // - allow only `target=\"_blank\"\n  // - add `rel=\"noopener noreferrer\"` to prevent https://www.owasp.org/index.php/Reverse_Tabnabbing\n\n  const target = node.getAttribute(\"target\");\n  if (isString(target) && target.toLowerCase() === \"_blank\") {\n    node.setAttribute(\"rel\", \"noopener noreferrer\");\n  } else {\n    node.removeAttribute(\"target\");\n  }\n});\n\nexport { DOMPurify };\n\nexport default DOMPurify.sanitize;\n","import { isString, get, find } from \"lodash\";\nimport sanitize from \"@/services/sanitize\";\nimport { axios } from \"@/services/axios\";\nimport notification from \"@/services/notification\";\nimport { clientConfig } from \"@/services/auth\";\n\nfunction getErrorMessage(error) {\n  return find([get(error, \"response.data.message\"), get(error, \"response.statusText\"), \"Unknown error\"], isString);\n}\n\nfunction disableResource(user) {\n  return `api/users/${user.id}/disable`;\n}\n\nfunction enableUser(user) {\n  const userName = sanitize(user.name);\n\n  return axios\n    .delete(disableResource(user))\n    .then(data => {\n      notification.success(`User ${userName} is now enabled.`);\n      user.is_disabled = false;\n      user.profile_image_url = data.profile_image_url;\n      return data;\n    })\n    .catch(error => {\n      notification.error(\"Cannot enable user\", getErrorMessage(error));\n    });\n}\n\nfunction disableUser(user) {\n  const userName = sanitize(user.name);\n  return axios\n    .post(disableResource(user))\n    .then(data => {\n      notification.warning(`User ${userName} is now disabled.`);\n      user.is_disabled = true;\n      user.profile_image_url = data.profile_image_url;\n      return data;\n    })\n    .catch(error => {\n      notification.error(\"Cannot disable user\", getErrorMessage(error));\n    });\n}\n\nfunction deleteUser(user) {\n  const userName = sanitize(user.name);\n  return axios\n    .delete(`api/users/${user.id}`)\n    .then(data => {\n      notification.warning(`User ${userName} has been deleted.`);\n      return data;\n    })\n    .catch(error => {\n      notification.error(\"Cannot delete user\", getErrorMessage(error));\n    });\n}\n\nfunction convertUserInfo(user) {\n  return {\n    id: user.id,\n    name: user.name,\n    email: user.email,\n    profileImageUrl: user.profile_image_url,\n    apiKey: user.api_key,\n    groupIds: user.groups,\n    isDisabled: user.is_disabled,\n    isInvitationPending: user.is_invitation_pending,\n  };\n}\n\nfunction regenerateApiKey(user) {\n  return axios\n    .post(`api/users/${user.id}/regenerate_api_key`)\n    .then(data => {\n      notification.success(\"The API Key has been updated.\");\n      return data.api_key;\n    })\n    .catch(error => {\n      notification.error(\"Failed regenerating API Key\", getErrorMessage(error));\n    });\n}\n\nfunction sendPasswordReset(user) {\n  return axios\n    .post(`api/users/${user.id}/reset_password`)\n    .then(data => {\n      if (clientConfig.mailSettingsMissing) {\n        notification.warning(\"The mail server is not configured.\");\n        return data.reset_link;\n      }\n      notification.success(\"Password reset email sent.\");\n    })\n    .catch(error => {\n      notification.error(\"Failed to send password reset email\", getErrorMessage(error));\n    });\n}\n\nfunction resendInvitation(user) {\n  return axios\n    .post(`api/users/${user.id}/invite`)\n    .then(data => {\n      if (clientConfig.mailSettingsMissing) {\n        notification.warning(\"The mail server is not configured.\");\n        return data.invite_link;\n      }\n      notification.success(\"Invitation sent.\");\n    })\n    .catch(error => {\n      notification.error(\"Failed to resend invitation\", getErrorMessage(error));\n    });\n}\n\nconst User = {\n  query: params => axios.get(\"api/users\", { params }),\n  get: ({ id }) => axios.get(`api/users/${id}`),\n  create: data => axios.post(`api/users`, data),\n  save: data => axios.post(`api/users/${data.id}`, data),\n  enableUser,\n  disableUser,\n  deleteUser,\n  convertUserInfo,\n  regenerateApiKey,\n  sendPasswordReset,\n  resendInvitation,\n};\n\nexport default User;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { axios } from \"@/services/axios\";\nimport PropTypes from \"prop-types\";\nimport { each, debounce, get, find } from \"lodash\";\nimport Button from \"antd/lib/button\";\nimport List from \"antd/lib/list\";\nimport Modal from \"antd/lib/modal\";\nimport Select from \"antd/lib/select\";\nimport Tag from \"antd/lib/tag\";\nimport Tooltip from \"@/components/Tooltip\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport { toHuman } from \"@/lib/utils\";\nimport HelpTrigger from \"@/components/HelpTrigger\";\nimport { UserPreviewCard } from \"@/components/PreviewCard\";\nimport PlainButton from \"@/components/PlainButton\";\nimport notification from \"@/services/notification\";\nimport User from \"@/services/user\";\n\nimport \"./index.less\";\n\nconst { Option } = Select;\nconst DEBOUNCE_SEARCH_DURATION = 200;\n\nfunction useGrantees(url) {\n  const loadGrantees = useCallback(\n    () =>\n      axios.get(url).then(data => {\n        const resultGrantees = [];\n        each(data, (grantees, accessType) => {\n          grantees.forEach(grantee => {\n            grantee.accessType = toHuman(accessType);\n            resultGrantees.push(grantee);\n          });\n        });\n        return resultGrantees;\n      }),\n    [url]\n  );\n\n  const addPermission = useCallback(\n    (userId, accessType = \"modify\") =>\n      axios\n        .post(url, { access_type: accessType, user_id: userId })\n        .catch(() => notification.error(\"Could not grant permission to the user\")),\n    [url]\n  );\n\n  const removePermission = useCallback(\n    (userId, accessType = \"modify\") =>\n      axios\n        .delete(url, { data: { access_type: accessType, user_id: userId } })\n        .catch(() => notification.error(\"Could not remove permission from the user\")),\n    [url]\n  );\n\n  return { loadGrantees, addPermission, removePermission };\n}\n\nconst searchUsers = searchTerm =>\n  User.query({ q: searchTerm })\n    .then(({ results }) => results)\n    .catch(() => []);\n\nfunction PermissionsEditorDialogHeader({ context }) {\n  return (\n    <>\n      Manage Permissions\n      <div className=\"modal-header-desc\">\n        {`Editing this ${context} is enabled for the users in this list and for admins. `}\n        <HelpTrigger type=\"MANAGE_PERMISSIONS\" />\n      </div>\n    </>\n  );\n}\n\nPermissionsEditorDialogHeader.propTypes = { context: PropTypes.oneOf([\"query\", \"dashboard\"]) };\nPermissionsEditorDialogHeader.defaultProps = { context: \"query\" };\n\nfunction UserSelect({ onSelect, shouldShowUser }) {\n  const [loadingUsers, setLoadingUsers] = useState(true);\n  const [users, setUsers] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const debouncedSearchUsers = useCallback(\n    debounce(\n      search =>\n        searchUsers(search)\n          .then(setUsers)\n          .finally(() => setLoadingUsers(false)),\n      DEBOUNCE_SEARCH_DURATION\n    ),\n    []\n  );\n\n  useEffect(() => {\n    setLoadingUsers(true);\n    debouncedSearchUsers(searchTerm);\n  }, [debouncedSearchUsers, searchTerm]);\n\n  return (\n    <Select\n      className=\"w-100 m-b-10\"\n      placeholder=\"Add users...\"\n      showSearch\n      onSearch={setSearchTerm}\n      suffixIcon={\n        loadingUsers ? (\n          <span role=\"status\" aria-live=\"polite\" aria-relevant=\"additions removals\">\n            <i className=\"fa fa-spinner fa-pulse\" aria-hidden=\"true\" />\n            <span className=\"sr-only\">Loading...</span>\n          </span>\n        ) : (\n          <i className=\"fa fa-search\" aria-hidden=\"true\" />\n        )\n      }\n      filterOption={false}\n      notFoundContent={null}\n      value={undefined}\n      getPopupContainer={trigger => trigger.parentNode}\n      onSelect={onSelect}>\n      {users.filter(shouldShowUser).map(user => (\n        <Option key={user.id} value={user.id}>\n          <UserPreviewCard user={user} />\n        </Option>\n      ))}\n    </Select>\n  );\n}\n\nUserSelect.propTypes = {\n  onSelect: PropTypes.func,\n  shouldShowUser: PropTypes.func,\n};\nUserSelect.defaultProps = { onSelect: () => {}, shouldShowUser: () => true };\n\nfunction PermissionsEditorDialog({ dialog, author, context, aclUrl }) {\n  const [loadingGrantees, setLoadingGrantees] = useState(true);\n  const [grantees, setGrantees] = useState([]);\n  const { loadGrantees, addPermission, removePermission } = useGrantees(aclUrl);\n  const loadUsersWithPermissions = useCallback(() => {\n    setLoadingGrantees(true);\n    loadGrantees()\n      .then(setGrantees)\n      .catch(() => notification.error(\"Failed to load grantees list\"))\n      .finally(() => setLoadingGrantees(false));\n  }, [loadGrantees]);\n\n  const userHasPermission = useCallback(\n    user => user.id === author.id || !!get(find(grantees, { id: user.id }), \"accessType\"),\n    [author.id, grantees]\n  );\n\n  useEffect(() => {\n    loadUsersWithPermissions();\n  }, [aclUrl, loadUsersWithPermissions]);\n\n  return (\n    <Modal\n      {...dialog.props}\n      className=\"permissions-editor-dialog\"\n      title={<PermissionsEditorDialogHeader context={context} />}\n      footer={<Button onClick={dialog.dismiss}>Close</Button>}>\n      <UserSelect\n        onSelect={userId => addPermission(userId).then(loadUsersWithPermissions)}\n        shouldShowUser={user => !userHasPermission(user)}\n      />\n      <div className=\"d-flex align-items-center m-t-5\">\n        <h5 className=\"flex-fill\">Users with permissions</h5>\n        {loadingGrantees && (\n          <span role=\"status\" aria-live=\"polite\" aria-relevant=\"additions removals\">\n            <i className=\"fa fa-spinner fa-pulse\" aria-hidden=\"true\" />\n            <span className=\"sr-only\">Loading...</span>\n          </span>\n        )}\n      </div>\n      <div className=\"scrollbox p-5\" style={{ maxHeight: \"40vh\" }}>\n        <List\n          size=\"small\"\n          dataSource={[author, ...grantees]}\n          renderItem={user => (\n            <List.Item>\n              <UserPreviewCard key={user.id} user={user}>\n                {user.id === author.id ? (\n                  <Tag className=\"m-0\">Author</Tag>\n                ) : (\n                  <Tooltip title=\"Remove user permissions\">\n                    <PlainButton\n                      aria-label=\"Remove permissions\"\n                      onClick={() => removePermission(user.id).then(loadUsersWithPermissions)}>\n                      <i className=\"fa fa-remove clickable\" aria-hidden=\"true\" />\n                    </PlainButton>\n                  </Tooltip>\n                )}\n              </UserPreviewCard>\n            </List.Item>\n          )}\n        />\n      </div>\n    </Modal>\n  );\n}\n\nPermissionsEditorDialog.propTypes = {\n  dialog: DialogPropType.isRequired,\n  author: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  context: PropTypes.oneOf([\"query\", \"dashboard\"]),\n  aclUrl: PropTypes.string.isRequired,\n};\n\nPermissionsEditorDialog.defaultProps = { context: \"query\" };\n\nexport default wrapDialog(PermissionsEditorDialog);\n","import React from \"react\";\nimport Input from \"antd/lib/input\";\nimport CopyOutlinedIcon from \"@ant-design/icons/CopyOutlined\";\nimport Tooltip from \"@/components/Tooltip\";\nimport PlainButton from \"./PlainButton\";\n\nexport default class InputWithCopy extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { copied: null };\n    this.ref = React.createRef();\n    this.copyFeatureSupported = document.queryCommandSupported(\"copy\");\n    this.resetCopyState = null;\n  }\n\n  componentWillUnmount() {\n    if (this.resetCopyState) {\n      clearTimeout(this.resetCopyState);\n    }\n  }\n\n  copy = () => {\n    // select text\n    this.ref.current.select();\n\n    // copy\n    try {\n      const success = document.execCommand(\"copy\");\n      if (!success) {\n        throw new Error();\n      }\n      this.setState({ copied: \"Copied!\" });\n    } catch (err) {\n      this.setState({\n        copied: \"Copy failed\",\n      });\n    }\n\n    // reset tooltip\n    this.resetCopyState = setTimeout(() => this.setState({ copied: null }), 2000);\n  };\n\n  render() {\n    const copyButton = (\n      <Tooltip title={this.state.copied || \"Copy\"}>\n        <PlainButton onClick={this.copy}>\n          {/* TODO: lacks visual feedback */}\n          <CopyOutlinedIcon />\n        </PlainButton>\n      </Tooltip>\n    );\n\n    return <Input {...this.props} ref={this.ref} addonAfter={this.copyFeatureSupported && copyButton} />;\n  }\n}\n","import { replace } from \"lodash\";\nimport React from \"react\";\nimport { axios } from \"@/services/axios\";\nimport PropTypes from \"prop-types\";\nimport Switch from \"antd/lib/switch\";\nimport Modal from \"antd/lib/modal\";\nimport Form from \"antd/lib/form\";\nimport Alert from \"antd/lib/alert\";\nimport notification from \"@/services/notification\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport InputWithCopy from \"@/components/InputWithCopy\";\nimport HelpTrigger from \"@/components/HelpTrigger\";\n\nconst API_SHARE_URL = \"api/dashboards/{id}/share\";\n\nclass ShareDashboardDialog extends React.Component {\n  static propTypes = {\n    dashboard: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n    hasOnlySafeQueries: PropTypes.bool.isRequired,\n    dialog: DialogPropType.isRequired,\n  };\n\n  formItemProps = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n    style: { marginBottom: 7 },\n  };\n\n  constructor(props) {\n    super(props);\n    const { dashboard } = this.props;\n\n    this.state = {\n      saving: false,\n    };\n\n    this.apiUrl = replace(API_SHARE_URL, \"{id}\", dashboard.id);\n    this.enabled = this.props.hasOnlySafeQueries || dashboard.publicAccessEnabled;\n  }\n\n  static get headerContent() {\n    return (\n      <React.Fragment>\n        Share Dashboard\n        <div className=\"modal-header-desc\">\n          Allow public access to this dashboard with a secret address. <HelpTrigger type=\"SHARE_DASHBOARD\" />\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  enableAccess = () => {\n    const { dashboard } = this.props;\n    this.setState({ saving: true });\n\n    axios\n      .post(this.apiUrl)\n      .then(data => {\n        dashboard.publicAccessEnabled = true;\n        dashboard.public_url = data.public_url;\n      })\n      .catch(() => {\n        notification.error(\"Failed to turn on sharing for this dashboard\");\n      })\n      .finally(() => {\n        this.setState({ saving: false });\n      });\n  };\n\n  disableAccess = () => {\n    const { dashboard } = this.props;\n    this.setState({ saving: true });\n\n    axios\n      .delete(this.apiUrl)\n      .then(() => {\n        dashboard.publicAccessEnabled = false;\n        delete dashboard.public_url;\n      })\n      .catch(() => {\n        notification.error(\"Failed to turn off sharing for this dashboard\");\n      })\n      .finally(() => {\n        this.setState({ saving: false });\n      });\n  };\n\n  onChange = checked => {\n    if (checked) {\n      this.enableAccess();\n    } else {\n      this.disableAccess();\n    }\n  };\n\n  render() {\n    const { dialog, dashboard, hasOnlySafeQueries } = this.props;\n    const headerContent = this.constructor.headerContent;\n    return (\n      <Modal {...dialog.props} title={headerContent} footer={null}>\n        <Form layout=\"horizontal\">\n          {!hasOnlySafeQueries && (\n            <Form.Item>\n              <Alert\n                message=\"For your security, sharing is currently not supported for dashboards containing queries with text parameters. Consider changing the text parameters in your query to a different type.\"\n                type=\"error\"\n              />\n            </Form.Item>\n          )}\n\n          <Form.Item label=\"Allow public access\" {...this.formItemProps}>\n            <Switch\n              checked={dashboard.publicAccessEnabled}\n              onChange={this.onChange}\n              loading={this.state.saving}\n              disabled={!this.enabled}\n              data-test=\"PublicAccessEnabled\"\n            />\n          </Form.Item>\n          {dashboard.public_url && (\n            <Form.Item label=\"Secret address\" {...this.formItemProps}>\n              <InputWithCopy value={dashboard.public_url} data-test=\"SecretAddress\" />\n            </Form.Item>\n          )}\n        </Form>\n      </Modal>\n    );\n  }\n}\n\nexport default wrapDialog(ShareDashboardDialog);\n","import { has } from \"lodash\";\nimport { useEffect, useState } from \"react\";\nimport location from \"@/services/location\";\n\nexport default function useFullscreenHandler() {\n  const [fullscreen, setFullscreen] = useState(has(location.search, \"fullscreen\"));\n  useEffect(() => {\n    document.body.classList.toggle(\"headless\", fullscreen);\n    location.setSearch({ fullscreen: fullscreen ? true : null }, true);\n  }, [fullscreen]);\n\n  const toggleFullscreen = () => setFullscreen(!fullscreen);\n  return [fullscreen, toggleFullscreen];\n}\n","import { isNaN, max, min } from \"lodash\";\nimport { useEffect, useState, useMemo } from \"react\";\nimport location from \"@/services/location\";\nimport { policy } from \"@/services/policy\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\n\nfunction getLimitedRefreshRate(refreshRate) {\n  const allowedIntervals = policy.getDashboardRefreshIntervals();\n  return max([30, min(allowedIntervals), refreshRate]);\n}\n\nfunction getRefreshRateFromUrl() {\n  const refreshRate = parseFloat(location.search.refresh);\n  return isNaN(refreshRate) ? null : getLimitedRefreshRate(refreshRate);\n}\n\nexport default function useRefreshRateHandler(refreshDashboard) {\n  const [refreshRate, setRefreshRate] = useState(getRefreshRateFromUrl());\n\n  // `refreshDashboard` may change quite frequently (on every update of `dashboard` instance), but we\n  // have to keep the same timer running, because timer will restart when re-creating, and instead of\n  // running refresh every N seconds - it will run refresh every N seconds after last dashboard update\n  // (which is not right obviously)\n  const doRefreshDashboard = useImmutableCallback(refreshDashboard);\n\n  // URL and timer should be updated only when `refreshRate` changes\n  useEffect(() => {\n    location.setSearch({ refresh: refreshRate || null }, true);\n    if (refreshRate) {\n      const refreshTimer = setInterval(doRefreshDashboard, refreshRate * 1000);\n      return () => clearInterval(refreshTimer);\n    }\n  }, [refreshRate, doRefreshDashboard]);\n\n  return useMemo(() => [refreshRate, rate => setRefreshRate(getLimitedRefreshRate(rate)), () => setRefreshRate(null)], [\n    refreshRate,\n  ]);\n}\n","import { debounce, find, has, isMatch, map, pickBy } from \"lodash\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport location from \"@/services/location\";\nimport notification from \"@/services/notification\";\n\nexport const DashboardStatusEnum = {\n  SAVED: \"saved\",\n  SAVING: \"saving\",\n  SAVING_FAILED: \"saving_failed\",\n};\n\nfunction getChangedPositions(widgets, nextPositions = {}) {\n  return pickBy(nextPositions, (nextPos, widgetId) => {\n    const widget = find(widgets, { id: Number(widgetId) });\n    const prevPos = widget.options.position;\n    return !isMatch(prevPos, nextPos);\n  });\n}\n\nexport default function useEditModeHandler(canEditDashboard, widgets) {\n  const [editingLayout, setEditingLayout] = useState(canEditDashboard && has(location.search, \"edit\"));\n  const [dashboardStatus, setDashboardStatus] = useState(DashboardStatusEnum.SAVED);\n  const [recentPositions, setRecentPositions] = useState([]);\n  const [doneBtnClickedWhileSaving, setDoneBtnClickedWhileSaving] = useState(false);\n\n  useEffect(() => {\n    location.setSearch({ edit: editingLayout ? true : null }, true);\n  }, [editingLayout]);\n\n  useEffect(() => {\n    if (doneBtnClickedWhileSaving && dashboardStatus === DashboardStatusEnum.SAVED) {\n      setDoneBtnClickedWhileSaving(false);\n      setEditingLayout(false);\n    }\n  }, [doneBtnClickedWhileSaving, dashboardStatus]);\n\n  const saveDashboardLayout = useCallback(\n    positions => {\n      if (!canEditDashboard) {\n        setDashboardStatus(DashboardStatusEnum.SAVED);\n        return;\n      }\n\n      const changedPositions = getChangedPositions(widgets, positions);\n\n      setDashboardStatus(DashboardStatusEnum.SAVING);\n      setRecentPositions(positions);\n      const saveChangedWidgets = map(changedPositions, (position, id) => {\n        // find widget\n        const widget = find(widgets, { id: Number(id) });\n\n        // skip already deleted widget\n        if (!widget) {\n          return Promise.resolve();\n        }\n\n        return widget.save(\"options\", { position });\n      });\n\n      return Promise.all(saveChangedWidgets)\n        .then(() => setDashboardStatus(DashboardStatusEnum.SAVED))\n        .catch(() => {\n          setDashboardStatus(DashboardStatusEnum.SAVING_FAILED);\n          notification.error(\"Error saving changes.\");\n        });\n    },\n    [canEditDashboard, widgets]\n  );\n\n  const saveDashboardLayoutDebounced = useCallback(\n    (...args) => {\n      setDashboardStatus(DashboardStatusEnum.SAVING);\n      return debounce(() => saveDashboardLayout(...args), 2000)();\n    },\n    [saveDashboardLayout]\n  );\n\n  const retrySaveDashboardLayout = useCallback(() => saveDashboardLayout(recentPositions), [\n    recentPositions,\n    saveDashboardLayout,\n  ]);\n\n  const setEditing = useCallback(\n    editing => {\n      if (!editing && dashboardStatus !== DashboardStatusEnum.SAVED) {\n        setDoneBtnClickedWhileSaving(true);\n        return;\n      }\n      setEditingLayout(canEditDashboard && editing);\n    },\n    [dashboardStatus, canEditDashboard]\n  );\n\n  return {\n    editingLayout: canEditDashboard && editingLayout,\n    setEditingLayout: setEditing,\n    saveDashboardLayout: editingLayout ? saveDashboardLayoutDebounced : saveDashboardLayout,\n    retrySaveDashboardLayout,\n    doneBtnClickedWhileSaving,\n    dashboardStatus,\n  };\n}\n","import { noop, extend, pick } from \"lodash\";\nimport { useCallback, useState } from \"react\";\nimport url from \"url\";\nimport qs from \"query-string\";\nimport { Dashboard } from \"@/services/dashboard\";\n\nfunction keepCurrentUrlParams(targetUrl) {\n  const currentUrlParams = qs.parse(window.location.search);\n  targetUrl = url.parse(targetUrl);\n  const targetUrlParams = qs.parse(targetUrl.search);\n  return url.format(\n    extend(pick(targetUrl, [\"protocol\", \"auth\", \"host\", \"pathname\"]), {\n      search: qs.stringify(extend(currentUrlParams, targetUrlParams)),\n    })\n  );\n}\n\nexport default function useDuplicateDashboard(dashboard) {\n  const [isDuplicating, setIsDuplicating] = useState(false);\n\n  const duplicateDashboard = useCallback(() => {\n    // To prevent opening the same tab, name must be unique for each browser\n    const tabName = `duplicatedDashboardTab/${Math.random().toString()}`;\n\n    // We should open tab here because this moment is a part of user interaction;\n    // later browser will block such attempts\n    const tab = window.open(\"\", tabName);\n\n    setIsDuplicating(true);\n    Dashboard.fork({ id: dashboard.id })\n      .then(newDashboard => {\n        tab.location = keepCurrentUrlParams(newDashboard.getUrl());\n      })\n      .finally(() => {\n        setIsDuplicating(false);\n      });\n  }, [dashboard.id]);\n\n  return [isDuplicating, isDuplicating ? noop : duplicateDashboard];\n}\n","import { useState, useEffect, useMemo, useCallback, useRef } from \"react\";\nimport { isEmpty, includes, compact, map, has, pick, keys, extend, every, get } from \"lodash\";\nimport notification from \"@/services/notification\";\nimport location from \"@/services/location\";\nimport url from \"@/services/url\";\nimport { Dashboard, collectDashboardFilters } from \"@/services/dashboard\";\nimport { currentUser } from \"@/services/auth\";\nimport recordEvent from \"@/services/recordEvent\";\nimport { QueryResultError } from \"@/services/query\";\nimport AddWidgetDialog from \"@/components/dashboards/AddWidgetDialog\";\nimport TextboxDialog from \"@/components/dashboards/TextboxDialog\";\nimport PermissionsEditorDialog from \"@/components/PermissionsEditorDialog\";\nimport { editableMappingsToParameterMappings, synchronizeWidgetTitles } from \"@/components/ParameterMappingInput\";\nimport ShareDashboardDialog from \"../components/ShareDashboardDialog\";\nimport useFullscreenHandler from \"../../../lib/hooks/useFullscreenHandler\";\nimport useRefreshRateHandler from \"./useRefreshRateHandler\";\nimport useEditModeHandler from \"./useEditModeHandler\";\nimport useDuplicateDashboard from \"./useDuplicateDashboard\";\nimport { policy } from \"@/services/policy\";\n\nexport { DashboardStatusEnum } from \"./useEditModeHandler\";\n\nfunction getAffectedWidgets(widgets, updatedParameters = []) {\n  return !isEmpty(updatedParameters)\n    ? widgets.filter(widget =>\n        Object.values(widget.getParameterMappings())\n          .filter(({ type }) => type === \"dashboard-level\")\n          .some(({ mapTo }) =>\n            includes(\n              updatedParameters.map(p => p.name),\n              mapTo\n            )\n          )\n      )\n    : widgets;\n}\n\nfunction useDashboard(dashboardData) {\n  const [dashboard, setDashboard] = useState(dashboardData);\n  const [filters, setFilters] = useState([]);\n  const [refreshing, setRefreshing] = useState(false);\n  const [gridDisabled, setGridDisabled] = useState(false);\n  const globalParameters = useMemo(() => dashboard.getParametersDefs(), [dashboard]);\n  const canEditDashboard = !dashboard.is_archived && policy.canEdit(dashboard);\n  const isDashboardOwnerOrAdmin = useMemo(\n    () =>\n      !dashboard.is_archived &&\n      has(dashboard, \"user.id\") &&\n      (currentUser.id === dashboard.user.id || currentUser.isAdmin),\n    [dashboard]\n  );\n  const hasOnlySafeQueries = useMemo(\n    () => every(dashboard.widgets, w => (w.getQuery() ? w.getQuery().is_safe : true)),\n    [dashboard]\n  );\n\n  const [isDuplicating, duplicateDashboard] = useDuplicateDashboard(dashboard);\n\n  const managePermissions = useCallback(() => {\n    const aclUrl = `api/dashboards/${dashboard.id}/acl`;\n    PermissionsEditorDialog.showModal({\n      aclUrl,\n      context: \"dashboard\",\n      author: dashboard.user,\n    });\n  }, [dashboard]);\n\n  const updateDashboard = useCallback(\n    (data, includeVersion = true) => {\n      setDashboard(currentDashboard => extend({}, currentDashboard, data));\n      data = { ...data, id: dashboard.id };\n      if (includeVersion) {\n        data = { ...data, version: dashboard.version };\n      }\n      return Dashboard.save(data)\n        .then(updatedDashboard => {\n          setDashboard(currentDashboard => extend({}, currentDashboard, pick(updatedDashboard, keys(data))));\n          if (has(data, \"name\")) {\n            location.setPath(url.parse(updatedDashboard.url).pathname, true);\n          }\n        })\n        .catch(error => {\n          const status = get(error, \"response.status\");\n          if (status === 403) {\n            notification.error(\"Dashboard update failed\", \"Permission Denied.\");\n          } else if (status === 409) {\n            notification.error(\n              \"It seems like the dashboard has been modified by another user. \",\n              \"Please copy/backup your changes and reload this page.\",\n              { duration: null }\n            );\n          }\n        });\n    },\n    [dashboard]\n  );\n\n  const togglePublished = useCallback(() => {\n    recordEvent(\"toggle_published\", \"dashboard\", dashboard.id);\n    updateDashboard({ is_draft: !dashboard.is_draft }, false);\n  }, [dashboard, updateDashboard]);\n\n  const loadWidget = useCallback((widget, forceRefresh = false) => {\n    widget.getParametersDefs(); // Force widget to read parameters values from URL\n    setDashboard(currentDashboard => extend({}, currentDashboard));\n    return widget\n      .load(forceRefresh)\n      .catch(error => {\n        // QueryResultErrors are expected\n        if (error instanceof QueryResultError) {\n          return;\n        }\n        return Promise.reject(error);\n      })\n      .finally(() => setDashboard(currentDashboard => extend({}, currentDashboard)));\n  }, []);\n\n  const refreshWidget = useCallback(widget => loadWidget(widget, true), [loadWidget]);\n\n  const removeWidget = useCallback(widgetId => {\n    setDashboard(currentDashboard =>\n      extend({}, currentDashboard, {\n        widgets: currentDashboard.widgets.filter(widget => widget.id !== undefined && widget.id !== widgetId),\n      })\n    );\n  }, []);\n\n  const dashboardRef = useRef();\n  dashboardRef.current = dashboard;\n\n  const loadDashboard = useCallback(\n    (forceRefresh = false, updatedParameters = []) => {\n      const affectedWidgets = getAffectedWidgets(dashboardRef.current.widgets, updatedParameters);\n      const loadWidgetPromises = compact(\n        affectedWidgets.map(widget => loadWidget(widget, forceRefresh).catch(error => error))\n      );\n\n      return Promise.all(loadWidgetPromises).then(() => {\n        const queryResults = compact(map(dashboardRef.current.widgets, widget => widget.getQueryResult()));\n        const updatedFilters = collectDashboardFilters(dashboardRef.current, queryResults, location.search);\n        setFilters(updatedFilters);\n      });\n    },\n    [loadWidget]\n  );\n\n  const refreshDashboard = useCallback(\n    updatedParameters => {\n      if (!refreshing) {\n        setRefreshing(true);\n        loadDashboard(true, updatedParameters).finally(() => setRefreshing(false));\n      }\n    },\n    [refreshing, loadDashboard]\n  );\n\n  const archiveDashboard = useCallback(() => {\n    recordEvent(\"archive\", \"dashboard\", dashboard.id);\n    Dashboard.delete(dashboard).then(updatedDashboard =>\n      setDashboard(currentDashboard => extend({}, currentDashboard, pick(updatedDashboard, [\"is_archived\"])))\n    );\n  }, [dashboard]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const showShareDashboardDialog = useCallback(() => {\n    const handleDialogClose = () => setDashboard(currentDashboard => extend({}, currentDashboard));\n\n    ShareDashboardDialog.showModal({\n      dashboard,\n      hasOnlySafeQueries,\n    })\n      .onClose(handleDialogClose)\n      .onDismiss(handleDialogClose);\n  }, [dashboard, hasOnlySafeQueries]);\n\n  const showAddTextboxDialog = useCallback(() => {\n    TextboxDialog.showModal({\n      isNew: true,\n    }).onClose(text =>\n      dashboard.addWidget(text).then(() => setDashboard(currentDashboard => extend({}, currentDashboard)))\n    );\n  }, [dashboard]);\n\n  const showAddWidgetDialog = useCallback(() => {\n    AddWidgetDialog.showModal({\n      dashboard,\n    }).onClose(({ visualization, parameterMappings }) =>\n      dashboard\n        .addWidget(visualization, {\n          parameterMappings: editableMappingsToParameterMappings(parameterMappings),\n        })\n        .then(widget => {\n          const widgetsToSave = [\n            widget,\n            ...synchronizeWidgetTitles(widget.options.parameterMappings, dashboard.widgets),\n          ];\n          return Promise.all(widgetsToSave.map(w => w.save())).then(() =>\n            setDashboard(currentDashboard => extend({}, currentDashboard))\n          );\n        })\n    );\n  }, [dashboard]);\n\n  const [refreshRate, setRefreshRate, disableRefreshRate] = useRefreshRateHandler(refreshDashboard);\n  const [fullscreen, toggleFullscreen] = useFullscreenHandler();\n  const editModeHandler = useEditModeHandler(!gridDisabled && canEditDashboard, dashboard.widgets);\n\n  useEffect(() => {\n    setDashboard(dashboardData);\n    loadDashboard();\n  }, [dashboardData]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    document.title = dashboard.name;\n  }, [dashboard.name]);\n\n  // reload dashboard when filter option changes\n  useEffect(() => {\n    loadDashboard();\n  }, [dashboard.dashboard_filters_enabled]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return {\n    dashboard,\n    globalParameters,\n    refreshing,\n    filters,\n    setFilters,\n    loadDashboard,\n    refreshDashboard,\n    updateDashboard,\n    togglePublished,\n    archiveDashboard,\n    loadWidget,\n    refreshWidget,\n    removeWidget,\n    canEditDashboard,\n    isDashboardOwnerOrAdmin,\n    refreshRate,\n    setRefreshRate,\n    disableRefreshRate,\n    ...editModeHandler,\n    gridDisabled,\n    setGridDisabled,\n    fullscreen,\n    toggleFullscreen,\n    showShareDashboardDialog,\n    showAddTextboxDialog,\n    showAddWidgetDialog,\n    managePermissions,\n    isDuplicating,\n    duplicateDashboard,\n  };\n}\n\nexport default useDashboard;\n","import { trim } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\nimport Input from \"antd/lib/input\";\n\nexport default class EditInPlace extends React.Component {\n  static propTypes = {\n    ignoreBlanks: PropTypes.bool,\n    isEditable: PropTypes.bool,\n    placeholder: PropTypes.string,\n    value: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onStopEditing: PropTypes.func,\n    multiline: PropTypes.bool,\n    editorProps: PropTypes.object,\n    defaultEditing: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    ignoreBlanks: false,\n    isEditable: true,\n    placeholder: \"\",\n    value: \"\",\n    onStopEditing: () => {},\n    multiline: false,\n    editorProps: {},\n    defaultEditing: false,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      editing: props.defaultEditing,\n    };\n  }\n\n  componentDidUpdate(_, prevState) {\n    if (!this.state.editing && prevState.editing) {\n      this.props.onStopEditing();\n    }\n  }\n\n  startEditing = () => {\n    if (this.props.isEditable) {\n      this.setState({ editing: true });\n    }\n  };\n\n  stopEditing = currentValue => {\n    const newValue = trim(currentValue);\n    const ignorableBlank = this.props.ignoreBlanks && newValue === \"\";\n    if (!ignorableBlank && newValue !== this.props.value) {\n      this.props.onDone(newValue);\n    }\n    this.setState({ editing: false });\n  };\n\n  handleKeyDown = event => {\n    if (event.keyCode === 13 && !event.shiftKey) {\n      event.preventDefault();\n      this.stopEditing(event.target.value);\n    } else if (event.keyCode === 27) {\n      this.setState({ editing: false });\n    }\n  };\n\n  renderNormal = () =>\n    this.props.value ? (\n      <span\n        role=\"presentation\"\n        onFocus={this.startEditing}\n        onClick={this.startEditing}\n        className={this.props.isEditable ? \"editable\" : \"\"}>\n        {this.props.value}\n      </span>\n    ) : (\n      <a className=\"clickable\" onClick={this.startEditing}>\n        {this.props.placeholder}\n      </a>\n    );\n\n  renderEdit = () => {\n    const { multiline, value, editorProps } = this.props;\n    const InputComponent = multiline ? Input.TextArea : Input;\n    return (\n      <InputComponent\n        defaultValue={value}\n        aria-label=\"Editing\"\n        onBlur={e => this.stopEditing(e.target.value)}\n        onKeyDown={this.handleKeyDown}\n        autoFocus\n        {...editorProps}\n      />\n    );\n  };\n\n  render() {\n    return (\n      <span className={cx(\"edit-in-place\", { active: this.state.editing }, this.props.className)}>\n        {this.state.editing ? this.renderEdit() : this.renderNormal()}\n      </span>\n    );\n  }\n}\n","import React from \"react\";\nimport cx from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { map, includes } from \"lodash\";\nimport Button from \"antd/lib/button\";\nimport Dropdown from \"antd/lib/dropdown\";\nimport Menu from \"antd/lib/menu\";\nimport EllipsisOutlinedIcon from \"@ant-design/icons/EllipsisOutlined\";\nimport Modal from \"antd/lib/modal\";\nimport Tooltip from \"@/components/Tooltip\";\nimport FavoritesControl from \"@/components/FavoritesControl\";\nimport EditInPlace from \"@/components/EditInPlace\";\nimport PlainButton from \"@/components/PlainButton\";\nimport { DashboardTagsControl } from \"@/components/tags-control/TagsControl\";\nimport getTags from \"@/services/getTags\";\nimport { clientConfig } from \"@/services/auth\";\nimport { policy } from \"@/services/policy\";\nimport recordEvent from \"@/services/recordEvent\";\nimport { durationHumanize } from \"@/lib/utils\";\nimport { DashboardStatusEnum } from \"../hooks/useDashboard\";\n\nimport \"./DashboardHeader.less\";\n\nfunction getDashboardTags() {\n  return getTags(\"api/dashboards/tags\").then(tags => map(tags, t => t.name));\n}\n\nfunction buttonType(value) {\n  return value ? \"primary\" : \"default\";\n}\n\nfunction DashboardPageTitle({ dashboardConfiguration }) {\n  const { dashboard, canEditDashboard, updateDashboard, editingLayout } = dashboardConfiguration;\n  return (\n    <div className=\"title-with-tags\">\n      <div className=\"page-title\">\n        <FavoritesControl item={dashboard} />\n        <h3>\n          <EditInPlace\n            isEditable={editingLayout}\n            onDone={name => updateDashboard({ name })}\n            value={dashboard.name}\n            ignoreBlanks\n          />\n        </h3>\n        <Tooltip title={dashboard.user.name} placement=\"bottom\">\n          <img src={dashboard.user.profile_image_url} className=\"profile-image\" alt={dashboard.user.name} />\n        </Tooltip>\n      </div>\n      <DashboardTagsControl\n        tags={dashboard.tags}\n        isDraft={dashboard.is_draft}\n        isArchived={dashboard.is_archived}\n        canEdit={canEditDashboard}\n        getAvailableTags={getDashboardTags}\n        onEdit={tags => updateDashboard({ tags })}\n      />\n    </div>\n  );\n}\n\nDashboardPageTitle.propTypes = {\n  dashboardConfiguration: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nfunction RefreshButton({ dashboardConfiguration }) {\n  const { refreshRate, setRefreshRate, disableRefreshRate, refreshing, refreshDashboard } = dashboardConfiguration;\n  const allowedIntervals = policy.getDashboardRefreshIntervals();\n  const refreshRateOptions = clientConfig.dashboardRefreshIntervals;\n  const onRefreshRateSelected = ({ key }) => {\n    const parsedRefreshRate = parseFloat(key);\n    if (parsedRefreshRate) {\n      setRefreshRate(parsedRefreshRate);\n      refreshDashboard();\n    } else {\n      disableRefreshRate();\n    }\n  };\n  return (\n    <Button.Group>\n      <Tooltip title={refreshRate ? `Auto Refreshing every ${durationHumanize(refreshRate)}` : null}>\n        <Button type={buttonType(refreshRate)} onClick={() => refreshDashboard()}>\n          <i className={cx(\"zmdi zmdi-refresh m-r-5\", { \"zmdi-hc-spin\": refreshing })} aria-hidden=\"true\" />\n          {refreshRate ? durationHumanize(refreshRate) : \"Refresh\"}\n        </Button>\n      </Tooltip>\n      <Dropdown\n        trigger={[\"click\"]}\n        placement=\"bottomRight\"\n        overlay={\n          <Menu onClick={onRefreshRateSelected} selectedKeys={[`${refreshRate}`]}>\n            {refreshRateOptions.map(option => (\n              <Menu.Item key={`${option}`} disabled={!includes(allowedIntervals, option)}>\n                {durationHumanize(option)}\n              </Menu.Item>\n            ))}\n            {refreshRate && <Menu.Item key={null}>Disable auto refresh</Menu.Item>}\n          </Menu>\n        }>\n        <Button className=\"icon-button hidden-xs\" type={buttonType(refreshRate)}>\n          <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\n          <span className=\"sr-only\">Split button!</span>\n        </Button>\n      </Dropdown>\n    </Button.Group>\n  );\n}\n\nRefreshButton.propTypes = {\n  dashboardConfiguration: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nfunction DashboardMoreOptionsButton({ dashboardConfiguration }) {\n  const {\n    dashboard,\n    setEditingLayout,\n    togglePublished,\n    archiveDashboard,\n    managePermissions,\n    gridDisabled,\n    isDashboardOwnerOrAdmin,\n    isDuplicating,\n    duplicateDashboard,\n  } = dashboardConfiguration;\n\n  const archive = () => {\n    Modal.confirm({\n      title: \"Archive Dashboard\",\n      content: `Are you sure you want to archive the \"${dashboard.name}\" dashboard?`,\n      okText: \"Archive\",\n      okType: \"danger\",\n      onOk: archiveDashboard,\n      maskClosable: true,\n      autoFocusButton: null,\n    });\n  };\n\n  return (\n    <Dropdown\n      trigger={[\"click\"]}\n      placement=\"bottomRight\"\n      overlay={\n        <Menu data-test=\"DashboardMoreButtonMenu\">\n          <Menu.Item className={cx({ hidden: gridDisabled })}>\n            <PlainButton onClick={() => setEditingLayout(true)}>Edit</PlainButton>\n          </Menu.Item>\n          {!isDuplicating && dashboard.canEdit() && (\n            <Menu.Item>\n              <PlainButton onClick={duplicateDashboard}>\n                Fork <i className=\"fa fa-external-link m-l-5\" aria-hidden=\"true\" />\n                <span className=\"sr-only\">(opens in a new tab)</span>\n              </PlainButton>\n            </Menu.Item>\n          )}\n          {clientConfig.showPermissionsControl && isDashboardOwnerOrAdmin && (\n            <Menu.Item>\n              <PlainButton onClick={managePermissions}>Manage Permissions</PlainButton>\n            </Menu.Item>\n          )}\n          {!clientConfig.disablePublish && !dashboard.is_draft && (\n            <Menu.Item>\n              <PlainButton onClick={togglePublished}>Unpublish</PlainButton>\n            </Menu.Item>\n          )}\n          <Menu.Item>\n            <PlainButton onClick={archive}>Archive</PlainButton>\n          </Menu.Item>\n        </Menu>\n      }>\n      <Button className=\"icon-button m-l-5\" data-test=\"DashboardMoreButton\" aria-label=\"More actions\">\n        <EllipsisOutlinedIcon rotate={90} aria-hidden=\"true\" />\n      </Button>\n    </Dropdown>\n  );\n}\n\nDashboardMoreOptionsButton.propTypes = {\n  dashboardConfiguration: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nfunction DashboardControl({ dashboardConfiguration, headerExtra }) {\n  const {\n    dashboard,\n    togglePublished,\n    canEditDashboard,\n    fullscreen,\n    toggleFullscreen,\n    showShareDashboardDialog,\n    updateDashboard,\n  } = dashboardConfiguration;\n  const showPublishButton = dashboard.is_draft;\n  const showRefreshButton = true;\n  const showFullscreenButton = !dashboard.is_draft;\n  const canShareDashboard = canEditDashboard && !dashboard.is_draft;\n  const showShareButton = !clientConfig.disablePublicUrls && (dashboard.publicAccessEnabled || canShareDashboard);\n  const showMoreOptionsButton = canEditDashboard;\n\n  const unarchiveDashboard = () => {\n    recordEvent(\"unarchive\", \"dashboard\", dashboard.id);\n    updateDashboard({ is_archived: false }, false);\n  };\n  return (\n    <div className=\"dashboard-control\">\n      {dashboard.can_edit && dashboard.is_archived && <Button onClick={unarchiveDashboard}>Unarchive</Button>}\n      {!dashboard.is_archived && (\n        <span className=\"hidden-print\">\n          {showPublishButton && (\n            <Button className=\"m-r-5 hidden-xs\" onClick={togglePublished}>\n              <span className=\"fa fa-paper-plane m-r-5\" /> Publish\n            </Button>\n          )}\n          {showRefreshButton && <RefreshButton dashboardConfiguration={dashboardConfiguration} />}\n          {showFullscreenButton && (\n            <Tooltip className=\"hidden-xs\" title=\"Enable/Disable Fullscreen display\">\n              <Button\n                type={buttonType(fullscreen)}\n                className=\"icon-button m-l-5\"\n                onClick={toggleFullscreen}\n                aria-label=\"Toggle fullscreen display\">\n                <i className=\"zmdi zmdi-fullscreen\" aria-hidden=\"true\" />\n              </Button>\n            </Tooltip>\n          )}\n          {headerExtra}\n          {showShareButton && (\n            <Tooltip title=\"Dashboard Sharing Options\">\n              <Button\n                className=\"icon-button m-l-5\"\n                type={buttonType(dashboard.publicAccessEnabled)}\n                onClick={showShareDashboardDialog}\n                data-test=\"OpenShareForm\"\n                aria-label=\"Share\">\n                <i className=\"zmdi zmdi-share\" aria-hidden=\"true\" />\n              </Button>\n            </Tooltip>\n          )}\n          {showMoreOptionsButton && <DashboardMoreOptionsButton dashboardConfiguration={dashboardConfiguration} />}\n        </span>\n      )}\n    </div>\n  );\n}\n\nDashboardControl.propTypes = {\n  dashboardConfiguration: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  headerExtra: PropTypes.node,\n};\n\nfunction DashboardEditControl({ dashboardConfiguration, headerExtra }) {\n  const {\n    setEditingLayout,\n    doneBtnClickedWhileSaving,\n    dashboardStatus,\n    retrySaveDashboardLayout,\n  } = dashboardConfiguration;\n  let status;\n  if (dashboardStatus === DashboardStatusEnum.SAVED) {\n    status = <span className=\"save-status\">Saved</span>;\n  } else if (dashboardStatus === DashboardStatusEnum.SAVING) {\n    status = (\n      <span className=\"save-status\" data-saving>\n        Saving\n      </span>\n    );\n  } else {\n    status = (\n      <span className=\"save-status\" data-error>\n        Saving Failed\n      </span>\n    );\n  }\n  return (\n    <div className=\"dashboard-control\">\n      {status}\n      {dashboardStatus === DashboardStatusEnum.SAVING_FAILED ? (\n        <Button type=\"primary\" onClick={retrySaveDashboardLayout}>\n          Retry\n        </Button>\n      ) : (\n        <Button loading={doneBtnClickedWhileSaving} type=\"primary\" onClick={() => setEditingLayout(false)}>\n          {!doneBtnClickedWhileSaving && <i className=\"fa fa-check m-r-5\" aria-hidden=\"true\" />} Done Editing\n        </Button>\n      )}\n      {headerExtra}\n    </div>\n  );\n}\n\nDashboardEditControl.propTypes = {\n  dashboardConfiguration: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  headerExtra: PropTypes.node,\n};\n\nexport default function DashboardHeader({ dashboardConfiguration, headerExtra }) {\n  const { editingLayout } = dashboardConfiguration;\n  const DashboardControlComponent = editingLayout ? DashboardEditControl : DashboardControl;\n\n  return (\n    <div className=\"dashboard-header\">\n      <DashboardPageTitle dashboardConfiguration={dashboardConfiguration} />\n      <DashboardControlComponent dashboardConfiguration={dashboardConfiguration} headerExtra={headerExtra} />\n    </div>\n  );\n}\n\nDashboardHeader.propTypes = {\n  dashboardConfiguration: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  headerExtra: PropTypes.node,\n};\n","import { isEmpty, map } from \"lodash\";\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\n\nimport Button from \"antd/lib/button\";\nimport Checkbox from \"antd/lib/checkbox\";\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport DashboardGrid from \"@/components/dashboards/DashboardGrid\";\nimport Parameters from \"@/components/Parameters\";\nimport Filters from \"@/components/Filters\";\n\nimport { Dashboard } from \"@/services/dashboard\";\nimport recordEvent from \"@/services/recordEvent\";\nimport resizeObserver from \"@/services/resizeObserver\";\nimport routes from \"@/services/routes\";\nimport location from \"@/services/location\";\nimport url from \"@/services/url\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\n\nimport useDashboard from \"./hooks/useDashboard\";\nimport DashboardHeader from \"./components/DashboardHeader\";\n\nimport \"./DashboardPage.less\";\n\nfunction DashboardSettings({ dashboardConfiguration }) {\n  const { dashboard, updateDashboard } = dashboardConfiguration;\n  return (\n    <div className=\"m-b-10 p-15 bg-white tiled\">\n      <Checkbox\n        checked={!!dashboard.dashboard_filters_enabled}\n        onChange={({ target }) => updateDashboard({ dashboard_filters_enabled: target.checked })}\n        data-test=\"DashboardFiltersCheckbox\">\n        Use Dashboard Level Filters\n      </Checkbox>\n    </div>\n  );\n}\n\nDashboardSettings.propTypes = {\n  dashboardConfiguration: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nfunction AddWidgetContainer({ dashboardConfiguration, className, ...props }) {\n  const { showAddTextboxDialog, showAddWidgetDialog } = dashboardConfiguration;\n  return (\n    <div className={cx(\"add-widget-container\", className)} {...props}>\n      <h2>\n        <i className=\"zmdi zmdi-widgets\" aria-hidden=\"true\" />\n        <span className=\"hidden-xs hidden-sm\">\n          Widgets are individual query visualizations or text boxes you can place on your dashboard in various\n          arrangements.\n        </span>\n      </h2>\n      <div>\n        <Button className=\"m-r-15\" onClick={showAddTextboxDialog} data-test=\"AddTextboxButton\">\n          Add Textbox\n        </Button>\n        <Button type=\"primary\" onClick={showAddWidgetDialog} data-test=\"AddWidgetButton\">\n          Add Widget\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nAddWidgetContainer.propTypes = {\n  dashboardConfiguration: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  className: PropTypes.string,\n};\n\nfunction DashboardComponent(props) {\n  const dashboardConfiguration = useDashboard(props.dashboard);\n  const {\n    dashboard,\n    filters,\n    setFilters,\n    loadDashboard,\n    loadWidget,\n    removeWidget,\n    saveDashboardLayout,\n    globalParameters,\n    updateDashboard,\n    refreshDashboard,\n    refreshWidget,\n    editingLayout,\n    setGridDisabled,\n  } = dashboardConfiguration;\n\n  const [pageContainer, setPageContainer] = useState(null);\n  const [bottomPanelStyles, setBottomPanelStyles] = useState({});\n  const onParametersEdit = parameters => {\n    const paramOrder = map(parameters, \"name\");\n    updateDashboard({ options: { globalParamOrder: paramOrder } });\n  };\n\n  useEffect(() => {\n    if (pageContainer) {\n      const unobserve = resizeObserver(pageContainer, () => {\n        if (editingLayout) {\n          const style = window.getComputedStyle(pageContainer, null);\n          const bounds = pageContainer.getBoundingClientRect();\n          const paddingLeft = parseFloat(style.paddingLeft) || 0;\n          const paddingRight = parseFloat(style.paddingRight) || 0;\n          setBottomPanelStyles({\n            left: Math.round(bounds.left) + paddingRight,\n            width: pageContainer.clientWidth - paddingLeft - paddingRight,\n          });\n        }\n\n        // reflow grid when container changes its size\n        window.dispatchEvent(new Event(\"resize\"));\n      });\n      return unobserve;\n    }\n  }, [pageContainer, editingLayout]);\n\n  return (\n    <div className=\"container\" ref={setPageContainer} data-test={`DashboardId${dashboard.id}Container`}>\n      <DashboardHeader\n        dashboardConfiguration={dashboardConfiguration}\n        headerExtra={\n          <DynamicComponent\n            name=\"Dashboard.HeaderExtra\"\n            dashboard={dashboard}\n            dashboardConfiguration={dashboardConfiguration}\n          />\n        }\n      />\n      {!isEmpty(globalParameters) && (\n        <div className=\"dashboard-parameters m-b-10 p-15 bg-white tiled\" data-test=\"DashboardParameters\">\n          <Parameters\n            parameters={globalParameters}\n            onValuesChange={refreshDashboard}\n            sortable={editingLayout}\n            onParametersEdit={onParametersEdit}\n          />\n        </div>\n      )}\n      {!isEmpty(filters) && (\n        <div className=\"m-b-10 p-15 bg-white tiled\" data-test=\"DashboardFilters\">\n          <Filters filters={filters} onChange={setFilters} />\n        </div>\n      )}\n      {editingLayout && <DashboardSettings dashboardConfiguration={dashboardConfiguration} />}\n      <div id=\"dashboard-container\">\n        <DashboardGrid\n          dashboard={dashboard}\n          widgets={dashboard.widgets}\n          filters={filters}\n          isEditing={editingLayout}\n          onLayoutChange={editingLayout ? saveDashboardLayout : () => {}}\n          onBreakpointChange={setGridDisabled}\n          onLoadWidget={loadWidget}\n          onRefreshWidget={refreshWidget}\n          onRemoveWidget={removeWidget}\n          onParameterMappingsChange={loadDashboard}\n        />\n      </div>\n      {editingLayout && (\n        <AddWidgetContainer dashboardConfiguration={dashboardConfiguration} style={bottomPanelStyles} />\n      )}\n    </div>\n  );\n}\n\nDashboardComponent.propTypes = {\n  dashboard: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nfunction DashboardPage({ dashboardSlug, dashboardId, onError }) {\n  const [dashboard, setDashboard] = useState(null);\n  const handleError = useImmutableCallback(onError);\n\n  useEffect(() => {\n    Dashboard.get({ id: dashboardId, slug: dashboardSlug })\n      .then(dashboardData => {\n        recordEvent(\"view\", \"dashboard\", dashboardData.id);\n        setDashboard(dashboardData);\n\n        // if loaded by slug, update location url to use the id\n        if (!dashboardId) {\n          location.setPath(url.parse(dashboardData.url).pathname, true);\n        }\n      })\n      .catch(handleError);\n  }, [dashboardId, dashboardSlug, handleError]);\n\n  return <div className=\"dashboard-page\">{dashboard && <DashboardComponent dashboard={dashboard} />}</div>;\n}\n\nDashboardPage.propTypes = {\n  dashboardSlug: PropTypes.string,\n  dashboardId: PropTypes.string,\n  onError: PropTypes.func,\n};\n\nDashboardPage.defaultProps = {\n  dashboardSlug: null,\n  dashboardId: null,\n  onError: PropTypes.func,\n};\n\n// route kept for backward compatibility\nroutes.register(\n  \"Dashboards.LegacyViewOrEdit\",\n  routeWithUserSession({\n    path: \"/dashboard/:dashboardSlug\",\n    render: pageProps => <DashboardPage {...pageProps} />,\n  })\n);\n\nroutes.register(\n  \"Dashboards.ViewOrEdit\",\n  routeWithUserSession({\n    path: \"/dashboards/:dashboardId([^-]+)(-.*)?\",\n    render: pageProps => <DashboardPage {...pageProps} />,\n  })\n);\n","import React, { useEffect, useState, useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ErrorBoundaryContext } from \"@redash/viz/lib/components/ErrorBoundary\";\nimport { Auth, clientConfig } from \"@/services/auth\";\n\n// This wrapper modifies `route.render` function and instead of passing `currentRoute` passes an object\n// that contains:\n// - `currentRoute.routeParams`\n// - `pageTitle` field which is equal to `currentRoute.title`\n// - `onError` field which is a `handleError` method of nearest error boundary\n// - `apiKey` field\n\nfunction ApiKeySessionWrapper({ apiKey, currentRoute, renderChildren }) {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const { handleError } = useContext(ErrorBoundaryContext);\n\n  useEffect(() => {\n    let isCancelled = false;\n    Auth.setApiKey(apiKey);\n    Auth.loadConfig()\n      .then(() => {\n        if (!isCancelled) {\n          setIsAuthenticated(true);\n        }\n      })\n      .catch(() => {\n        if (!isCancelled) {\n          setIsAuthenticated(false);\n        }\n      });\n    return () => {\n      isCancelled = true;\n    };\n  }, [apiKey]);\n\n  if (!isAuthenticated || clientConfig.disablePublicUrls) {\n    return null;\n  }\n\n  return (\n    <React.Fragment key={currentRoute.key}>\n      {renderChildren({ ...currentRoute.routeParams, pageTitle: currentRoute.title, onError: handleError, apiKey })}\n    </React.Fragment>\n  );\n}\n\nApiKeySessionWrapper.propTypes = {\n  apiKey: PropTypes.string.isRequired,\n  renderChildren: PropTypes.func,\n};\n\nApiKeySessionWrapper.defaultProps = {\n  renderChildren: () => null,\n};\n\nexport default function routeWithApiKeySession({ render, getApiKey, ...rest }) {\n  return {\n    ...rest,\n    render: currentRoute => (\n      <ApiKeySessionWrapper apiKey={getApiKey(currentRoute)} currentRoute={currentRoute} renderChildren={render} />\n    ),\n  };\n}\n","import { isEmpty } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport routeWithApiKeySession from \"@/components/ApplicationArea/routeWithApiKeySession\";\nimport Link from \"@/components/Link\";\nimport BigMessage from \"@/components/BigMessage\";\nimport PageHeader from \"@/components/PageHeader\";\nimport Parameters from \"@/components/Parameters\";\nimport DashboardGrid from \"@/components/dashboards/DashboardGrid\";\nimport Filters from \"@/components/Filters\";\n\nimport { Dashboard } from \"@/services/dashboard\";\nimport routes from \"@/services/routes\";\n\nimport logoUrl from \"@/assets/images/redash_icon_small.png\";\n\nimport useDashboard from \"./hooks/useDashboard\";\n\nimport \"./PublicDashboardPage.less\";\n\nfunction PublicDashboard({ dashboard }) {\n  const { globalParameters, filters, setFilters, refreshDashboard, loadWidget, refreshWidget } = useDashboard(\n    dashboard\n  );\n\n  return (\n    <div className=\"container p-t-10 p-b-20\">\n      <PageHeader title={dashboard.name} />\n      {!isEmpty(globalParameters) && (\n        <div className=\"m-b-10 p-15 bg-white tiled\">\n          <Parameters parameters={globalParameters} onValuesChange={refreshDashboard} />\n        </div>\n      )}\n      {!isEmpty(filters) && (\n        <div className=\"m-b-10 p-15 bg-white tiled\">\n          <Filters filters={filters} onChange={setFilters} />\n        </div>\n      )}\n      <div id=\"dashboard-container\">\n        <DashboardGrid\n          dashboard={dashboard}\n          widgets={dashboard.widgets}\n          filters={filters}\n          isEditing={false}\n          isPublic\n          onLoadWidget={loadWidget}\n          onRefreshWidget={refreshWidget}\n        />\n      </div>\n    </div>\n  );\n}\n\nPublicDashboard.propTypes = {\n  dashboard: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nclass PublicDashboardPage extends React.Component {\n  static propTypes = {\n    token: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n  };\n\n  static defaultProps = {\n    onError: () => {},\n  };\n\n  state = {\n    loading: true,\n    dashboard: null,\n  };\n\n  componentDidMount() {\n    Dashboard.getByToken({ token: this.props.token })\n      .then(dashboard => this.setState({ dashboard, loading: false }))\n      .catch(error => this.props.onError(error));\n  }\n\n  render() {\n    const { loading, dashboard } = this.state;\n    return (\n      <div className=\"public-dashboard-page\">\n        {loading ? (\n          <div className=\"container loading-message\">\n            <BigMessage className=\"\" icon=\"fa-spinner fa-2x fa-pulse\" message=\"Loading...\" />\n          </div>\n        ) : (\n          <PublicDashboard dashboard={dashboard} />\n        )}\n        <div id=\"footer\">\n          <div className=\"text-center\">\n            <Link href=\"https://redash.io\">\n              <img alt=\"Redash Logo\" src={logoUrl} width=\"38\" />\n            </Link>\n          </div>\n          Powered by <Link href=\"https://redash.io/?ref=public-dashboard\">Redash</Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nroutes.register(\n  \"Dashboards.ViewShared\",\n  routeWithApiKeySession({\n    path: \"/public/dashboards/:token\",\n    render: pageProps => <PublicDashboardPage {...pageProps} />,\n    getApiKey: currentRoute => currentRoute.routeParams.token,\n  })\n);\n","import React from \"react\";\nimport BigMessage from \"@/components/BigMessage\";\n\n// Default \"list empty\" message for list pages\nexport default function EmptyState(props) {\n  return (\n    <div className=\"text-center\">\n      <BigMessage icon=\"fa-search\" message=\"Sorry, we couldn't find anything.\" {...props} />\n    </div>\n  );\n}\n","import { includes, isEmpty } from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport React, { useState } from \"react\";\nimport Input from \"antd/lib/input\";\nimport Link from \"@/components/Link\";\nimport PlainButton from \"@/components/PlainButton\";\nimport EmptyState from \"@/components/items-list/components/EmptyState\";\n\nimport \"./CardsList.less\";\n\nexport interface CardsListItem {\n  title: string;\n  imgSrc: string;\n  href?: string;\n  onClick?: React.MouseEventHandler<HTMLElement>;\n}\n\nexport interface CardsListProps {\n  items?: CardsListItem[];\n  showSearch?: boolean;\n}\n\ninterface ListItemProps {\n  item: CardsListItem;\n  keySuffix: string;\n}\n\nfunction ListItem({ item, keySuffix }: ListItemProps) {\n  const commonProps = {\n    key: `card${keySuffix}`,\n    className: \"visual-card\",\n    onClick: item.onClick,\n    children: (\n      <>\n        <img alt={item.title} src={item.imgSrc} />\n        <h3>{item.title}</h3>\n      </>\n    ),\n  };\n\n  return item.href ? <Link href={item.href} {...commonProps} /> : <PlainButton type=\"link\" {...commonProps} />;\n}\n\nexport default function CardsList({ items = [], showSearch = false }: CardsListProps) {\n  const [searchText, setSearchText] = useState(\"\");\n  const filteredItems = items.filter(\n    item => isEmpty(searchText) || includes(item.title.toLowerCase(), searchText.toLowerCase())\n  );\n\n  return (\n    <div data-test=\"CardsList\">\n      {showSearch && (\n        <div className=\"row p-10\">\n          <div className=\"col-md-4 col-md-offset-4\">\n            <Input.Search\n              placeholder=\"Search...\"\n              aria-label=\"Search cards\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => setSearchText(e.target.value)}\n              autoFocus\n            />\n          </div>\n        </div>\n      )}\n      {isEmpty(filteredItems) ? (\n        <EmptyState className=\"\" />\n      ) : (\n        <div className=\"row\">\n          <div className=\"col-lg-12 d-inline-flex flex-wrap visual-card-list\">\n            {filteredItems.map((item: CardsListItem, index: number) => (\n              <ListItem key={index} item={item} keySuffix={index.toString()} />\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nCardsList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      imgSrc: PropTypes.string.isRequired,\n      onClick: PropTypes.func,\n      href: PropTypes.string,\n    })\n  ),\n  showSearch: PropTypes.bool,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\nimport AntCollapse from \"antd/lib/collapse\";\n\nexport default function Collapse({ collapsed, children, className, ...props }) {\n  return (\n    <AntCollapse\n      {...props}\n      activeKey={collapsed ? null : \"content\"}\n      className={cx(className, \"ant-collapse-headerless\")}>\n      <AntCollapse.Panel key=\"content\" header=\"\">\n        {children}\n      </AntCollapse.Panel>\n    </AntCollapse>\n  );\n}\n\nCollapse.propTypes = {\n  collapsed: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n};\n\nCollapse.defaultProps = {\n  collapsed: true,\n  children: null,\n  className: \"\",\n};\n","import { toHuman } from \"@/lib/utils\";\n\nexport default function getFieldLabel(field) {\n  const { title, name } = field;\n  return title || toHuman(name);\n}\n","import React, { forwardRef } from \"react\";\nimport AceEditor from \"react-ace\";\n\nimport \"./AceEditorInput.less\";\n\nfunction AceEditorInput(props, ref) {\n  return (\n    <div className=\"ace-editor-input\" data-test={props[\"data-test\"]}>\n      <AceEditor\n        ref={ref}\n        mode=\"sql\"\n        theme=\"textmate\"\n        height=\"100px\"\n        editorProps={{ $blockScrolling: Infinity }}\n        showPrintMargin={false}\n        {...props}\n      />\n    </div>\n  );\n}\n\nexport default forwardRef(AceEditorInput);\n","import React from \"react\";\nimport Input from \"antd/lib/input\";\n\nexport default function InputField({ form, field, ...otherProps }) {\n  return <Input {...otherProps} />;\n}\n","import React from \"react\";\nimport { get } from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport getFieldLabel from \"./getFieldLabel\";\n\nimport {\n  AceEditorField,\n  CheckboxField,\n  ContentField,\n  FileField,\n  InputField,\n  NumberField,\n  SelectField,\n  TextAreaField,\n} from \"./fields\";\n\nexport const FieldType = PropTypes.shape({\n  name: PropTypes.string.isRequired,\n  title: PropTypes.string,\n  type: PropTypes.oneOf([\n    \"ace\",\n    \"text\",\n    \"textarea\",\n    \"email\",\n    \"password\",\n    \"number\",\n    \"checkbox\",\n    \"file\",\n    \"select\",\n    \"content\",\n  ]).isRequired,\n  initialValue: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.bool,\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.arrayOf(PropTypes.number),\n  ]),\n  content: PropTypes.node,\n  mode: PropTypes.string,\n  required: PropTypes.bool,\n  extra: PropTypes.bool,\n  readOnly: PropTypes.bool,\n  autoFocus: PropTypes.bool,\n  minLength: PropTypes.number,\n  placeholder: PropTypes.string,\n  contentAfter: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  loading: PropTypes.bool,\n  props: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n});\n\nconst FieldTypeComponent = {\n  checkbox: CheckboxField,\n  file: FileField,\n  select: SelectField,\n  number: NumberField,\n  textarea: TextAreaField,\n  ace: AceEditorField,\n  content: ContentField,\n};\n\nexport default function DynamicFormField({ form, field, ...otherProps }) {\n  const { name, type, readOnly, autoFocus } = field;\n  const fieldLabel = getFieldLabel(field);\n\n  const fieldProps = {\n    ...field.props,\n    className: \"w-100\",\n    name,\n    type,\n    readOnly,\n    autoFocus,\n    placeholder: field.placeholder,\n    \"data-test\": fieldLabel,\n    ...otherProps,\n  };\n\n  const FieldComponent = get(FieldTypeComponent, type, InputField);\n  return <FieldComponent {...fieldProps} form={form} field={field} />;\n}\n\nDynamicFormField.propTypes = { field: FieldType.isRequired };\n","import React from \"react\";\nimport Checkbox from \"antd/lib/checkbox\";\nimport getFieldLabel from \"../getFieldLabel\";\n\nexport default function CheckboxField({ form, field, ...otherProps }) {\n  const fieldLabel = getFieldLabel(field);\n  return <Checkbox {...otherProps}>{fieldLabel}</Checkbox>;\n}\n","import React from \"react\";\nimport Button from \"antd/lib/button\";\nimport Upload from \"antd/lib/upload\";\nimport UploadOutlinedIcon from \"@ant-design/icons/UploadOutlined\";\n\nexport default function FileField({ form, field, ...otherProps }) {\n  const { name, initialValue } = field;\n  const { getFieldValue } = form;\n  const disabled = getFieldValue(name) !== undefined && getFieldValue(name) !== initialValue;\n\n  return (\n    <Upload {...otherProps} beforeUpload={() => false}>\n      <Button disabled={disabled}>\n        <UploadOutlinedIcon /> Click to upload\n      </Button>\n    </Upload>\n  );\n}\n","import React from \"react\";\nimport Select from \"antd/lib/select\";\n\nexport default function SelectField({ form, field, ...otherProps }) {\n  const { readOnly } = field;\n  return (\n    <Select\n      {...otherProps}\n      optionFilterProp=\"children\"\n      loading={field.loading || false}\n      mode={field.mode}\n      getPopupContainer={trigger => trigger.parentNode}>\n      {field.options &&\n        field.options.map(option => (\n          <Select.Option key={`${option.value}`} value={option.value} disabled={readOnly}>\n            {option.name || option.value}\n          </Select.Option>\n        ))}\n    </Select>\n  );\n}\n","import React from \"react\";\nimport InputNumber from \"antd/lib/input-number\";\n\nexport default function NumberField({ form, field, ...otherProps }) {\n  return <InputNumber {...otherProps} />;\n}\n","import React from \"react\";\nimport Input from \"antd/lib/input\";\n\nexport default function TextAreaField({ form, field, ...otherProps }) {\n  return <Input.TextArea {...otherProps} />;\n}\n","import React from \"react\";\nimport AceEditorInput from \"@/components/AceEditorInput\";\n\nexport default function AceEditorField({ form, field, ...otherProps }) {\n  return <AceEditorInput {...otherProps} />;\n}\n","export default function ContentField({ field }) {\n  return field.content;\n}\n","import React from \"react\";\nimport { each, includes, isUndefined, isEmpty, isNil, map, get, some } from \"lodash\";\n\nfunction orderedInputs(properties, order, targetOptions) {\n  const inputs = new Array(order.length);\n  Object.keys(properties).forEach(key => {\n    const position = order.indexOf(key);\n    const input = {\n      name: key,\n      title: properties[key].title,\n      type: properties[key].type,\n      placeholder: isNil(properties[key].default) ? null : properties[key].default.toString(),\n      required: properties[key].required,\n      extra: properties[key].extra,\n      initialValue: targetOptions[key],\n    };\n\n    if (input.type === \"select\") {\n      input.placeholder = \"Select an option\";\n      input.options = properties[key].options;\n    }\n\n    if (position > -1) {\n      inputs[position] = input;\n    } else {\n      inputs.push(input);\n    }\n  });\n  return inputs;\n}\n\nfunction normalizeSchema(configurationSchema) {\n  each(configurationSchema.properties, (prop, name) => {\n    if (name === \"password\" || name === \"passwd\") {\n      prop.type = \"password\";\n    }\n\n    if (name.endsWith(\"File\")) {\n      prop.type = \"file\";\n    }\n\n    if (prop.type === \"boolean\") {\n      prop.type = \"checkbox\";\n    }\n\n    if (prop.type === \"string\") {\n      prop.type = \"text\";\n    }\n\n    if (!isEmpty(prop.enum)) {\n      prop.type = \"select\";\n      prop.options = map(prop.enum, value => ({ value, name: value }));\n    }\n\n    if (!isEmpty(prop.extendedEnum)) {\n      prop.type = \"select\";\n      prop.options = prop.extendedEnum;\n    }\n\n    prop.required = includes(configurationSchema.required, name);\n    prop.extra = includes(configurationSchema.extra_options, name);\n  });\n\n  configurationSchema.order = configurationSchema.order || [];\n}\n\nfunction setDefaultValueToFields(configurationSchema, options = {}) {\n  const properties = configurationSchema.properties;\n  Object.keys(properties).forEach(key => {\n    const property = properties[key];\n    // set default value for checkboxes\n    if (!isUndefined(property.default) && property.type === \"checkbox\") {\n      options[key] = property.default;\n    }\n    // set default or first value when value has predefined options\n    if (property.type === \"select\") {\n      const optionValues = map(property.options, option => option.value);\n      options[key] = includes(optionValues, property.default) ? property.default : optionValues[0];\n    }\n  });\n}\n\nfunction getFields(type = {}, target = { options: {} }) {\n  const configurationSchema = type.configuration_schema;\n  normalizeSchema(configurationSchema);\n  const hasTargetObject = Object.keys(target.options).length > 0;\n  if (!hasTargetObject) {\n    setDefaultValueToFields(configurationSchema, target.options);\n  }\n\n  const isNewTarget = !target.id;\n  const inputs = [\n    {\n      name: \"name\",\n      title: \"Name\",\n      type: \"text\",\n      required: true,\n      initialValue: target.name,\n      contentAfter: React.createElement(\"hr\"),\n      placeholder: `My ${type.name}`,\n      autoFocus: isNewTarget,\n    },\n    ...orderedInputs(configurationSchema.properties, configurationSchema.order, target.options),\n  ];\n\n  return inputs;\n}\n\nfunction updateTargetWithValues(target, values) {\n  target.name = values.name;\n  Object.keys(values).forEach(key => {\n    if (key !== \"name\") {\n      target.options[key] = values[key];\n    }\n  });\n}\n\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result.substr(reader.result.indexOf(\",\") + 1));\n    reader.onerror = error => reject(error);\n  });\n}\n\nfunction hasFilledExtraField(type, target) {\n  const extraOptions = get(type, \"configuration_schema.extra_options\", []);\n  return some(extraOptions, optionName => {\n    const defaultOptionValue = get(type, [\"configuration_schema\", \"properties\", optionName, \"default\"]);\n    const targetOptionValue = get(target, [\"options\", optionName]);\n    return !isNil(targetOptionValue) && targetOptionValue !== defaultOptionValue;\n  });\n}\n\nexport default {\n  getFields,\n  updateTargetWithValues,\n  getBase64,\n  hasFilledExtraField,\n};\n","import React, { useState, useReducer, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\nimport Form from \"antd/lib/form\";\nimport Button from \"antd/lib/button\";\nimport { includes, isFunction, filter, find, difference, isEmpty, mapValues } from \"lodash\";\nimport notification from \"@/services/notification\";\nimport Collapse from \"@/components/Collapse\";\nimport DynamicFormField, { FieldType } from \"./DynamicFormField\";\nimport getFieldLabel from \"./getFieldLabel\";\nimport helper from \"./dynamicFormHelper\";\n\nimport \"./DynamicForm.less\";\n\nconst ActionType = PropTypes.shape({\n  name: PropTypes.string.isRequired,\n  callback: PropTypes.func.isRequired,\n  type: PropTypes.string,\n  pullRight: PropTypes.bool,\n  disabledWhenDirty: PropTypes.bool,\n});\n\nconst AntdFormType = PropTypes.shape({\n  validateFieldsAndScroll: PropTypes.func,\n});\n\nconst fieldRules = ({ type, required, minLength }) => {\n  const requiredRule = required;\n  const minLengthRule = minLength && includes([\"text\", \"email\", \"password\"], type);\n  const emailTypeRule = type === \"email\";\n\n  return [\n    requiredRule && { required, message: \"This field is required.\" },\n    minLengthRule && { min: minLength, message: \"This field is too short.\" },\n    emailTypeRule && { type: \"email\", message: \"This field must be a valid email.\" },\n  ].filter(rule => rule);\n};\n\nfunction normalizeEmptyValuesToNull(fields, values) {\n  return mapValues(values, (value, key) => {\n    const { initialValue } = find(fields, { name: key }) || {};\n    if ((initialValue === null || initialValue === undefined || initialValue === \"\") && value === \"\") {\n      return null;\n    }\n    return value;\n  });\n}\n\nfunction DynamicFormFields({ fields, feedbackIcons, form }) {\n  return fields.map(field => {\n    const { name, type, initialValue, contentAfter } = field;\n    const fieldLabel = getFieldLabel(field);\n\n    const formItemProps = {\n      name,\n      className: \"m-b-10\",\n      hasFeedback: type !== \"checkbox\" && type !== \"file\" && feedbackIcons,\n      label: type === \"checkbox\" ? \"\" : fieldLabel,\n      rules: fieldRules(field),\n      valuePropName: type === \"checkbox\" ? \"checked\" : \"value\",\n      initialValue,\n    };\n\n    if (type === \"file\") {\n      formItemProps.valuePropName = \"data-value\";\n      formItemProps.getValueFromEvent = e => {\n        if (e && e.fileList[0]) {\n          helper.getBase64(e.file).then(value => {\n            form.setFieldsValue({ [name]: value });\n          });\n        }\n        return undefined;\n      };\n    }\n\n    return (\n      <React.Fragment key={name}>\n        <Form.Item {...formItemProps}>\n          <DynamicFormField field={field} form={form} />\n        </Form.Item>\n        {isFunction(contentAfter) ? contentAfter(form.getFieldValue(name)) : contentAfter}\n      </React.Fragment>\n    );\n  });\n}\n\nDynamicFormFields.propTypes = {\n  fields: PropTypes.arrayOf(FieldType),\n  feedbackIcons: PropTypes.bool,\n  form: AntdFormType.isRequired,\n};\n\nDynamicFormFields.defaultProps = {\n  fields: [],\n  feedbackIcons: false,\n};\n\nconst reducerForActionSet = (state, action) => {\n  if (action.inProgress) {\n    state.add(action.actionName);\n  } else {\n    state.delete(action.actionName);\n  }\n  return new Set(state);\n};\n\nfunction DynamicFormActions({ actions, isFormDirty }) {\n  const [inProgressActions, setActionInProgress] = useReducer(reducerForActionSet, new Set());\n\n  const handleAction = useCallback(action => {\n    const actionName = action.name;\n    if (isFunction(action.callback)) {\n      setActionInProgress({ actionName, inProgress: true });\n      action.callback(() => {\n        setActionInProgress({ actionName, inProgress: false });\n      });\n    }\n  }, []);\n  return actions.map(action => (\n    <Button\n      key={action.name}\n      htmlType=\"button\"\n      className={cx(\"m-t-10\", { \"pull-right\": action.pullRight })}\n      type={action.type}\n      disabled={isFormDirty && action.disableWhenDirty}\n      loading={inProgressActions.has(action.name)}\n      onClick={() => handleAction(action)}>\n      {action.name}\n    </Button>\n  ));\n}\n\nDynamicFormActions.propTypes = {\n  actions: PropTypes.arrayOf(ActionType),\n  isFormDirty: PropTypes.bool,\n};\n\nDynamicFormActions.defaultProps = {\n  actions: [],\n  isFormDirty: false,\n};\n\nexport default function DynamicForm({\n  id,\n  fields,\n  actions,\n  feedbackIcons,\n  hideSubmitButton,\n  defaultShowExtraFields,\n  saveText,\n  onSubmit,\n}) {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [isTouched, setIsTouched] = useState(false);\n  const [showExtraFields, setShowExtraFields] = useState(defaultShowExtraFields);\n  const [form] = Form.useForm();\n  const extraFields = filter(fields, { extra: true });\n  const regularFields = difference(fields, extraFields);\n\n  const handleFinish = useCallback(\n    values => {\n      setIsSubmitting(true);\n      values = normalizeEmptyValuesToNull(fields, values);\n      onSubmit(\n        values,\n        msg => {\n          setIsSubmitting(false);\n          setIsTouched(false); // reset form touched state\n          notification.success(msg);\n        },\n        msg => {\n          setIsSubmitting(false);\n          notification.error(msg);\n        }\n      );\n    },\n    [fields, onSubmit]\n  );\n\n  const handleFinishFailed = useCallback(\n    ({ errorFields }) => {\n      form.scrollToField(errorFields[0].name);\n    },\n    [form]\n  );\n\n  return (\n    <Form\n      form={form}\n      onFieldsChange={() => {\n        setIsTouched(true);\n      }}\n      id={id}\n      className=\"dynamic-form\"\n      layout=\"vertical\"\n      onFinish={handleFinish}\n      onFinishFailed={handleFinishFailed}>\n      <DynamicFormFields fields={regularFields} feedbackIcons={feedbackIcons} form={form} />\n      {!isEmpty(extraFields) && (\n        <div className=\"extra-options\">\n          <Button\n            type=\"dashed\"\n            block\n            className=\"extra-options-button\"\n            onClick={() => setShowExtraFields(currentShowExtraFields => !currentShowExtraFields)}>\n            Additional Settings\n            <i\n              className={cx(\"fa m-l-5\", { \"fa-caret-up\": showExtraFields, \"fa-caret-down\": !showExtraFields })}\n              aria-hidden=\"true\"\n            />\n          </Button>\n          <Collapse collapsed={!showExtraFields} className=\"extra-options-content\">\n            <DynamicFormFields fields={extraFields} feedbackIcons={feedbackIcons} form={form} />\n          </Collapse>\n        </div>\n      )}\n      {!hideSubmitButton && (\n        <Button className=\"w-100 m-t-20\" type=\"primary\" htmlType=\"submit\" disabled={isSubmitting}>\n          {saveText}\n        </Button>\n      )}\n      <DynamicFormActions actions={actions} isFormDirty={isTouched} />\n    </Form>\n  );\n}\n\nDynamicForm.propTypes = {\n  id: PropTypes.string,\n  fields: PropTypes.arrayOf(FieldType),\n  actions: PropTypes.arrayOf(ActionType),\n  feedbackIcons: PropTypes.bool,\n  hideSubmitButton: PropTypes.bool,\n  defaultShowExtraFields: PropTypes.bool,\n  saveText: PropTypes.string,\n  onSubmit: PropTypes.func,\n};\n\nDynamicForm.defaultProps = {\n  id: null,\n  fields: [],\n  actions: [],\n  feedbackIcons: false,\n  hideSubmitButton: false,\n  defaultShowExtraFields: false,\n  saveText: \"Save\",\n  onSubmit: () => {},\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { isEmpty, toUpper, includes, get, uniqueId } from \"lodash\";\nimport Button from \"antd/lib/button\";\nimport List from \"antd/lib/list\";\nimport Modal from \"antd/lib/modal\";\nimport Input from \"antd/lib/input\";\nimport Steps from \"antd/lib/steps\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport Link from \"@/components/Link\";\nimport { PreviewCard } from \"@/components/PreviewCard\";\nimport EmptyState from \"@/components/items-list/components/EmptyState\";\nimport DynamicForm from \"@/components/dynamic-form/DynamicForm\";\nimport helper from \"@/components/dynamic-form/dynamicFormHelper\";\nimport HelpTrigger, { TYPES as HELP_TRIGGER_TYPES } from \"@/components/HelpTrigger\";\n\nconst { Step } = Steps;\nconst { Search } = Input;\n\nconst StepEnum = {\n  SELECT_TYPE: 0,\n  CONFIGURE_IT: 1,\n  DONE: 2,\n};\n\nclass CreateSourceDialog extends React.Component {\n  static propTypes = {\n    dialog: DialogPropType.isRequired,\n    types: PropTypes.arrayOf(PropTypes.object),\n    sourceType: PropTypes.string.isRequired,\n    imageFolder: PropTypes.string.isRequired,\n    helpTriggerPrefix: PropTypes.string,\n    onCreate: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    types: [],\n    helpTriggerPrefix: null,\n  };\n\n  state = {\n    searchText: \"\",\n    selectedType: null,\n    savingSource: false,\n    currentStep: StepEnum.SELECT_TYPE,\n  };\n\n  formId = uniqueId(\"sourceForm\");\n\n  selectType = selectedType => {\n    this.setState({ selectedType, currentStep: StepEnum.CONFIGURE_IT });\n  };\n\n  resetType = () => {\n    if (this.state.currentStep === StepEnum.CONFIGURE_IT) {\n      this.setState({ searchText: \"\", selectedType: null, currentStep: StepEnum.SELECT_TYPE });\n    }\n  };\n\n  createSource = (values, successCallback, errorCallback) => {\n    const { selectedType, savingSource } = this.state;\n    if (!savingSource) {\n      this.setState({ savingSource: true, currentStep: StepEnum.DONE });\n      this.props\n        .onCreate(selectedType, values)\n        .then(data => {\n          successCallback(\"Saved.\");\n          this.props.dialog.close({ success: true, data });\n        })\n        .catch(error => {\n          this.setState({ savingSource: false, currentStep: StepEnum.CONFIGURE_IT });\n          errorCallback(get(error, \"response.data.message\", \"Failed saving.\"));\n        });\n    }\n  };\n\n  renderTypeSelector() {\n    const { types } = this.props;\n    const { searchText } = this.state;\n    const filteredTypes = types.filter(\n      type => isEmpty(searchText) || includes(type.name.toLowerCase(), searchText.toLowerCase())\n    );\n    return (\n      <div className=\"m-t-10\">\n        <Search\n          placeholder=\"Search...\"\n          aria-label=\"Search\"\n          onChange={e => this.setState({ searchText: e.target.value })}\n          autoFocus\n          data-test=\"SearchSource\"\n        />\n        <div className=\"scrollbox p-5 m-t-10\" style={{ minHeight: \"30vh\", maxHeight: \"40vh\" }}>\n          {isEmpty(filteredTypes) ? (\n            <EmptyState className=\"\" />\n          ) : (\n            <List size=\"small\" dataSource={filteredTypes} renderItem={item => this.renderItem(item)} />\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  renderForm() {\n    const { imageFolder, helpTriggerPrefix } = this.props;\n    const { selectedType } = this.state;\n    const fields = helper.getFields(selectedType);\n    const helpTriggerType = `${helpTriggerPrefix}${toUpper(selectedType.type)}`;\n    return (\n      <div>\n        <div className=\"d-flex justify-content-center align-items-center\">\n          <img className=\"p-5\" src={`${imageFolder}/${selectedType.type}.png`} alt={selectedType.name} width=\"48\" />\n          <h4 className=\"m-0\">{selectedType.name}</h4>\n        </div>\n        <div className=\"text-right\">\n          {HELP_TRIGGER_TYPES[helpTriggerType] && (\n            <HelpTrigger className=\"f-13\" type={helpTriggerType}>\n              Setup Instructions <i className=\"fa fa-question-circle\" aria-hidden=\"true\" />\n              <span className=\"sr-only\">(help)</span>\n            </HelpTrigger>\n          )}\n        </div>\n        <DynamicForm id={this.formId} fields={fields} onSubmit={this.createSource} feedbackIcons hideSubmitButton />\n        {selectedType.type === \"databricks\" && (\n          <small>\n            By using the Databricks Data Source you agree to the Databricks JDBC/ODBC{\" \"}\n            <Link href=\"https://databricks.com/spark/odbc-driver-download\" target=\"_blank\" rel=\"noopener noreferrer\">\n              Driver Download Terms and Conditions\n            </Link>\n            .\n          </small>\n        )}\n      </div>\n    );\n  }\n\n  renderItem(item) {\n    const { imageFolder } = this.props;\n    return (\n      <List.Item className=\"p-l-10 p-r-10 clickable\" onClick={() => this.selectType(item)}>\n        <PreviewCard\n          title={item.name}\n          imageUrl={`${imageFolder}/${item.type}.png`}\n          roundedImage={false}\n          data-test=\"PreviewItem\"\n          data-test-type={item.type}>\n          <i className=\"fa fa-angle-double-right\" aria-hidden=\"true\" />\n        </PreviewCard>\n      </List.Item>\n    );\n  }\n\n  render() {\n    const { currentStep, savingSource } = this.state;\n    const { dialog, sourceType } = this.props;\n    return (\n      <Modal\n        {...dialog.props}\n        title={`Create a New ${sourceType}`}\n        footer={\n          currentStep === StepEnum.SELECT_TYPE\n            ? [\n                <Button key=\"cancel\" onClick={() => dialog.dismiss()} data-test=\"CreateSourceCancelButton\">\n                  Cancel\n                </Button>,\n                <Button key=\"submit\" type=\"primary\" disabled>\n                  Create\n                </Button>,\n              ]\n            : [\n                <Button key=\"previous\" onClick={this.resetType}>\n                  Previous\n                </Button>,\n                <Button\n                  key=\"submit\"\n                  htmlType=\"submit\"\n                  form={this.formId}\n                  type=\"primary\"\n                  loading={savingSource}\n                  data-test=\"CreateSourceSaveButton\">\n                  Create\n                </Button>,\n              ]\n        }>\n        <div data-test=\"CreateSourceDialog\">\n          <Steps className=\"hidden-xs m-b-10\" size=\"small\" current={currentStep} progressDot>\n            {currentStep === StepEnum.CONFIGURE_IT ? (\n              <Step title={<a>Type Selection</a>} className=\"clickable\" onClick={this.resetType} />\n            ) : (\n              <Step title=\"Type Selection\" />\n            )}\n            <Step title=\"Configuration\" />\n            <Step title=\"Done\" />\n          </Steps>\n          {currentStep === StepEnum.SELECT_TYPE && this.renderTypeSelector()}\n          {currentStep !== StepEnum.SELECT_TYPE && this.renderForm()}\n        </div>\n      </Modal>\n    );\n  }\n}\n\nexport default wrapDialog(CreateSourceDialog);\n","import React from \"react\";\nimport Menu from \"antd/lib/menu\";\nimport PageHeader from \"@/components/PageHeader\";\nimport Link from \"@/components/Link\";\nimport location from \"@/services/location\";\nimport settingsMenu from \"@/services/settingsMenu\";\n\nfunction wrapSettingsTab(id, options, WrappedComponent) {\n  settingsMenu.add(id, options);\n\n  return function SettingsTab(props) {\n    const activeItem = settingsMenu.getActiveItem(location.path);\n    return (\n      <div className=\"settings-screen\">\n        <div className=\"container\">\n          <PageHeader title=\"Settings\" />\n          <div className=\"bg-white tiled\">\n            <Menu selectedKeys={[activeItem && activeItem.title]} selectable={false} mode=\"horizontal\">\n              {settingsMenu.getAvailableItems().map(item => (\n                <Menu.Item key={item.title}>\n                  <Link href={item.path} data-test=\"SettingsScreenItem\">\n                    {item.title}\n                  </Link>\n                </Menu.Item>\n              ))}\n            </Menu>\n            <div className=\"p-15\">\n              <div>\n                <WrappedComponent {...props} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n}\n\nexport default wrapSettingsTab;\n","import { has, map, isObject } from \"lodash\";\nimport { axios } from \"@/services/axios\";\nimport { fetchDataFromJob } from \"@/services/query-result\";\n\nexport const SCHEMA_NOT_SUPPORTED = 1;\nexport const SCHEMA_LOAD_ERROR = 2;\nexport const IMG_ROOT = \"static/images/db-logos\";\n\nfunction mapSchemaColumnsToObject(columns) {\n  return map(columns, column => (isObject(column) ? column : { name: column }));\n}\n\nconst DataSource = {\n  query: () => axios.get(\"api/data_sources\"),\n  get: ({ id }) => axios.get(`api/data_sources/${id}`),\n  types: () => axios.get(\"api/data_sources/types\"),\n  create: data => axios.post(`api/data_sources`, data),\n  save: data => axios.post(`api/data_sources/${data.id}`, data),\n  test: data => axios.post(`api/data_sources/${data.id}/test`),\n  delete: ({ id }) => axios.delete(`api/data_sources/${id}`),\n  fetchSchema: (data, refresh = false) => {\n    const params = {};\n\n    if (refresh) {\n      params.refresh = true;\n    }\n\n    return axios\n      .get(`api/data_sources/${data.id}/schema`, { params })\n      .then(data => {\n        if (has(data, \"job\")) {\n          return fetchDataFromJob(data.job.id).catch(error =>\n            error.code === SCHEMA_NOT_SUPPORTED ? [] : Promise.reject(new Error(data.job.error))\n          );\n        }\n        return has(data, \"schema\") ? data.schema : Promise.reject();\n      })\n      .then(tables => map(tables, table => ({ ...table, columns: mapSchemaColumnsToObject(table.columns) })));\n  },\n};\n\nexport default DataSource;\n","import { isEmpty, reject } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Button from \"antd/lib/button\";\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport navigateTo from \"@/components/ApplicationArea/navigateTo\";\nimport CardsList from \"@/components/cards-list/CardsList\";\nimport LoadingState from \"@/components/items-list/components/LoadingState\";\nimport CreateSourceDialog from \"@/components/CreateSourceDialog\";\nimport DynamicComponent, { registerComponent } from \"@/components/DynamicComponent\";\nimport helper from \"@/components/dynamic-form/dynamicFormHelper\";\nimport wrapSettingsTab from \"@/components/SettingsWrapper\";\nimport PlainButton from \"@/components/PlainButton\";\n\nimport DataSource, { IMG_ROOT } from \"@/services/data-source\";\nimport { policy } from \"@/services/policy\";\nimport recordEvent from \"@/services/recordEvent\";\nimport routes from \"@/services/routes\";\n\nexport function DataSourcesListComponent({ dataSources, onClickCreate }) {\n  const items = dataSources.map(dataSource => ({\n    title: dataSource.name,\n    imgSrc: `${IMG_ROOT}/${dataSource.type}.png`,\n    href: `data_sources/${dataSource.id}`,\n  }));\n\n  return isEmpty(dataSources) ? (\n    <div className=\"text-center\">\n      There are no data sources yet.\n      {policy.isCreateDataSourceEnabled() && (\n        <div className=\"m-t-5\">\n          <PlainButton type=\"link\" onClick={onClickCreate} data-test=\"CreateDataSourceLink\">\n            Click here\n          </PlainButton>{\" \"}\n          to add one.\n        </div>\n      )}\n    </div>\n  ) : (\n    <CardsList items={items} />\n  );\n}\n\nregisterComponent(\"DataSourcesListComponent\", DataSourcesListComponent);\n\nclass DataSourcesList extends React.Component {\n  static propTypes = {\n    isNewDataSourcePage: PropTypes.bool,\n    onError: PropTypes.func,\n  };\n\n  static defaultProps = {\n    isNewDataSourcePage: false,\n    onError: () => {},\n  };\n\n  state = {\n    dataSourceTypes: [],\n    dataSources: [],\n    loading: true,\n  };\n\n  newDataSourceDialog = null;\n\n  componentDidMount() {\n    Promise.all([DataSource.query(), DataSource.types()])\n      .then(values =>\n        this.setState(\n          {\n            dataSources: values[0],\n            dataSourceTypes: values[1],\n            loading: false,\n          },\n          () => {\n            // all resources are loaded in state\n            if (this.props.isNewDataSourcePage) {\n              if (policy.canCreateDataSource()) {\n                this.showCreateSourceDialog();\n              } else {\n                navigateTo(\"data_sources\", true);\n              }\n            }\n          }\n        )\n      )\n      .catch(error => this.props.onError(error));\n  }\n\n  componentWillUnmount() {\n    if (this.newDataSourceDialog) {\n      this.newDataSourceDialog.dismiss();\n    }\n  }\n\n  createDataSource = (selectedType, values) => {\n    const target = { options: {}, type: selectedType.type };\n    helper.updateTargetWithValues(target, values);\n\n    return DataSource.create(target).then(dataSource => {\n      this.setState({ loading: true });\n      DataSource.query().then(dataSources => this.setState({ dataSources, loading: false }));\n      return dataSource;\n    });\n  };\n\n  showCreateSourceDialog = () => {\n    recordEvent(\"view\", \"page\", \"data_sources/new\");\n    this.newDataSourceDialog = CreateSourceDialog.showModal({\n      types: reject(this.state.dataSourceTypes, \"deprecated\"),\n      sourceType: \"Data Source\",\n      imageFolder: IMG_ROOT,\n      helpTriggerPrefix: \"DS_\",\n      onCreate: this.createDataSource,\n    });\n\n    this.newDataSourceDialog\n      .onClose((result = {}) => {\n        this.newDataSourceDialog = null;\n        if (result.success) {\n          navigateTo(`data_sources/${result.data.id}`);\n        }\n      })\n      .onDismiss(() => {\n        this.newDataSourceDialog = null;\n        navigateTo(\"data_sources\", true);\n      });\n  };\n\n  render() {\n    const newDataSourceProps = {\n      type: \"primary\",\n      onClick: policy.isCreateDataSourceEnabled() ? this.showCreateSourceDialog : null,\n      disabled: !policy.isCreateDataSourceEnabled(),\n      \"data-test\": \"CreateDataSourceButton\",\n    };\n\n    return (\n      <div>\n        <div className=\"m-b-15\">\n          <Button {...newDataSourceProps}>\n            <i className=\"fa fa-plus m-r-5\" aria-hidden=\"true\" />\n            New Data Source\n          </Button>\n          <DynamicComponent name=\"DataSourcesListExtra\" />\n        </div>\n        {this.state.loading ? (\n          <LoadingState className=\"\" />\n        ) : (\n          <DynamicComponent\n            name=\"DataSourcesListComponent\"\n            dataSources={this.state.dataSources}\n            onClickCreate={this.showCreateSourceDialog}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst DataSourcesListPage = wrapSettingsTab(\n  \"DataSources.List\",\n  {\n    permission: \"admin\",\n    title: \"Data Sources\",\n    path: \"data_sources\",\n    order: 1,\n  },\n  DataSourcesList\n);\n\nroutes.register(\n  \"DataSources.List\",\n  routeWithUserSession({\n    path: \"/data_sources\",\n    title: \"Data Sources\",\n    render: pageProps => <DataSourcesListPage {...pageProps} />,\n  })\n);\nroutes.register(\n  \"DataSources.New\",\n  routeWithUserSession({\n    path: \"/data_sources/new\",\n    title: \"Data Sources\",\n    render: pageProps => <DataSourcesListPage {...pageProps} isNewDataSourcePage />,\n  })\n);\n","import { get, find, toUpper } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Modal from \"antd/lib/modal\";\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport navigateTo from \"@/components/ApplicationArea/navigateTo\";\nimport LoadingState from \"@/components/items-list/components/LoadingState\";\nimport DynamicForm from \"@/components/dynamic-form/DynamicForm\";\nimport helper from \"@/components/dynamic-form/dynamicFormHelper\";\nimport HelpTrigger, { TYPES as HELP_TRIGGER_TYPES } from \"@/components/HelpTrigger\";\nimport wrapSettingsTab from \"@/components/SettingsWrapper\";\n\nimport DataSource, { IMG_ROOT } from \"@/services/data-source\";\nimport notification from \"@/services/notification\";\nimport routes from \"@/services/routes\";\n\nclass EditDataSource extends React.Component {\n  static propTypes = {\n    dataSourceId: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n  };\n\n  static defaultProps = {\n    onError: () => {},\n  };\n\n  state = {\n    dataSource: null,\n    type: null,\n    loading: true,\n  };\n\n  componentDidMount() {\n    DataSource.get({ id: this.props.dataSourceId })\n      .then(dataSource => {\n        const { type } = dataSource;\n        this.setState({ dataSource });\n        DataSource.types().then(types => this.setState({ type: find(types, { type }), loading: false }));\n      })\n      .catch(error => this.props.onError(error));\n  }\n\n  saveDataSource = (values, successCallback, errorCallback) => {\n    const { dataSource } = this.state;\n    helper.updateTargetWithValues(dataSource, values);\n    DataSource.save(dataSource)\n      .then(() => successCallback(\"Saved.\"))\n      .catch(error => {\n        const message = get(error, \"response.data.message\", \"Failed saving.\");\n        errorCallback(message);\n      });\n  };\n\n  deleteDataSource = callback => {\n    const { dataSource } = this.state;\n\n    const doDelete = () => {\n      DataSource.delete(dataSource)\n        .then(() => {\n          notification.success(\"Data source deleted successfully.\");\n          navigateTo(\"data_sources\");\n        })\n        .catch(() => {\n          callback();\n        });\n    };\n\n    Modal.confirm({\n      title: \"Delete Data Source\",\n      content: \"Are you sure you want to delete this data source?\",\n      okText: \"Delete\",\n      okType: \"danger\",\n      onOk: doDelete,\n      onCancel: callback,\n      maskClosable: true,\n      autoFocusButton: null,\n    });\n  };\n\n  testConnection = callback => {\n    const { dataSource } = this.state;\n    DataSource.test({ id: dataSource.id })\n      .then(httpResponse => {\n        if (httpResponse.ok) {\n          notification.success(\"Success\");\n        } else {\n          notification.error(\"Connection Test Failed:\", httpResponse.message, { duration: 10 });\n        }\n        callback();\n      })\n      .catch(() => {\n        notification.error(\n          \"Connection Test Failed:\",\n          \"Unknown error occurred while performing connection test. Please try again later.\",\n          { duration: 10 }\n        );\n        callback();\n      });\n  };\n\n  renderForm() {\n    const { dataSource, type } = this.state;\n    const fields = helper.getFields(type, dataSource);\n    const helpTriggerType = `DS_${toUpper(type.type)}`;\n    const formProps = {\n      fields,\n      type,\n      actions: [\n        { name: \"Delete\", type: \"danger\", callback: this.deleteDataSource },\n        { name: \"Test Connection\", pullRight: true, callback: this.testConnection, disableWhenDirty: true },\n      ],\n      onSubmit: this.saveDataSource,\n      feedbackIcons: true,\n      defaultShowExtraFields: helper.hasFilledExtraField(type, dataSource),\n    };\n\n    return (\n      <div className=\"row\" data-test=\"DataSource\">\n        <div className=\"text-right m-r-10\">\n          {HELP_TRIGGER_TYPES[helpTriggerType] && (\n            <HelpTrigger className=\"f-13\" type={helpTriggerType}>\n              Setup Instructions <i className=\"fa fa-question-circle\" aria-hidden=\"true\" />\n              <span className=\"sr-only\">(help)</span>\n            </HelpTrigger>\n          )}\n        </div>\n        <div className=\"text-center m-b-10\">\n          <img className=\"p-5\" src={`${IMG_ROOT}/${type.type}.png`} alt={type.name} width=\"64\" />\n          <h3 className=\"m-0\">{type.name}</h3>\n        </div>\n        <div className=\"col-md-4 col-md-offset-4 m-b-10\">\n          <DynamicForm {...formProps} />\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return this.state.loading ? <LoadingState className=\"\" /> : this.renderForm();\n  }\n}\n\nconst EditDataSourcePage = wrapSettingsTab(\"DataSources.Edit\", null, EditDataSource);\n\nroutes.register(\n  \"DataSources.Edit\",\n  routeWithUserSession({\n    path: \"/data_sources/:dataSourceId\",\n    title: \"Data Sources\",\n    render: pageProps => <EditDataSourcePage {...pageProps} />,\n  })\n);\n","import { isEmpty, reject } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Button from \"antd/lib/button\";\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport navigateTo from \"@/components/ApplicationArea/navigateTo\";\nimport CardsList from \"@/components/cards-list/CardsList\";\nimport LoadingState from \"@/components/items-list/components/LoadingState\";\nimport CreateSourceDialog from \"@/components/CreateSourceDialog\";\nimport helper from \"@/components/dynamic-form/dynamicFormHelper\";\nimport wrapSettingsTab from \"@/components/SettingsWrapper\";\nimport PlainButton from \"@/components/PlainButton\";\n\nimport Destination, { IMG_ROOT } from \"@/services/destination\";\nimport { policy } from \"@/services/policy\";\nimport routes from \"@/services/routes\";\n\nclass DestinationsList extends React.Component {\n  static propTypes = {\n    isNewDestinationPage: PropTypes.bool,\n    onError: PropTypes.func,\n  };\n\n  static defaultProps = {\n    isNewDestinationPage: false,\n    onError: () => {},\n  };\n\n  state = {\n    destinationTypes: [],\n    destinations: [],\n    loading: true,\n  };\n\n  componentDidMount() {\n    Promise.all([Destination.query(), Destination.types()])\n      .then(values =>\n        this.setState(\n          {\n            destinations: values[0],\n            destinationTypes: values[1],\n            loading: false,\n          },\n          () => {\n            // all resources are loaded in state\n            if (this.props.isNewDestinationPage) {\n              if (policy.canCreateDestination()) {\n                this.showCreateSourceDialog();\n              } else {\n                navigateTo(\"destinations\", true);\n              }\n            }\n          }\n        )\n      )\n      .catch(error => this.props.onError(error));\n  }\n\n  createDestination = (selectedType, values) => {\n    const target = { options: {}, type: selectedType.type };\n    helper.updateTargetWithValues(target, values);\n\n    return Destination.create(target).then(destination => {\n      this.setState({ loading: true });\n      Destination.query().then(destinations => this.setState({ destinations, loading: false }));\n      return destination;\n    });\n  };\n\n  showCreateSourceDialog = () => {\n    CreateSourceDialog.showModal({\n      types: reject(this.state.destinationTypes, \"deprecated\"),\n      sourceType: \"Alert Destination\",\n      imageFolder: IMG_ROOT,\n      onCreate: this.createDestination,\n    })\n      .onClose((result = {}) => {\n        if (result.success) {\n          navigateTo(`destinations/${result.data.id}`);\n        }\n      })\n      .onDismiss(() => {\n        navigateTo(\"destinations\", true);\n      });\n  };\n\n  renderDestinations() {\n    const { destinations } = this.state;\n    const items = destinations.map(destination => ({\n      title: destination.name,\n      imgSrc: `${IMG_ROOT}/${destination.type}.png`,\n      href: `destinations/${destination.id}`,\n    }));\n\n    return isEmpty(destinations) ? (\n      <div className=\"text-center\">\n        There are no alert destinations yet.\n        {policy.isCreateDestinationEnabled() && (\n          <div className=\"m-t-5\">\n            <PlainButton type=\"link\" onClick={this.showCreateSourceDialog}>\n              Click here\n            </PlainButton>{\" \"}\n            to add one.\n          </div>\n        )}\n      </div>\n    ) : (\n      <CardsList items={items} />\n    );\n  }\n\n  render() {\n    const newDestinationProps = {\n      type: \"primary\",\n      onClick: policy.isCreateDestinationEnabled() ? this.showCreateSourceDialog : null,\n      disabled: !policy.isCreateDestinationEnabled(),\n    };\n\n    return (\n      <div>\n        <div className=\"m-b-15\">\n          <Button {...newDestinationProps}>\n            <i className=\"fa fa-plus m-r-5\" aria-hidden=\"true\" />\n            New Alert Destination\n          </Button>\n        </div>\n        {this.state.loading ? <LoadingState className=\"\" /> : this.renderDestinations()}\n      </div>\n    );\n  }\n}\n\nconst DestinationsListPage = wrapSettingsTab(\n  \"AlertDestinations.List\",\n  {\n    permission: \"admin\",\n    title: \"Alert Destinations\",\n    path: \"destinations\",\n    order: 4,\n  },\n  DestinationsList\n);\n\nroutes.register(\n  \"AlertDestinations.List\",\n  routeWithUserSession({\n    path: \"/destinations\",\n    title: \"Alert Destinations\",\n    render: pageProps => <DestinationsListPage {...pageProps} />,\n  })\n);\nroutes.register(\n  \"AlertDestinations.New\",\n  routeWithUserSession({\n    path: \"/destinations/new\",\n    title: \"Alert Destinations\",\n    render: pageProps => <DestinationsListPage {...pageProps} isNewDestinationPage />,\n  })\n);\n","import { get, find } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Modal from \"antd/lib/modal\";\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport navigateTo from \"@/components/ApplicationArea/navigateTo\";\nimport LoadingState from \"@/components/items-list/components/LoadingState\";\nimport DynamicForm from \"@/components/dynamic-form/DynamicForm\";\nimport helper from \"@/components/dynamic-form/dynamicFormHelper\";\nimport wrapSettingsTab from \"@/components/SettingsWrapper\";\n\nimport Destination, { IMG_ROOT } from \"@/services/destination\";\nimport notification from \"@/services/notification\";\nimport routes from \"@/services/routes\";\n\nclass EditDestination extends React.Component {\n  static propTypes = {\n    destinationId: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n  };\n\n  static defaultProps = {\n    onError: () => {},\n  };\n\n  state = {\n    destination: null,\n    type: null,\n    loading: true,\n  };\n\n  componentDidMount() {\n    Destination.get({ id: this.props.destinationId })\n      .then(destination => {\n        const { type } = destination;\n        this.setState({ destination });\n        Destination.types().then(types => this.setState({ type: find(types, { type }), loading: false }));\n      })\n      .catch(error => this.props.onError(error));\n  }\n\n  saveDestination = (values, successCallback, errorCallback) => {\n    const { destination } = this.state;\n    helper.updateTargetWithValues(destination, values);\n    Destination.save(destination)\n      .then(() => successCallback(\"Saved.\"))\n      .catch(error => {\n        const message = get(error, \"response.data.message\", \"Failed saving.\");\n        errorCallback(message);\n      });\n  };\n\n  deleteDestination = callback => {\n    const { destination } = this.state;\n\n    const doDelete = () => {\n      Destination.delete(destination)\n        .then(() => {\n          notification.success(\"Alert destination deleted successfully.\");\n          navigateTo(\"destinations\");\n        })\n        .catch(() => {\n          callback();\n        });\n    };\n\n    Modal.confirm({\n      title: \"Delete Alert Destination\",\n      content: \"Are you sure you want to delete this alert destination?\",\n      okText: \"Delete\",\n      okType: \"danger\",\n      onOk: doDelete,\n      onCancel: callback,\n      maskClosable: true,\n      autoFocusButton: null,\n    });\n  };\n\n  renderForm() {\n    const { destination, type } = this.state;\n    const fields = helper.getFields(type, destination);\n    const formProps = {\n      fields,\n      type,\n      actions: [{ name: \"Delete\", type: \"danger\", callback: this.deleteDestination }],\n      onSubmit: this.saveDestination,\n      defaultShowExtraFields: helper.hasFilledExtraField(type, destination),\n      feedbackIcons: true,\n    };\n\n    return (\n      <div className=\"row\" data-test=\"Destination\">\n        <div className=\"text-center m-b-10\">\n          <img className=\"p-5\" src={`${IMG_ROOT}/${type.type}.png`} alt={type.name} width=\"64\" />\n          <h3 className=\"m-0\">{type.name}</h3>\n        </div>\n        <div className=\"col-md-4 col-md-offset-4 m-b-10\">\n          <DynamicForm {...formProps} />\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return this.state.loading ? <LoadingState className=\"\" /> : this.renderForm();\n  }\n}\n\nconst EditDestinationPage = wrapSettingsTab(\"AlertDestinations.Edit\", null, EditDestination);\n\nroutes.register(\n  \"AlertDestinations.Edit\",\n  routeWithUserSession({\n    path: \"/destinations/:destinationId\",\n    title: \"Alert Destinations\",\n    render: pageProps => <EditDestinationPage {...pageProps} />,\n  })\n);\n","import React from \"react\";\nimport Modal from \"antd/lib/modal\";\nimport Input from \"antd/lib/input\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\n\nclass CreateGroupDialog extends React.Component {\n  static propTypes = {\n    dialog: DialogPropType.isRequired,\n  };\n\n  state = {\n    name: \"\",\n  };\n\n  save = () => {\n    this.props.dialog.close({\n      name: this.state.name,\n    });\n  };\n\n  render() {\n    const { dialog } = this.props;\n    return (\n      <Modal {...dialog.props} title=\"Create a New Group\" okText=\"Create\" onOk={() => this.save()}>\n        <Input\n          className=\"form-control\"\n          defaultValue={this.state.name}\n          onChange={event => this.setState({ name: event.target.value })}\n          onPressEnter={() => this.save()}\n          placeholder=\"Group Name\"\n          aria-label=\"Group name\"\n          autoFocus\n        />\n      </Modal>\n    );\n  }\n}\n\nexport default wrapDialog(CreateGroupDialog);\n","import { axios } from \"@/services/axios\";\n\nconst Group = {\n  query: () => axios.get(\"api/groups\"),\n  get: ({ id }) => axios.get(`api/groups/${id}`),\n  create: data => axios.post(`api/groups`, data),\n  save: data => axios.post(`api/groups/${data.id}`, data),\n  delete: data => axios.delete(`api/groups/${data.id}`),\n  members: ({ id }) => axios.get(`api/groups/${id}/members`),\n  addMember: ({ id }, data) => axios.post(`api/groups/${id}/members`, data),\n  removeMember: ({ id, userId }) => axios.delete(`api/groups/${id}/members/${userId}`),\n  dataSources: ({ id }) => axios.get(`api/groups/${id}/data_sources`),\n  addDataSource: ({ id }, data) => axios.post(`api/groups/${id}/data_sources`, data),\n  removeDataSource: ({ id, dataSourceId }) => axios.delete(`api/groups/${id}/data_sources/${dataSourceId}`),\n  updateDataSource: ({ id, dataSourceId }, data) => axios.post(`api/groups/${id}/data_sources/${dataSourceId}`, data),\n};\n\nexport default Group;\n","import { isString } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"antd/lib/button\";\nimport Modal from \"antd/lib/modal\";\nimport Tooltip from \"@/components/Tooltip\";\nimport notification from \"@/services/notification\";\nimport Group from \"@/services/group\";\n\nfunction deleteGroup(event, group, onGroupDeleted) {\n  Modal.confirm({\n    title: \"Delete Group\",\n    content: \"Are you sure you want to delete this group?\",\n    okText: \"Yes\",\n    okType: \"danger\",\n    cancelText: \"No\",\n    onOk: () => {\n      Group.delete(group).then(() => {\n        notification.success(\"Group deleted successfully.\");\n        onGroupDeleted();\n      });\n    },\n  });\n}\n\nexport default function DeleteGroupButton({ group, title, onClick, children, ...props }) {\n  if (!group) {\n    return null;\n  }\n  const button = (\n    <Button {...props} type=\"danger\" onClick={event => deleteGroup(event, group, onClick)}>\n      {children}\n    </Button>\n  );\n\n  if (isString(title) && title !== \"\") {\n    return (\n      <Tooltip placement=\"top\" title={title} mouseLeaveDelay={0}>\n        {button}\n      </Tooltip>\n    );\n  }\n\n  return button;\n}\n\nDeleteGroupButton.propTypes = {\n  group: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  title: PropTypes.string,\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n};\n\nDeleteGroupButton.defaultProps = {\n  group: null,\n  title: null,\n  onClick: () => {},\n  children: null,\n};\n","import React from \"react\";\n\nimport Button from \"antd/lib/button\";\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport Link from \"@/components/Link\";\nimport navigateTo from \"@/components/ApplicationArea/navigateTo\";\nimport Paginator from \"@/components/Paginator\";\n\nimport { wrap as itemsList, ControllerType } from \"@/components/items-list/ItemsList\";\nimport { ResourceItemsSource } from \"@/components/items-list/classes/ItemsSource\";\nimport { StateStorage } from \"@/components/items-list/classes/StateStorage\";\n\nimport LoadingState from \"@/components/items-list/components/LoadingState\";\nimport EmptyState from \"@/components/items-list/components/EmptyState\";\nimport ItemsTable, { Columns } from \"@/components/items-list/components/ItemsTable\";\n\nimport CreateGroupDialog from \"@/components/groups/CreateGroupDialog\";\nimport DeleteGroupButton from \"@/components/groups/DeleteGroupButton\";\nimport wrapSettingsTab from \"@/components/SettingsWrapper\";\n\nimport Group from \"@/services/group\";\nimport { currentUser } from \"@/services/auth\";\nimport routes from \"@/services/routes\";\n\nclass GroupsList extends React.Component {\n  static propTypes = {\n    controller: ControllerType.isRequired,\n  };\n\n  listColumns = [\n    Columns.custom(\n      (text, group) => (\n        <div>\n          <Link href={\"groups/\" + group.id}>{group.name}</Link>\n          {group.type === \"builtin\" && <span className=\"label label-default m-l-10\">built-in</span>}\n        </div>\n      ),\n      {\n        field: \"name\",\n        width: null,\n      }\n    ),\n    Columns.custom(\n      (text, group) => (\n        <Button.Group>\n          <Link.Button href={`groups/${group.id}`}>Members</Link.Button>\n          {currentUser.isAdmin && <Link.Button href={`groups/${group.id}/data_sources`}>Data Sources</Link.Button>}\n        </Button.Group>\n      ),\n      {\n        width: \"1%\",\n        className: \"text-nowrap\",\n      }\n    ),\n    Columns.custom(\n      (text, group) => {\n        const canRemove = group.type !== \"builtin\";\n        return (\n          <DeleteGroupButton\n            className=\"w-100\"\n            disabled={!canRemove}\n            group={group}\n            title={canRemove ? null : \"Cannot delete built-in group\"}\n            onClick={() => this.onGroupDeleted()}>\n            Delete\n          </DeleteGroupButton>\n        );\n      },\n      {\n        width: \"1%\",\n        className: \"text-nowrap p-l-0\",\n        isAvailable: () => currentUser.isAdmin,\n      }\n    ),\n  ];\n\n  createGroup = () => {\n    CreateGroupDialog.showModal().onClose(group =>\n      Group.create(group).then(newGroup => navigateTo(`groups/${newGroup.id}`))\n    );\n  };\n\n  onGroupDeleted = () => {\n    this.props.controller.updatePagination({ page: 1 });\n    this.props.controller.update();\n  };\n\n  render() {\n    const { controller } = this.props;\n\n    return (\n      <div data-test=\"GroupList\">\n        {currentUser.isAdmin && (\n          <div className=\"m-b-15\">\n            <Button type=\"primary\" onClick={this.createGroup}>\n              <i className=\"fa fa-plus m-r-5\" aria-hidden=\"true\" />\n              New Group\n            </Button>\n          </div>\n        )}\n\n        {!controller.isLoaded && <LoadingState className=\"\" />}\n        {controller.isLoaded && controller.isEmpty && <EmptyState className=\"\" />}\n        {controller.isLoaded && !controller.isEmpty && (\n          <div className=\"table-responsive\">\n            <ItemsTable\n              items={controller.pageItems}\n              columns={this.listColumns}\n              showHeader={false}\n              context={this.actions}\n              orderByField={controller.orderByField}\n              orderByReverse={controller.orderByReverse}\n              toggleSorting={controller.toggleSorting}\n            />\n            <Paginator\n              showPageSizeSelect\n              totalCount={controller.totalItemsCount}\n              pageSize={controller.itemsPerPage}\n              onPageSizeChange={itemsPerPage => controller.updatePagination({ itemsPerPage })}\n              page={controller.page}\n              onChange={page => controller.updatePagination({ page })}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst GroupsListPage = wrapSettingsTab(\n  \"Groups.List\",\n  {\n    permission: \"list_users\",\n    title: \"Groups\",\n    path: \"groups\",\n    order: 3,\n  },\n  itemsList(\n    GroupsList,\n    () =>\n      new ResourceItemsSource({\n        isPlainList: true,\n        getRequest() {\n          return {};\n        },\n        getResource() {\n          return Group.query.bind(Group);\n        },\n      }),\n    () => new StateStorage({ orderByField: \"name\", itemsPerPage: 10 })\n  )\n);\n\nroutes.register(\n  \"Groups.List\",\n  routeWithUserSession({\n    path: \"/groups\",\n    title: \"Groups\",\n    render: pageProps => <GroupsListPage {...pageProps} currentPage=\"groups\" />,\n  })\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport EditInPlace from \"@/components/EditInPlace\";\nimport { currentUser } from \"@/services/auth\";\nimport Group from \"@/services/group\";\n\nfunction updateGroupName(group, name, onChange) {\n  group.name = name;\n  Group.save(group);\n  onChange();\n}\n\nexport default function GroupName({ group, onChange, ...props }) {\n  if (!group) {\n    return null;\n  }\n\n  const canEdit = currentUser.isAdmin && group.type !== \"builtin\";\n\n  return (\n    <h3 {...props}>\n      <EditInPlace\n        className=\"edit-in-place\"\n        isEditable={canEdit}\n        ignoreBlanks\n        onDone={name => updateGroupName(group, name, onChange)}\n        value={group.name}\n      />\n    </h3>\n  );\n}\n\nGroupName.propTypes = {\n  group: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n  }),\n  onChange: PropTypes.func,\n};\n\nGroupName.defaultProps = {\n  group: null,\n  onChange: () => {},\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"antd/lib/button\";\nimport Divider from \"antd/lib/divider\";\n\nimport * as Sidebar from \"@/components/items-list/components/Sidebar\";\nimport { ControllerType } from \"@/components/items-list/ItemsList\";\nimport DeleteGroupButton from \"./DeleteGroupButton\";\n\nimport { currentUser } from \"@/services/auth\";\n\nexport default function DetailsPageSidebar({\n  controller,\n  group,\n  items,\n  canAddMembers,\n  onAddMembersClick,\n  canAddDataSources,\n  onAddDataSourcesClick,\n  onGroupDeleted,\n}) {\n  const canRemove = group && currentUser.isAdmin && group.type !== \"builtin\";\n\n  return (\n    <React.Fragment>\n      <Sidebar.Menu items={items} selected={controller.params.currentPage} />\n      {canAddMembers && (\n        <Button className=\"w-100 m-t-5\" type=\"primary\" onClick={onAddMembersClick}>\n          <i className=\"fa fa-plus m-r-5\" aria-hidden=\"true\" />\n          Add Members\n        </Button>\n      )}\n      {canAddDataSources && (\n        <Button className=\"w-100 m-t-5\" type=\"primary\" onClick={onAddDataSourcesClick}>\n          <i className=\"fa fa-plus m-r-5\" aria-hidden=\"true\" />\n          Add Data Sources\n        </Button>\n      )}\n      {canRemove && (\n        <React.Fragment>\n          <Divider dashed className=\"m-t-10 m-b-10\" />\n          <DeleteGroupButton className=\"w-100\" group={group} onClick={onGroupDeleted}>\n            Delete Group\n          </DeleteGroupButton>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n\nDetailsPageSidebar.propTypes = {\n  controller: ControllerType.isRequired,\n  group: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  items: PropTypes.array.isRequired, // eslint-disable-line react/forbid-prop-types\n\n  canAddMembers: PropTypes.bool,\n  onAddMembersClick: PropTypes.func,\n\n  canAddDataSources: PropTypes.bool,\n  onAddDataSourcesClick: PropTypes.func,\n\n  onGroupDeleted: PropTypes.func,\n};\n\nDetailsPageSidebar.defaultProps = {\n  group: null,\n\n  canAddMembers: false,\n  onAddMembersClick: null,\n\n  canAddDataSources: false,\n  onAddDataSourcesClick: null,\n\n  onGroupDeleted: null,\n};\n","import { filter, map, includes, toLower } from \"lodash\";\nimport React from \"react\";\nimport Button from \"antd/lib/button\";\nimport Dropdown from \"antd/lib/dropdown\";\nimport Menu from \"antd/lib/menu\";\nimport DownOutlinedIcon from \"@ant-design/icons/DownOutlined\";\n\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport navigateTo from \"@/components/ApplicationArea/navigateTo\";\nimport Paginator from \"@/components/Paginator\";\n\nimport { wrap as itemsList, ControllerType } from \"@/components/items-list/ItemsList\";\nimport { ResourceItemsSource } from \"@/components/items-list/classes/ItemsSource\";\nimport { StateStorage } from \"@/components/items-list/classes/StateStorage\";\n\nimport LoadingState from \"@/components/items-list/components/LoadingState\";\nimport ItemsTable, { Columns } from \"@/components/items-list/components/ItemsTable\";\nimport SelectItemsDialog from \"@/components/SelectItemsDialog\";\nimport { DataSourcePreviewCard } from \"@/components/PreviewCard\";\n\nimport GroupName from \"@/components/groups/GroupName\";\nimport ListItemAddon from \"@/components/groups/ListItemAddon\";\nimport Sidebar from \"@/components/groups/DetailsPageSidebar\";\nimport Layout from \"@/components/layouts/ContentWithSidebar\";\nimport wrapSettingsTab from \"@/components/SettingsWrapper\";\n\nimport notification from \"@/services/notification\";\nimport { currentUser } from \"@/services/auth\";\nimport Group from \"@/services/group\";\nimport DataSource from \"@/services/data-source\";\nimport routes from \"@/services/routes\";\n\nclass GroupDataSources extends React.Component {\n  static propTypes = {\n    controller: ControllerType.isRequired,\n  };\n\n  groupId = parseInt(this.props.controller.params.groupId, 10);\n\n  group = null;\n\n  sidebarMenu = [\n    {\n      key: \"users\",\n      href: `groups/${this.groupId}`,\n      title: \"Members\",\n    },\n    {\n      key: \"datasources\",\n      href: `groups/${this.groupId}/data_sources`,\n      title: \"Data Sources\",\n      isAvailable: () => currentUser.isAdmin,\n    },\n  ];\n\n  listColumns = [\n    Columns.custom((text, datasource) => <DataSourcePreviewCard dataSource={datasource} withLink />, {\n      title: \"Name\",\n      field: \"name\",\n      width: null,\n    }),\n    Columns.custom(\n      (text, datasource) => {\n        const menu = (\n          <Menu\n            selectedKeys={[datasource.view_only ? \"viewonly\" : \"full\"]}\n            onClick={item => this.setDataSourcePermissions(datasource, item.key)}>\n            <Menu.Item key=\"full\">Full Access</Menu.Item>\n            <Menu.Item key=\"viewonly\">View Only</Menu.Item>\n          </Menu>\n        );\n\n        return (\n          <Dropdown trigger={[\"click\"]} overlay={menu}>\n            <Button className=\"w-100\" aria-label=\"Permissions\">\n              {datasource.view_only ? \"View Only\" : \"Full Access\"}\n              <DownOutlinedIcon aria-hidden=\"true\" />\n            </Button>\n          </Dropdown>\n        );\n      },\n      {\n        width: \"1%\",\n        className: \"p-r-0\",\n        isAvailable: () => currentUser.isAdmin,\n      }\n    ),\n    Columns.custom(\n      (text, datasource) => (\n        <Button className=\"w-100\" type=\"danger\" onClick={() => this.removeGroupDataSource(datasource)}>\n          Remove\n        </Button>\n      ),\n      {\n        width: \"1%\",\n        isAvailable: () => currentUser.isAdmin,\n      }\n    ),\n  ];\n\n  componentDidMount() {\n    Group.get({ id: this.groupId })\n      .then(group => {\n        this.group = group;\n        this.forceUpdate();\n      })\n      .catch(error => {\n        this.props.controller.handleError(error);\n      });\n  }\n\n  removeGroupDataSource = datasource => {\n    Group.removeDataSource({ id: this.groupId, dataSourceId: datasource.id })\n      .then(() => {\n        this.props.controller.updatePagination({ page: 1 });\n        this.props.controller.update();\n      })\n      .catch(() => {\n        notification.error(\"Failed to remove data source from group.\");\n      });\n  };\n\n  setDataSourcePermissions = (datasource, permission) => {\n    const viewOnly = permission !== \"full\";\n\n    Group.updateDataSource({ id: this.groupId, dataSourceId: datasource.id }, { view_only: viewOnly })\n      .then(() => {\n        datasource.view_only = viewOnly;\n        this.forceUpdate();\n      })\n      .catch(() => {\n        notification.error(\"Failed change data source permissions.\");\n      });\n  };\n\n  addDataSources = () => {\n    const allDataSources = DataSource.query();\n    const alreadyAddedDataSources = map(this.props.controller.allItems, ds => ds.id);\n    SelectItemsDialog.showModal({\n      dialogTitle: \"Add Data Sources\",\n      inputPlaceholder: \"Search data sources...\",\n      selectedItemsTitle: \"New Data Sources\",\n      searchItems: searchTerm => {\n        searchTerm = toLower(searchTerm);\n        return allDataSources.then(items => filter(items, ds => includes(toLower(ds.name), searchTerm)));\n      },\n      renderItem: (item, { isSelected }) => {\n        const alreadyInGroup = includes(alreadyAddedDataSources, item.id);\n        return {\n          content: (\n            <DataSourcePreviewCard dataSource={item}>\n              <ListItemAddon isSelected={isSelected} alreadyInGroup={alreadyInGroup} />\n            </DataSourcePreviewCard>\n          ),\n          isDisabled: alreadyInGroup,\n          className: isSelected || alreadyInGroup ? \"selected\" : \"\",\n        };\n      },\n      renderStagedItem: (item, { isSelected }) => ({\n        content: (\n          <DataSourcePreviewCard dataSource={item}>\n            <ListItemAddon isSelected={isSelected} isStaged />\n          </DataSourcePreviewCard>\n        ),\n      }),\n    }).onClose(items => {\n      const promises = map(items, ds => Group.addDataSource({ id: this.groupId }, { data_source_id: ds.id }));\n      return Promise.all(promises).then(() => this.props.controller.update());\n    });\n  };\n\n  render() {\n    const { controller } = this.props;\n    return (\n      <div data-test=\"Group\">\n        <GroupName className=\"d-block m-t-0 m-b-15\" group={this.group} onChange={() => this.forceUpdate()} />\n        <Layout>\n          <Layout.Sidebar>\n            <Sidebar\n              controller={controller}\n              group={this.group}\n              items={this.sidebarMenu}\n              canAddDataSources={currentUser.isAdmin}\n              onAddDataSourcesClick={this.addDataSources}\n              onGroupDeleted={() => navigateTo(\"groups\")}\n            />\n          </Layout.Sidebar>\n          <Layout.Content>\n            {!controller.isLoaded && <LoadingState className=\"\" />}\n            {controller.isLoaded && controller.isEmpty && (\n              <div className=\"text-center\">\n                <p>There are no data sources in this group yet.</p>\n                {currentUser.isAdmin && (\n                  <Button type=\"primary\" onClick={this.addDataSources}>\n                    <i className=\"fa fa-plus m-r-5\" aria-hidden=\"true\" />\n                    Add Data Sources\n                  </Button>\n                )}\n              </div>\n            )}\n            {controller.isLoaded && !controller.isEmpty && (\n              <div className=\"table-responsive\">\n                <ItemsTable\n                  items={controller.pageItems}\n                  columns={this.listColumns}\n                  showHeader={false}\n                  context={this.actions}\n                  orderByField={controller.orderByField}\n                  orderByReverse={controller.orderByReverse}\n                  toggleSorting={controller.toggleSorting}\n                />\n                <Paginator\n                  showPageSizeSelect\n                  totalCount={controller.totalItemsCount}\n                  pageSize={controller.itemsPerPage}\n                  onPageSizeChange={itemsPerPage => controller.updatePagination({ itemsPerPage })}\n                  page={controller.page}\n                  onChange={page => controller.updatePagination({ page })}\n                />\n              </div>\n            )}\n          </Layout.Content>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nconst GroupDataSourcesPage = wrapSettingsTab(\n  \"Groups.DataSources\",\n  null,\n  itemsList(\n    GroupDataSources,\n    () =>\n      new ResourceItemsSource({\n        isPlainList: true,\n        getRequest(unused, { params: { groupId } }) {\n          return { id: groupId };\n        },\n        getResource() {\n          return Group.dataSources.bind(Group);\n        },\n      }),\n    () => new StateStorage({ orderByField: \"name\" })\n  )\n);\n\nroutes.register(\n  \"Groups.DataSources\",\n  routeWithUserSession({\n    path: \"/groups/:groupId/data_sources\",\n    title: \"Group Data Sources\",\n    render: pageProps => <GroupDataSourcesPage {...pageProps} currentPage=\"datasources\" />,\n  })\n);\n","import { includes, map } from \"lodash\";\nimport React from \"react\";\nimport Button from \"antd/lib/button\";\n\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport navigateTo from \"@/components/ApplicationArea/navigateTo\";\nimport Paginator from \"@/components/Paginator\";\n\nimport { wrap as itemsList, ControllerType } from \"@/components/items-list/ItemsList\";\nimport { ResourceItemsSource } from \"@/components/items-list/classes/ItemsSource\";\nimport { StateStorage } from \"@/components/items-list/classes/StateStorage\";\n\nimport LoadingState from \"@/components/items-list/components/LoadingState\";\nimport ItemsTable, { Columns } from \"@/components/items-list/components/ItemsTable\";\nimport SelectItemsDialog from \"@/components/SelectItemsDialog\";\nimport { UserPreviewCard } from \"@/components/PreviewCard\";\n\nimport GroupName from \"@/components/groups/GroupName\";\nimport ListItemAddon from \"@/components/groups/ListItemAddon\";\nimport Sidebar from \"@/components/groups/DetailsPageSidebar\";\nimport Layout from \"@/components/layouts/ContentWithSidebar\";\nimport wrapSettingsTab from \"@/components/SettingsWrapper\";\n\nimport notification from \"@/services/notification\";\nimport { currentUser } from \"@/services/auth\";\nimport Group from \"@/services/group\";\nimport User from \"@/services/user\";\nimport routes from \"@/services/routes\";\n\nclass GroupMembers extends React.Component {\n  static propTypes = {\n    controller: ControllerType.isRequired,\n  };\n\n  groupId = parseInt(this.props.controller.params.groupId, 10);\n\n  group = null;\n\n  sidebarMenu = [\n    {\n      key: \"users\",\n      href: `groups/${this.groupId}`,\n      title: \"Members\",\n    },\n    {\n      key: \"datasources\",\n      href: `groups/${this.groupId}/data_sources`,\n      title: \"Data Sources\",\n      isAvailable: () => currentUser.isAdmin,\n    },\n  ];\n\n  listColumns = [\n    Columns.custom((text, user) => <UserPreviewCard user={user} withLink />, {\n      title: \"Name\",\n      field: \"name\",\n      width: null,\n    }),\n    Columns.custom(\n      (text, user) => {\n        if (!this.group) {\n          return null;\n        }\n\n        // cannot remove self from built-in groups\n        if (this.group.type === \"builtin\" && currentUser.id === user.id) {\n          return null;\n        }\n        return (\n          <Button className=\"w-100\" type=\"danger\" onClick={event => this.removeGroupMember(event, user)}>\n            Remove\n          </Button>\n        );\n      },\n      {\n        width: \"1%\",\n        isAvailable: () => currentUser.isAdmin,\n      }\n    ),\n  ];\n\n  componentDidMount() {\n    Group.get({ id: this.groupId })\n      .then(group => {\n        this.group = group;\n        this.forceUpdate();\n      })\n      .catch(error => {\n        this.props.controller.handleError(error);\n      });\n  }\n\n  removeGroupMember = (event, user) =>\n    Group.removeMember({ id: this.groupId, userId: user.id })\n      .then(() => {\n        this.props.controller.updatePagination({ page: 1 });\n        this.props.controller.update();\n      })\n      .catch(() => {\n        notification.error(\"Failed to remove member from group.\");\n      });\n\n  addMembers = () => {\n    const alreadyAddedUsers = map(this.props.controller.allItems, u => u.id);\n    SelectItemsDialog.showModal({\n      dialogTitle: \"Add Members\",\n      inputPlaceholder: \"Search users...\",\n      selectedItemsTitle: \"New Members\",\n      searchItems: searchTerm => User.query({ q: searchTerm }).then(({ results }) => results),\n      renderItem: (item, { isSelected }) => {\n        const alreadyInGroup = includes(alreadyAddedUsers, item.id);\n        return {\n          content: (\n            <UserPreviewCard user={item}>\n              <ListItemAddon isSelected={isSelected} alreadyInGroup={alreadyInGroup} />\n            </UserPreviewCard>\n          ),\n          isDisabled: alreadyInGroup,\n          className: isSelected || alreadyInGroup ? \"selected\" : \"\",\n        };\n      },\n      renderStagedItem: (item, { isSelected }) => ({\n        content: (\n          <UserPreviewCard user={item}>\n            <ListItemAddon isSelected={isSelected} isStaged />\n          </UserPreviewCard>\n        ),\n      }),\n    }).onClose(items => {\n      const promises = map(items, u => Group.addMember({ id: this.groupId }, { user_id: u.id }));\n      return Promise.all(promises).then(() => this.props.controller.update());\n    });\n  };\n\n  render() {\n    const { controller } = this.props;\n    return (\n      <div data-test=\"Group\">\n        <GroupName className=\"d-block m-t-0 m-b-15\" group={this.group} onChange={() => this.forceUpdate()} />\n        <Layout>\n          <Layout.Sidebar>\n            <Sidebar\n              controller={controller}\n              group={this.group}\n              items={this.sidebarMenu}\n              canAddMembers={currentUser.isAdmin}\n              onAddMembersClick={this.addMembers}\n              onGroupDeleted={() => navigateTo(\"groups\")}\n            />\n          </Layout.Sidebar>\n          <Layout.Content>\n            {!controller.isLoaded && <LoadingState className=\"\" />}\n            {controller.isLoaded && controller.isEmpty && (\n              <div className=\"text-center\">\n                <p>There are no members in this group yet.</p>\n                {currentUser.isAdmin && (\n                  <Button type=\"primary\" onClick={this.addMembers}>\n                    <i className=\"fa fa-plus m-r-5\" aria-hidden=\"true\" />\n                    Add Members\n                  </Button>\n                )}\n              </div>\n            )}\n            {controller.isLoaded && !controller.isEmpty && (\n              <div className=\"table-responsive\">\n                <ItemsTable\n                  items={controller.pageItems}\n                  columns={this.listColumns}\n                  showHeader={false}\n                  context={this.actions}\n                  orderByField={controller.orderByField}\n                  orderByReverse={controller.orderByReverse}\n                  toggleSorting={controller.toggleSorting}\n                />\n                <Paginator\n                  showPageSizeSelect\n                  totalCount={controller.totalItemsCount}\n                  pageSize={controller.itemsPerPage}\n                  onPageSizeChange={itemsPerPage => controller.updatePagination({ itemsPerPage })}\n                  page={controller.page}\n                  onChange={page => controller.updatePagination({ page })}\n                />\n              </div>\n            )}\n          </Layout.Content>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nconst GroupMembersPage = wrapSettingsTab(\n  \"Groups.Members\",\n  null,\n  itemsList(\n    GroupMembers,\n    () =>\n      new ResourceItemsSource({\n        isPlainList: true,\n        getRequest(unused, { params: { groupId } }) {\n          return { id: groupId };\n        },\n        getResource() {\n          return Group.members.bind(Group);\n        },\n      }),\n    () => new StateStorage({ orderByField: \"name\" })\n  )\n);\n\nroutes.register(\n  \"Groups.Members\",\n  routeWithUserSession({\n    path: \"/groups/:groupId\",\n    title: \"Group Members\",\n    render: pageProps => <GroupMembersPage {...pageProps} currentPage=\"users\" />,\n  })\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Link from \"@/components/Link\";\nimport BigMessage from \"@/components/BigMessage\";\nimport NoTaggedObjectsFound from \"@/components/NoTaggedObjectsFound\";\nimport EmptyState, { EmptyStateHelpMessage } from \"@/components/empty-state/EmptyState\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { currentUser } from \"@/services/auth\";\nimport HelpTrigger from \"@/components/HelpTrigger\";\n\nexport default function QueriesListEmptyState({ page, searchTerm, selectedTags }) {\n  if (searchTerm !== \"\") {\n    return <BigMessage message=\"Sorry, we couldn't find anything.\" icon=\"fa-search\" />;\n  }\n  if (selectedTags.length > 0) {\n    return <NoTaggedObjectsFound objectType=\"queries\" tags={selectedTags} />;\n  }\n  switch (page) {\n    case \"favorites\":\n      return <BigMessage message=\"Mark queries as Favorite to list them here.\" icon=\"fa-star\" />;\n    case \"archive\":\n      return <BigMessage message=\"Archived queries will be listed here.\" icon=\"fa-archive\" />;\n    case \"my\":\n      const my_msg = currentUser.hasPermission(\"create_query\") ? (\n        <span>\n          <Link.Button href=\"queries/new\" type=\"primary\" size=\"small\">\n            Create your first query!\n          </Link.Button>{\" \"}\n          <HelpTrigger className=\"f-13\" type=\"QUERIES\" showTooltip={false}>\n            Need help?\n          </HelpTrigger>\n        </span>\n      ) : (\n        <span>Sorry, we couldn't find anything.</span>\n      );\n      return <BigMessage icon=\"fa-search\">{my_msg}</BigMessage>;\n    default:\n      return (\n        <DynamicComponent name=\"QueriesList.EmptyState\">\n          <EmptyState\n            icon=\"fa fa-code\"\n            illustration=\"query\"\n            description=\"Getting the data from your datasources.\"\n            helpMessage={<EmptyStateHelpMessage helpTriggerType=\"QUERIES\" />}\n          />\n        </DynamicComponent>\n      );\n  }\n}\n\nQueriesListEmptyState.propTypes = {\n  page: PropTypes.string.isRequired,\n  searchTerm: PropTypes.string.isRequired,\n  selectedTags: PropTypes.array.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n","import React, { useEffect, useRef } from \"react\";\nimport cx from \"classnames\";\n\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport Link from \"@/components/Link\";\nimport PageHeader from \"@/components/PageHeader\";\nimport Paginator from \"@/components/Paginator\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { QueryTagsControl } from \"@/components/tags-control/TagsControl\";\nimport SchedulePhrase from \"@/components/queries/SchedulePhrase\";\n\nimport { wrap as itemsList, ControllerType } from \"@/components/items-list/ItemsList\";\nimport useItemsListExtraActions from \"@/components/items-list/hooks/useItemsListExtraActions\";\nimport { ResourceItemsSource } from \"@/components/items-list/classes/ItemsSource\";\nimport { UrlStateStorage } from \"@/components/items-list/classes/StateStorage\";\n\nimport * as Sidebar from \"@/components/items-list/components/Sidebar\";\nimport ItemsTable, { Columns } from \"@/components/items-list/components/ItemsTable\";\n\nimport Layout from \"@/components/layouts/ContentWithSidebar\";\n\nimport { Query } from \"@/services/query\";\nimport { currentUser } from \"@/services/auth\";\nimport location from \"@/services/location\";\nimport routes from \"@/services/routes\";\n\nimport QueriesListEmptyState from \"./QueriesListEmptyState\";\n\nimport \"./queries-list.css\";\n\nconst sidebarMenu = [\n  {\n    key: \"all\",\n    href: \"queries\",\n    title: \"All Queries\",\n    icon: () => <Sidebar.MenuIcon icon=\"fa fa-code\" />,\n  },\n  {\n    key: \"my\",\n    href: \"queries/my\",\n    title: \"My Queries\",\n    icon: () => <Sidebar.ProfileImage user={currentUser} />,\n  },\n  {\n    key: \"favorites\",\n    href: \"queries/favorites\",\n    title: \"Favorites\",\n    icon: () => <Sidebar.MenuIcon icon=\"fa fa-star\" />,\n  },\n  {\n    key: \"archive\",\n    href: \"queries/archive\",\n    title: \"Archived\",\n    icon: () => <Sidebar.MenuIcon icon=\"fa fa-archive\" />,\n  },\n];\n\nconst listColumns = [\n  Columns.favorites({ className: \"p-r-0\" }),\n  Columns.custom.sortable(\n    (text, item) => (\n      <React.Fragment>\n        <Link className=\"table-main-title\" href={\"queries/\" + item.id}>\n          {item.name}\n        </Link>\n        <QueryTagsControl className=\"d-block\" tags={item.tags} isDraft={item.is_draft} isArchived={item.is_archived} />\n      </React.Fragment>\n    ),\n    {\n      title: \"Name\",\n      field: \"name\",\n      width: null,\n    }\n  ),\n  Columns.custom((text, item) => item.user.name, { title: \"Created By\", width: \"1%\" }),\n  Columns.dateTime.sortable({ title: \"Created At\", field: \"created_at\", width: \"1%\" }),\n  Columns.dateTime.sortable({\n    title: \"Last Executed At\",\n    field: \"retrieved_at\",\n    orderByField: \"executed_at\",\n    width: \"1%\",\n  }),\n  Columns.custom.sortable((text, item) => <SchedulePhrase schedule={item.schedule} isNew={item.isNew()} />, {\n    title: \"Refresh Schedule\",\n    field: \"schedule\",\n    width: \"1%\",\n  }),\n];\n\nfunction QueriesListExtraActions(props) {\n  return <DynamicComponent name=\"QueriesList.Actions\" {...props} />;\n}\n\nfunction QueriesList({ controller }) {\n  const controllerRef = useRef();\n  controllerRef.current = controller;\n\n  useEffect(() => {\n    const unlistenLocationChanges = location.listen((unused, action) => {\n      const searchTerm = location.search.q || \"\";\n      if (action === \"PUSH\" && searchTerm !== controllerRef.current.searchTerm) {\n        controllerRef.current.updateSearch(searchTerm);\n      }\n    });\n\n    return () => {\n      unlistenLocationChanges();\n    };\n  }, []);\n\n  const {\n    areExtraActionsAvailable,\n    listColumns: tableColumns,\n    Component: ExtraActionsComponent,\n    selectedItems,\n  } = useItemsListExtraActions(controller, listColumns, QueriesListExtraActions);\n\n  return (\n    <div className=\"page-queries-list\">\n      <div className=\"container\">\n        <PageHeader\n          title={controller.params.pageTitle}\n          actions={\n            currentUser.hasPermission(\"create_query\") ? (\n              <Link.Button block type=\"primary\" href=\"queries/new\">\n                <i className=\"fa fa-plus m-r-5\" aria-hidden=\"true\" />\n                New Query\n              </Link.Button>\n            ) : null\n          }\n        />\n        <Layout>\n          <Layout.Sidebar className=\"m-b-0\">\n            <Sidebar.SearchInput\n              placeholder=\"Search Queries...\"\n              label=\"Search queries\"\n              value={controller.searchTerm}\n              onChange={controller.updateSearch}\n            />\n            <Sidebar.Menu items={sidebarMenu} selected={controller.params.currentPage} />\n            <Sidebar.Tags url=\"api/queries/tags\" onChange={controller.updateSelectedTags} showUnselectAll />\n          </Layout.Sidebar>\n          <Layout.Content>\n            {controller.isLoaded && controller.isEmpty ? (\n              <QueriesListEmptyState\n                page={controller.params.currentPage}\n                searchTerm={controller.searchTerm}\n                selectedTags={controller.selectedTags}\n              />\n            ) : (\n              <React.Fragment>\n                <div className={cx({ \"m-b-10\": areExtraActionsAvailable })}>\n                  <ExtraActionsComponent selectedItems={selectedItems} />\n                </div>\n                <div className=\"bg-white tiled table-responsive\">\n                  <ItemsTable\n                    items={controller.pageItems}\n                    loading={!controller.isLoaded}\n                    columns={tableColumns}\n                    orderByField={controller.orderByField}\n                    orderByReverse={controller.orderByReverse}\n                    toggleSorting={controller.toggleSorting}\n                  />\n                  <Paginator\n                    showPageSizeSelect\n                    totalCount={controller.totalItemsCount}\n                    pageSize={controller.itemsPerPage}\n                    onPageSizeChange={itemsPerPage => controller.updatePagination({ itemsPerPage })}\n                    page={controller.page}\n                    onChange={page => controller.updatePagination({ page })}\n                  />\n                </div>\n              </React.Fragment>\n            )}\n          </Layout.Content>\n        </Layout>\n      </div>\n    </div>\n  );\n}\n\nQueriesList.propTypes = {\n  controller: ControllerType.isRequired,\n};\n\nconst QueriesListPage = itemsList(\n  QueriesList,\n  () =>\n    new ResourceItemsSource({\n      getResource({ params: { currentPage } }) {\n        return {\n          all: Query.query.bind(Query),\n          my: Query.myQueries.bind(Query),\n          favorites: Query.favorites.bind(Query),\n          archive: Query.archive.bind(Query),\n        }[currentPage];\n      },\n      getItemProcessor() {\n        return item => new Query(item);\n      },\n    }),\n  () => new UrlStateStorage({ orderByField: \"created_at\", orderByReverse: true })\n);\n\nroutes.register(\n  \"Queries.List\",\n  routeWithUserSession({\n    path: \"/queries\",\n    title: \"Queries\",\n    render: pageProps => <QueriesListPage {...pageProps} currentPage=\"all\" />,\n  })\n);\nroutes.register(\n  \"Queries.Favorites\",\n  routeWithUserSession({\n    path: \"/queries/favorites\",\n    title: \"Favorite Queries\",\n    render: pageProps => <QueriesListPage {...pageProps} currentPage=\"favorites\" />,\n  })\n);\nroutes.register(\n  \"Queries.Archived\",\n  routeWithUserSession({\n    path: \"/queries/archive\",\n    title: \"Archived Queries\",\n    render: pageProps => <QueriesListPage {...pageProps} currentPage=\"archive\" />,\n  })\n);\nroutes.register(\n  \"Queries.My\",\n  routeWithUserSession({\n    path: \"/queries/my\",\n    title: \"My Queries\",\n    render: pageProps => <QueriesListPage {...pageProps} currentPage=\"my\" />,\n  })\n);\n","import d3 from \"d3\";\nimport React, { useRef, useMemo, useCallback, useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Resizable as ReactResizable } from \"react-resizable\";\nimport KeyboardShortcuts from \"@/services/KeyboardShortcuts\";\n\nimport \"./index.less\";\n\nexport default function Resizable({ toggleShortcut, direction, sizeAttribute, children }) {\n  const [size, setSize] = useState(0);\n  const elementRef = useRef();\n  const wasUsingTouchEventsRef = useRef(false);\n  const wasResizedRef = useRef(false);\n\n  const sizeProp = direction === \"horizontal\" ? \"width\" : \"height\";\n  sizeAttribute = sizeAttribute || sizeProp;\n\n  const getElementSize = useCallback(() => {\n    if (!elementRef.current) {\n      return 0;\n    }\n    return Math.floor(elementRef.current.getBoundingClientRect()[sizeProp]);\n  }, [sizeProp]);\n\n  const savedSize = useRef(null);\n  const toggle = useCallback(() => {\n    if (!elementRef.current) {\n      return;\n    }\n\n    const element = d3.select(elementRef.current);\n    let targetSize;\n    if (savedSize.current === null) {\n      targetSize = \"0px\";\n      savedSize.current = `${getElementSize()}px`;\n    } else {\n      targetSize = savedSize.current;\n      savedSize.current = null;\n    }\n\n    element\n      .style(sizeAttribute, savedSize.current || \"0px\")\n      .transition()\n      .duration(200)\n      .ease(\"swing\")\n      .style(sizeAttribute, targetSize);\n\n    // update state to new element's size\n    setSize(parseInt(targetSize) || 0);\n  }, [getElementSize, sizeAttribute]);\n\n  const resizeHandle = useMemo(\n    () => (\n      // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-noninteractive-element-interactions\n      <span\n        className={`react-resizable-handle react-resizable-handle-${direction}`}\n        role=\"separator\"\n        onClick={() => {\n          // TODO: add key controls\n          // On desktops resize uses `mousedown`/`mousemove`/`mouseup` events, and there is a conflict\n          // with this `click` handler: after user releases mouse - this handler will be executed.\n          // So we use `wasResized` flag to check if there was actual resize or user just pressed and released\n          // left mouse button (see also resize event handlers where ths flag is set).\n          // On mobile devices `touchstart`/`touchend` events wll be used, so it's safe to just execute this handler.\n          // To detect which set of events was actually used during particular resize operation, we pass\n          // `onMouseDown` handler to draggable core and check event type there (see also that handler's code).\n          if (wasUsingTouchEventsRef.current || !wasResizedRef.current) {\n            toggle();\n          }\n          wasUsingTouchEventsRef.current = false;\n          wasResizedRef.current = false;\n        }}\n      />\n    ),\n    [direction, toggle]\n  );\n\n  useEffect(() => {\n    if (toggleShortcut) {\n      const shortcuts = {\n        [toggleShortcut]: toggle,\n      };\n\n      KeyboardShortcuts.bind(shortcuts);\n      return () => {\n        KeyboardShortcuts.unbind(shortcuts);\n      };\n    }\n  }, [toggleShortcut, toggle]);\n\n  const resizeEventHandlers = useMemo(\n    () => ({\n      onResizeStart: () => {\n        // use element's size as initial value (it will also check constraints set in CSS)\n        // updated here and in `draggableCore::onMouseDown` handler to ensure that right value will be used\n        setSize(getElementSize());\n      },\n      onResize: (unused, data) => {\n        // update element directly for better UI responsiveness\n        d3.select(elementRef.current).style(sizeAttribute, `${data.size[sizeProp]}px`);\n        setSize(data.size[sizeProp]);\n        wasResizedRef.current = true;\n      },\n      onResizeStop: () => {\n        if (wasResizedRef.current) {\n          savedSize.current = null;\n        }\n      },\n    }),\n    [sizeProp, getElementSize, sizeAttribute]\n  );\n\n  const draggableCoreOptions = useMemo(\n    () => ({\n      onMouseDown: e => {\n        // In some cases this handler is executed twice during the same resize operation - first time\n        // with `touchstart` event and second time with `mousedown` (probably emulated by browser).\n        // Therefore we set the flag only when we receive `touchstart` because in ths case it's definitely\n        // mobile browser (desktop browsers will also send `mousedown` but never `touchstart`).\n        if (e.type === \"touchstart\") {\n          wasUsingTouchEventsRef.current = true;\n        }\n\n        // use element's size as initial value (it will also check constraints set in CSS)\n        // updated here and in `onResizeStart` handler to ensure that right value will be used\n        setSize(getElementSize());\n      },\n    }),\n    [getElementSize]\n  );\n\n  if (!children) {\n    return null;\n  }\n\n  children = React.createElement(children.type, { ...children.props, ref: elementRef });\n\n  return (\n    <ReactResizable\n      className=\"resizable-component\"\n      axis={direction === \"horizontal\" ? \"x\" : \"y\"}\n      resizeHandles={[direction === \"horizontal\" ? \"e\" : \"s\"]}\n      handle={resizeHandle}\n      width={direction === \"horizontal\" ? size : 0}\n      height={direction === \"vertical\" ? size : 0}\n      minConstraints={[0, 0]}\n      {...resizeEventHandlers}\n      draggableOpts={draggableCoreOptions}>\n      {children}\n    </ReactResizable>\n  );\n}\n\nResizable.propTypes = {\n  direction: PropTypes.oneOf([\"horizontal\", \"vertical\"]),\n  sizeAttribute: PropTypes.string,\n  toggleShortcut: PropTypes.string,\n  children: PropTypes.element,\n};\n\nResizable.defaultProps = {\n  direction: \"horizontal\",\n  sizeAttribute: null, // \"width\"/\"height\" - depending on `direction`\n  toggleShortcut: null,\n  children: null,\n};\n","import { trim } from \"lodash\";\nimport sqlFormatter from \"sql-formatter\";\n\ninterface QueryFormatterMap {\n  [syntax: string]: (queryText: string) => string;\n}\n\nconst QueryFormatters: QueryFormatterMap = {\n  sql: queryText => sqlFormatter.format(trim(queryText)),\n  json: queryText => JSON.stringify(JSON.parse(queryText), null, 4),\n};\n\nexport function isFormatQueryAvailable(syntax: string) {\n  return syntax in QueryFormatters;\n}\n\nexport function formatQuery(queryText: string, syntax: string) {\n  if (!isFormatQueryAvailable(syntax)) {\n    return queryText;\n  }\n  const formatter = QueryFormatters[syntax];\n  return formatter(queryText);\n}\n","import { isNil, isEmpty } from \"lodash\";\nimport { useMemo } from \"react\";\nimport { currentUser } from \"@/services/auth\";\nimport { policy } from \"@/services/policy\";\n\nexport default function useQueryFlags(query, dataSource = null) {\n  dataSource = dataSource || { view_only: true };\n\n  return useMemo(\n    () => ({\n      // state flags\n      isNew: isNil(query.id),\n      isDraft: query.is_draft,\n      isArchived: query.is_archived,\n\n      // permissions flags\n      canCreate: currentUser.hasPermission(\"create_query\"),\n      canView: currentUser.hasPermission(\"view_query\"),\n      canEdit: currentUser.hasPermission(\"edit_query\") && policy.canEdit(query),\n      canViewSource: currentUser.hasPermission(\"view_source\"),\n      canExecute:\n        !isEmpty(query.query) &&\n        policy.canRun(query) &&\n        (query.is_safe || (currentUser.hasPermission(\"execute_query\") && !dataSource.view_only)),\n      canFork: currentUser.hasPermission(\"edit_query\") && !dataSource.view_only,\n      canSchedule: currentUser.hasPermission(\"schedule_query\"),\n    }),\n    [query, dataSource.view_only]\n  );\n}\n","import { extend } from \"lodash\";\nimport React, { useCallback } from \"react\";\nimport Modal from \"antd/lib/modal\";\nimport { Query } from \"@/services/query\";\nimport notification from \"@/services/notification\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\n\nfunction confirmArchive() {\n  return new Promise((resolve, reject) => {\n    Modal.confirm({\n      title: \"Archive Query\",\n      content: (\n        <React.Fragment>\n          <div className=\"m-b-5\">Are you sure you want to archive this query?</div>\n          <div>All alerts and dashboard widgets created with its visualizations will be deleted.</div>\n        </React.Fragment>\n      ),\n      okText: \"Archive\",\n      okType: \"danger\",\n      onOk: () => {\n        resolve();\n      },\n      onCancel: () => {\n        reject();\n      },\n      maskClosable: true,\n      autoFocusButton: null,\n    });\n  });\n}\n\nfunction doArchiveQuery(query) {\n  return Query.delete({ id: query.id })\n    .then(() => {\n      return extend(query.clone(), { is_archived: true, schedule: null });\n    })\n    .catch(error => {\n      notification.error(\"Query could not be archived.\");\n      return Promise.reject(error);\n    });\n}\n\nexport default function useArchiveQuery(query, onChange) {\n  const handleChange = useImmutableCallback(onChange);\n\n  return useCallback(() => {\n    confirmArchive()\n      .then(() => doArchiveQuery(query))\n      .then(handleChange);\n  }, [query, handleChange]);\n}\n","import { isNil, isObject, extend, keys, map, omit, pick, uniq, get } from \"lodash\";\nimport React, { useCallback } from \"react\";\nimport Modal from \"antd/lib/modal\";\nimport { Query } from \"@/services/query\";\nimport notification from \"@/services/notification\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\nimport { policy } from \"@/services/policy\";\n\nclass SaveQueryError extends Error {\n  constructor(message, detailedMessage = null) {\n    super(message);\n    this.detailedMessage = detailedMessage;\n  }\n}\n\nclass SaveQueryConflictError extends SaveQueryError {\n  constructor() {\n    super(\n      \"Changes not saved\",\n      <React.Fragment>\n        <div className=\"m-b-5\">It seems like the query has been modified by another user.</div>\n        <div>Please copy/backup your changes and reload this page.</div>\n      </React.Fragment>\n    );\n  }\n}\n\nfunction confirmOverwrite() {\n  return new Promise((resolve, reject) => {\n    Modal.confirm({\n      title: \"Overwrite Query\",\n      content: (\n        <React.Fragment>\n          <div className=\"m-b-5\">It seems like the query has been modified by another user.</div>\n          <div>Are you sure you want to overwrite the query with your version?</div>\n        </React.Fragment>\n      ),\n      okText: \"Overwrite\",\n      okType: \"danger\",\n      onOk: () => {\n        resolve();\n      },\n      onCancel: () => {\n        reject();\n      },\n      maskClosable: true,\n      autoFocusButton: null,\n    });\n  });\n}\n\nfunction doSaveQuery(data, { canOverwrite = false } = {}) {\n  // omit parameter properties that don't need to be stored\n  if (isObject(data.options) && data.options.parameters) {\n    data.options = {\n      ...data.options,\n      parameters: map(data.options.parameters, p => p.toSaveableObject()),\n    };\n  }\n\n  return Query.save(data).catch(error => {\n    if (get(error, \"response.status\") === 409) {\n      if (canOverwrite) {\n        return confirmOverwrite()\n          .then(() => Query.save(omit(data, [\"version\"])))\n          .catch(() => Promise.reject(new SaveQueryConflictError()));\n      }\n      return Promise.reject(new SaveQueryConflictError());\n    }\n    return Promise.reject(new SaveQueryError(\"Query could not be saved\"));\n  });\n}\n\nexport default function useUpdateQuery(query, onChange) {\n  const handleChange = useImmutableCallback(onChange);\n\n  return useCallback(\n    (data = null, { successMessage = \"Query saved\" } = {}) => {\n      if (isObject(data)) {\n        // Don't save new query with partial data\n        if (query.isNew()) {\n          handleChange(extend(query.clone(), data));\n          return;\n        }\n        data = { ...data, id: query.id, version: query.version };\n      } else {\n        data = pick(query, [\n          \"id\",\n          \"version\",\n          \"schedule\",\n          \"query\",\n          \"description\",\n          \"name\",\n          \"data_source_id\",\n          \"options\",\n          \"latest_query_data_id\",\n          \"is_draft\",\n          \"tags\",\n        ]);\n      }\n\n      return doSaveQuery(data, { canOverwrite: policy.canEdit(query) })\n        .then(updatedQuery => {\n          if (!isNil(successMessage)) {\n            notification.success(successMessage);\n          }\n          handleChange(\n            extend(\n              query.clone(),\n              // if server returned completely new object (currently possible only when saving new query) -\n              // update all fields; otherwise pick only changed fields\n              updatedQuery.id !== query.id ? updatedQuery : pick(updatedQuery, uniq([\"id\", \"version\", ...keys(data)]))\n            )\n          );\n        })\n        .catch(error => {\n          const notificationOptions = {};\n          if (error instanceof SaveQueryConflictError) {\n            notificationOptions.duration = null;\n          }\n          notification.error(error.message, error.detailedMessage, notificationOptions);\n        });\n    },\n    [query, handleChange]\n  );\n}\n","import { noop, extend, pick } from \"lodash\";\nimport { useCallback, useState } from \"react\";\nimport url from \"url\";\nimport qs from \"query-string\";\nimport { Query } from \"@/services/query\";\n\nfunction keepCurrentUrlParams(targetUrl) {\n  const currentUrlParams = qs.parse(window.location.search);\n  targetUrl = url.parse(targetUrl);\n  const targetUrlParams = qs.parse(targetUrl.search);\n  return url.format(\n    extend(pick(targetUrl, [\"protocol\", \"auth\", \"host\", \"pathname\", \"hash\"]), {\n      search: qs.stringify(extend(currentUrlParams, targetUrlParams)),\n    })\n  );\n}\n\nexport default function useDuplicateQuery(query) {\n  const [isDuplicating, setIsDuplicating] = useState(false);\n\n  const duplicateQuery = useCallback(() => {\n    // To prevent opening the same tab, name must be unique for each browser\n    const tabName = `duplicatedQueryTab/${Math.random().toString()}`;\n\n    // We should open tab here because this moment is a part of user interaction;\n    // later browser will block such attempts\n    const tab = window.open(\"\", tabName);\n\n    setIsDuplicating(true);\n    Query.fork({ id: query.id })\n      .then(newQuery => {\n        tab.location = keepCurrentUrlParams(newQuery.getUrl(true));\n      })\n      .finally(() => {\n        setIsDuplicating(false);\n      });\n  }, [query.id]);\n\n  return [isDuplicating, isDuplicating ? noop : duplicateQuery];\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"antd/lib/button\";\nimport Tooltip from \"@/components/Tooltip\";\nimport CopyOutlinedIcon from \"@ant-design/icons/CopyOutlined\";\nimport \"./CodeBlock.less\";\n\nexport default class CodeBlock extends React.Component {\n  static propTypes = {\n    copyable: PropTypes.bool,\n    children: PropTypes.node,\n  };\n\n  static defaultProps = {\n    copyable: false,\n    children: null,\n  };\n\n  state = { copied: null };\n\n  constructor(props) {\n    super(props);\n    this.ref = React.createRef();\n    this.copyFeatureEnabled = props.copyable && document.queryCommandSupported(\"copy\");\n    this.resetCopyState = null;\n  }\n\n  componentWillUnmount() {\n    if (this.resetCopyState) {\n      clearTimeout(this.resetCopyState);\n    }\n  }\n\n  copy = () => {\n    // select text\n    window.getSelection().selectAllChildren(this.ref.current);\n\n    // copy\n    try {\n      const success = document.execCommand(\"copy\");\n      if (!success) {\n        throw new Error();\n      }\n      this.setState({ copied: \"Copied!\" });\n    } catch (err) {\n      this.setState({\n        copied: \"Copy failed\",\n      });\n    }\n\n    // reset selection\n    window.getSelection().removeAllRanges();\n\n    // reset tooltip\n    this.resetCopyState = setTimeout(() => this.setState({ copied: null }), 2000);\n  };\n\n  render() {\n    const { copyable, children, ...props } = this.props;\n\n    const copyButton = (\n      <Tooltip title={this.state.copied || \"Copy\"}>\n        <Button icon={<CopyOutlinedIcon />} type=\"dashed\" size=\"small\" onClick={this.copy} />\n      </Tooltip>\n    );\n\n    return (\n      <div className=\"code-block\">\n        <code {...props} ref={this.ref}>\n          {children}\n        </code>\n        {this.copyFeatureEnabled && copyButton}\n      </div>\n    );\n  }\n}\n","import { extend } from \"lodash\";\nimport React, { useMemo, useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Modal from \"antd/lib/modal\";\nimport Input from \"antd/lib/input\";\nimport Button from \"antd/lib/button\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport CodeBlock from \"@/components/CodeBlock\";\nimport { axios } from \"@/services/axios\";\nimport { clientConfig } from \"@/services/auth\";\nimport notification from \"@/services/notification\";\nimport { useUniqueId } from \"@/lib/hooks/useUniqueId\";\n\nimport \"./index.less\";\nimport { policy } from \"@/services/policy\";\n\nfunction ApiKeyDialog({ dialog, ...props }) {\n  const [query, setQuery] = useState(props.query);\n  const [updatingApiKey, setUpdatingApiKey] = useState(false);\n\n  const regenerateQueryApiKey = useCallback(() => {\n    setUpdatingApiKey(true);\n    axios\n      .post(`api/queries/${query.id}/regenerate_api_key`)\n      .then(data => {\n        setUpdatingApiKey(false);\n        setQuery(extend(query.clone(), { api_key: data.api_key }));\n      })\n      .catch(() => {\n        setUpdatingApiKey(false);\n        notification.error(\"Failed to update API key\");\n      });\n  }, [query]);\n\n  const { csvUrl, jsonUrl } = useMemo(\n    () => ({\n      csvUrl: `${clientConfig.basePath}api/queries/${query.id}/results.csv?api_key=${query.api_key}`,\n      jsonUrl: `${clientConfig.basePath}api/queries/${query.id}/results.json?api_key=${query.api_key}`,\n    }),\n    [query.id, query.api_key]\n  );\n\n  const csvResultsLabelId = useUniqueId(\"csv-results-label\");\n  const jsonResultsLabelId = useUniqueId(\"json-results-label\");\n\n  return (\n    <Modal {...dialog.props} width={600} footer={<Button onClick={() => dialog.close(query)}>Close</Button>}>\n      <div className=\"query-api-key-dialog-wrapper\">\n        <h5>API Key</h5>\n        <div className=\"m-b-20\">\n          <Input.Group compact>\n            <Input readOnly value={query.api_key} aria-label=\"Query API Key\" />\n            {policy.canEdit(query) && (\n              <Button disabled={updatingApiKey} loading={updatingApiKey} onClick={regenerateQueryApiKey}>\n                Regenerate\n              </Button>\n            )}\n          </Input.Group>\n        </div>\n\n        <h5>Example API Calls:</h5>\n        <div className=\"m-b-10\">\n          <span id={csvResultsLabelId}>Results in CSV format:</span>\n          <CodeBlock aria-labelledby={csvResultsLabelId} copyable>\n            {csvUrl}\n          </CodeBlock>\n        </div>\n        <div>\n          <span id={jsonResultsLabelId}>Results in JSON format:</span>\n          <CodeBlock aria-labelledby={jsonResultsLabelId} copyable>\n            {jsonUrl}\n          </CodeBlock>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n\nApiKeyDialog.propTypes = {\n  dialog: DialogPropType.isRequired,\n  query: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    api_key: PropTypes.string,\n    can_edit: PropTypes.bool,\n  }).isRequired,\n};\n\nexport default wrapDialog(ApiKeyDialog);\n","import { extend, map, filter, reduce } from \"lodash\";\nimport React, { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"antd/lib/button\";\nimport Dropdown from \"antd/lib/dropdown\";\nimport Menu from \"antd/lib/menu\";\nimport EllipsisOutlinedIcon from \"@ant-design/icons/EllipsisOutlined\";\nimport useMedia from \"use-media\";\nimport Link from \"@/components/Link\";\nimport EditInPlace from \"@/components/EditInPlace\";\nimport FavoritesControl from \"@/components/FavoritesControl\";\nimport { QueryTagsControl } from \"@/components/tags-control/TagsControl\";\nimport getTags from \"@/services/getTags\";\nimport { clientConfig } from \"@/services/auth\";\nimport useQueryFlags from \"../hooks/useQueryFlags\";\nimport useArchiveQuery from \"../hooks/useArchiveQuery\";\nimport usePublishQuery from \"../hooks/usePublishQuery\";\nimport useUnpublishQuery from \"../hooks/useUnpublishQuery\";\nimport useUpdateQueryTags from \"../hooks/useUpdateQueryTags\";\nimport useRenameQuery from \"../hooks/useRenameQuery\";\nimport useDuplicateQuery from \"../hooks/useDuplicateQuery\";\nimport useApiKeyDialog from \"../hooks/useApiKeyDialog\";\nimport usePermissionsEditorDialog from \"../hooks/usePermissionsEditorDialog\";\n\nimport \"./QueryPageHeader.less\";\n\nfunction getQueryTags() {\n  return getTags(\"api/queries/tags\").then(tags => map(tags, t => t.name));\n}\n\nfunction createMenu(menu) {\n  const handlers = {};\n\n  const groups = map(menu, group =>\n    filter(\n      map(group, (props, key) => {\n        props = extend({ isAvailable: true, isEnabled: true, onClick: () => {} }, props);\n        if (props.isAvailable) {\n          handlers[key] = props.onClick;\n          return (\n            <Menu.Item key={key} disabled={!props.isEnabled}>\n              {props.title}\n            </Menu.Item>\n          );\n        }\n        return null;\n      })\n    )\n  );\n\n  return (\n    <Menu onClick={({ key }) => handlers[key]()}>\n      {reduce(\n        filter(groups, group => group.length > 0),\n        (result, items, key) => {\n          const divider = result.length > 0 ? <Menu.Divider key={`divider${key}`} /> : null;\n          return [...result, divider, ...items];\n        },\n        []\n      )}\n    </Menu>\n  );\n}\n\nexport default function QueryPageHeader({\n  query,\n  dataSource,\n  sourceMode,\n  selectedVisualization,\n  headerExtra,\n  tagsExtra,\n  onChange,\n}) {\n  const isDesktop = useMedia({ minWidth: 768 });\n  const queryFlags = useQueryFlags(query, dataSource);\n  const updateName = useRenameQuery(query, onChange);\n  const updateTags = useUpdateQueryTags(query, onChange);\n  const archiveQuery = useArchiveQuery(query, onChange);\n  const publishQuery = usePublishQuery(query, onChange);\n  const unpublishQuery = useUnpublishQuery(query, onChange);\n  const [isDuplicating, duplicateQuery] = useDuplicateQuery(query);\n  const openApiKeyDialog = useApiKeyDialog(query, onChange);\n  const openPermissionsEditorDialog = usePermissionsEditorDialog(query);\n\n  const moreActionsMenu = useMemo(\n    () =>\n      createMenu([\n        {\n          fork: {\n            isEnabled: !queryFlags.isNew && queryFlags.canFork && !isDuplicating,\n            title: (\n              <React.Fragment>\n                Fork <i className=\"fa fa-external-link m-l-5\" aria-hidden=\"true\" />\n                <span className=\"sr-only\">(opens in a new tab)</span>\n              </React.Fragment>\n            ),\n            onClick: duplicateQuery,\n          },\n        },\n        {\n          archive: {\n            isAvailable: !queryFlags.isNew && queryFlags.canEdit && !queryFlags.isArchived,\n            title: \"Archive\",\n            onClick: archiveQuery,\n          },\n          managePermissions: {\n            isAvailable:\n              !queryFlags.isNew && queryFlags.canEdit && !queryFlags.isArchived && clientConfig.showPermissionsControl,\n            title: \"Manage Permissions\",\n            onClick: openPermissionsEditorDialog,\n          },\n          publish: {\n            isAvailable:\n              !isDesktop && queryFlags.isDraft && !queryFlags.isArchived && !queryFlags.isNew && queryFlags.canEdit,\n            title: \"Publish\",\n            onClick: publishQuery,\n          },\n          unpublish: {\n            isAvailable: !clientConfig.disablePublish && !queryFlags.isNew && queryFlags.canEdit && !queryFlags.isDraft,\n            title: \"Unpublish\",\n            onClick: unpublishQuery,\n          },\n        },\n        {\n          showAPIKey: {\n            isAvailable: !clientConfig.disablePublicUrls && !queryFlags.isNew,\n            title: \"Show API Key\",\n            onClick: openApiKeyDialog,\n          },\n        },\n      ]),\n    [\n      queryFlags.isNew,\n      queryFlags.canFork,\n      queryFlags.canEdit,\n      queryFlags.isArchived,\n      queryFlags.isDraft,\n      isDuplicating,\n      duplicateQuery,\n      archiveQuery,\n      openPermissionsEditorDialog,\n      isDesktop,\n      publishQuery,\n      unpublishQuery,\n      openApiKeyDialog,\n    ]\n  );\n\n  return (\n    <div className=\"query-page-header\">\n      <div className=\"title-with-tags\">\n        <div className=\"page-title\">\n          <div className=\"d-flex align-items-center\">\n            {!queryFlags.isNew && <FavoritesControl item={query} />}\n            <h3>\n              <EditInPlace isEditable={queryFlags.canEdit} onDone={updateName} ignoreBlanks value={query.name} />\n            </h3>\n          </div>\n        </div>\n        <div className=\"query-tags\">\n          <QueryTagsControl\n            tags={query.tags}\n            isDraft={queryFlags.isDraft}\n            isArchived={queryFlags.isArchived}\n            canEdit={queryFlags.canEdit}\n            getAvailableTags={getQueryTags}\n            onEdit={updateTags}\n            tagsExtra={tagsExtra}\n          />\n        </div>\n      </div>\n      <div className=\"header-actions\">\n        {headerExtra}\n        {isDesktop && queryFlags.isDraft && !queryFlags.isArchived && !queryFlags.isNew && queryFlags.canEdit && (\n          <Button className=\"m-r-5\" onClick={publishQuery}>\n            <i className=\"fa fa-paper-plane m-r-5\" aria-hidden=\"true\" /> Publish\n          </Button>\n        )}\n\n        {!queryFlags.isNew && queryFlags.canViewSource && (\n          <span>\n            {!sourceMode && (\n              <Link.Button className=\"m-r-5\" href={query.getUrl(true, selectedVisualization)}>\n                <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\" />\n                <span className=\"m-l-5\">Edit Source</span>\n              </Link.Button>\n            )}\n            {sourceMode && (\n              <Link.Button\n                className=\"m-r-5\"\n                href={query.getUrl(false, selectedVisualization)}\n                data-test=\"QueryPageShowResultOnly\">\n                <i className=\"fa fa-table\" aria-hidden=\"true\" />\n                <span className=\"m-l-5\">Show Results Only</span>\n              </Link.Button>\n            )}\n          </span>\n        )}\n\n        {!queryFlags.isNew && (\n          <Dropdown overlay={moreActionsMenu} trigger={[\"click\"]}>\n            <Button data-test=\"QueryPageHeaderMoreButton\" aria-label=\"More actions\">\n              <EllipsisOutlinedIcon rotate={90} aria-hidden=\"true\" />\n            </Button>\n          </Dropdown>\n        )}\n      </div>\n    </div>\n  );\n}\n\nQueryPageHeader.propTypes = {\n  query: PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    name: PropTypes.string,\n    tags: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,\n  dataSource: PropTypes.object,\n  sourceMode: PropTypes.bool,\n  selectedVisualization: PropTypes.number,\n  headerExtra: PropTypes.node,\n  tagsExtra: PropTypes.node,\n  onChange: PropTypes.func,\n};\n\nQueryPageHeader.defaultProps = {\n  dataSource: null,\n  sourceMode: false,\n  selectedVisualization: null,\n  headerExtra: null,\n  tagsExtra: null,\n  onChange: () => {},\n};\n","import { useCallback } from \"react\";\nimport useUpdateQuery from \"./useUpdateQuery\";\nimport recordEvent from \"@/services/recordEvent\";\nimport { clientConfig } from \"@/services/auth\";\n\nexport default function useRenameQuery(query, onChange) {\n  const updateQuery = useUpdateQuery(query, onChange);\n\n  return useCallback(\n    name => {\n      recordEvent(\"edit_name\", \"query\", query.id);\n      const changes = { name };\n      const options = {};\n\n      if (query.is_draft && clientConfig.autoPublishNamedQueries && name !== \"New Query\") {\n        changes.is_draft = false;\n        options.successMessage = \"Query saved and published\";\n      }\n\n      updateQuery(changes, options);\n    },\n    [query.id, query.is_draft, updateQuery]\n  );\n}\n","import { useCallback } from \"react\";\nimport useUpdateQuery from \"./useUpdateQuery\";\nimport recordEvent from \"@/services/recordEvent\";\n\nexport default function useUpdateQueryTags(query, onChange) {\n  const updateQuery = useUpdateQuery(query, onChange);\n\n  return useCallback(\n    tags => {\n      recordEvent(\"edit_tags\", \"query\", query.id);\n      updateQuery({ tags });\n    },\n    [query.id, updateQuery]\n  );\n}\n","import { useCallback } from \"react\";\nimport useUpdateQuery from \"./useUpdateQuery\";\nimport recordEvent from \"@/services/recordEvent\";\n\nexport default function usePublishQuery(query, onChange) {\n  const updateQuery = useUpdateQuery(query, onChange);\n\n  return useCallback(() => {\n    recordEvent(\"toggle_published\", \"query\", query.id);\n    updateQuery({ is_draft: false });\n  }, [query.id, updateQuery]);\n}\n","import { useCallback } from \"react\";\nimport useUpdateQuery from \"./useUpdateQuery\";\nimport recordEvent from \"@/services/recordEvent\";\n\nexport default function useUnpublishQuery(query, onChange) {\n  const updateQuery = useUpdateQuery(query, onChange);\n\n  return useCallback(() => {\n    recordEvent(\"toggle_published\", \"query\", query.id);\n    updateQuery({ is_draft: true });\n  }, [query.id, updateQuery]);\n}\n","import { useCallback } from \"react\";\nimport ApiKeyDialog from \"@/components/queries/ApiKeyDialog\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\n\nexport default function useApiKeyDialog(query, onChange) {\n  const handleChange = useImmutableCallback(onChange);\n\n  return useCallback(() => {\n    ApiKeyDialog.showModal({ query }).onClose(handleChange);\n  }, [query, handleChange]);\n}\n","import { useCallback } from \"react\";\nimport PermissionsEditorDialog from \"@/components/PermissionsEditorDialog\";\n\nexport default function usePermissionsEditorDialog(query) {\n  return useCallback(() => {\n    PermissionsEditorDialog.showModal({\n      aclUrl: `api/queries/${query.id}/acl`,\n      context: \"query\",\n      author: query.user,\n    });\n  }, [query.id, query.user]);\n}\n","import { isFunction, has } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\nimport { Moment } from \"@/components/proptypes\";\nimport TimeAgo from \"@/components/TimeAgo\";\nimport SchedulePhrase from \"@/components/queries/SchedulePhrase\";\nimport { IMG_ROOT } from \"@/services/data-source\";\n\nimport \"./QueryMetadata.less\";\n\nexport default function QueryMetadata({ query, dataSource, layout, onEditSchedule }) {\n  return (\n    <div className={`query-metadata query-metadata-${layout}`}>\n      <div className=\"query-metadata-item\">\n        <img className=\"profile__image_thumb\" src={query.user.profile_image_url} alt=\"Avatar\" />\n        <div className=\"query-metadata-property\">\n          <strong className={cx(\"query-metadata-label\", { \"text-muted\": query.user.is_disabled })}>\n            {query.user.name}\n          </strong>\n          <span className=\"query-metadata-value\">\n            created{\" \"}\n            <strong>\n              <TimeAgo date={query.created_at} />\n            </strong>\n          </span>\n        </div>\n      </div>\n      <div className=\"query-metadata-item\">\n        <img className=\"profile__image_thumb\" src={query.last_modified_by.profile_image_url} alt=\"Avatar\" />\n        <div className=\"query-metadata-property\">\n          <strong className={cx(\"query-metadata-label\", { \"text-muted\": query.last_modified_by.is_disabled })}>\n            {query.last_modified_by.name}\n          </strong>\n          <span className=\"query-metadata-value\">\n            updated{\" \"}\n            <strong>\n              <TimeAgo date={query.updated_at} />\n            </strong>\n          </span>\n        </div>\n      </div>\n      <div className=\"query-metadata-space\" />\n      {has(dataSource, \"name\") && has(dataSource, \"type\") && (\n        <div className=\"query-metadata-item\">\n          Data Source:\n          <img src={`${IMG_ROOT}/${dataSource.type}.png`} width=\"20\" alt={dataSource.type} />\n          <div className=\"query-metadata-property\">\n            <div className=\"query-metadata-label\">{dataSource.name}</div>\n          </div>\n        </div>\n      )}\n      <div className=\"query-metadata-item\">\n        <div className=\"query-metadata-property\">\n          <span className=\"query-metadata-label\">\n            <span className=\"zmdi zmdi-refresh m-r-5\" />\n            Refresh Schedule\n          </span>\n          <span className=\"query-metadata-value\">\n            <SchedulePhrase\n              isLink={isFunction(onEditSchedule)}\n              isNew={query.isNew()}\n              schedule={query.schedule}\n              onClick={onEditSchedule}\n            />\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nQueryMetadata.propTypes = {\n  layout: PropTypes.oneOf([\"table\", \"horizontal\"]),\n  query: PropTypes.shape({\n    created_at: PropTypes.oneOfType([PropTypes.string, Moment]).isRequired,\n    updated_at: PropTypes.oneOfType([PropTypes.string, Moment]).isRequired,\n    user: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      profile_image_url: PropTypes.string.isRequired,\n      is_disabled: PropTypes.bool,\n    }).isRequired,\n    last_modified_by: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      profile_image_url: PropTypes.string.isRequired,\n      is_disabled: PropTypes.bool,\n    }).isRequired,\n    schedule: PropTypes.object,\n  }).isRequired,\n  dataSource: PropTypes.shape({\n    type: PropTypes.string,\n    name: PropTypes.string,\n  }),\n  onEditSchedule: PropTypes.func,\n};\n\nQueryMetadata.defaultProps = {\n  layout: \"table\",\n  dataSource: null,\n  onEditSchedule: null,\n};\n","import React, { useState, useMemo, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\nimport { find, orderBy } from \"lodash\";\nimport useMedia from \"use-media\";\nimport Tabs from \"antd/lib/tabs\";\nimport Button from \"antd/lib/button\";\nimport Modal from \"antd/lib/modal\";\nimport VisualizationRenderer from \"@/components/visualizations/VisualizationRenderer\";\nimport PlainButton from \"@/components/PlainButton\";\n\nimport \"./QueryVisualizationTabs.less\";\n\nconst { TabPane } = Tabs;\n\nfunction EmptyState({ title, message, refreshButton }) {\n  return (\n    <div className=\"query-results-empty-state\">\n      <div className=\"empty-state-content\">\n        <div>\n          <img src=\"static/images/illustrations/no-query-results.svg\" alt=\"No Query Results Illustration\" />\n        </div>\n        <h3>{title}</h3>\n        <div className=\"m-b-20\">{message}</div>\n        {refreshButton}\n      </div>\n    </div>\n  );\n}\n\nEmptyState.propTypes = {\n  title: PropTypes.string.isRequired,\n  message: PropTypes.string.isRequired,\n  refreshButton: PropTypes.node,\n};\n\nEmptyState.defaultProps = {\n  refreshButton: null,\n};\n\nfunction TabWithDeleteButton({ visualizationName, canDelete, onDelete, ...props }) {\n  const handleDelete = useCallback(\n    e => {\n      e.stopPropagation();\n      Modal.confirm({\n        title: \"Delete Visualization\",\n        content: \"Are you sure you want to delete this visualization?\",\n        okText: \"Delete\",\n        okType: \"danger\",\n        onOk: onDelete,\n        maskClosable: true,\n        autoFocusButton: null,\n      });\n    },\n    [onDelete]\n  );\n\n  return (\n    <span {...props}>\n      {visualizationName}\n      {canDelete && (\n        <PlainButton className=\"delete-visualization-button\" onClick={handleDelete} aria-label=\"Close\" title=\"Close\">\n          <i className=\"zmdi zmdi-close\" aria-hidden=\"true\" />\n        </PlainButton>\n      )}\n    </span>\n  );\n}\n\nTabWithDeleteButton.propTypes = {\n  visualizationName: PropTypes.string.isRequired,\n  canDelete: PropTypes.bool,\n  onDelete: PropTypes.func,\n};\nTabWithDeleteButton.defaultProps = { canDelete: false, onDelete: () => {} };\n\nconst defaultVisualizations = [\n  {\n    type: \"TABLE\",\n    name: \"Table\",\n    id: null,\n    options: {},\n  },\n];\n\nexport default function QueryVisualizationTabs({\n  queryResult,\n  selectedTab,\n  showNewVisualizationButton,\n  canDeleteVisualizations,\n  onChangeTab,\n  onAddVisualization,\n  onDeleteVisualization,\n  refreshButton,\n  canRefresh,\n  ...props\n}) {\n  const visualizations = useMemo(\n    () => (props.visualizations.length > 0 ? props.visualizations : defaultVisualizations),\n    [props.visualizations]\n  );\n\n  const tabsProps = {};\n  if (find(visualizations, { id: selectedTab })) {\n    tabsProps.activeKey = `${selectedTab}`;\n  }\n\n  if (showNewVisualizationButton) {\n    tabsProps.tabBarExtraContent = (\n      <Button\n        className=\"add-visualization-button\"\n        data-test=\"NewVisualization\"\n        type=\"link\"\n        onClick={() => onAddVisualization()}>\n        <i className=\"fa fa-plus\" aria-hidden=\"true\" />\n        <span className=\"m-l-5 hidden-xs\">Add Visualization</span>\n      </Button>\n    );\n  }\n\n  const orderedVisualizations = useMemo(() => orderBy(visualizations, [\"id\"]), [visualizations]);\n  const isFirstVisualization = useCallback(visId => visId === orderedVisualizations[0].id, [orderedVisualizations]);\n  const isMobile = useMedia({ maxWidth: 768 });\n\n  const [filters, setFilters] = useState([]);\n\n  return (\n    <Tabs\n      {...tabsProps}\n      type=\"card\"\n      className={cx(\"query-visualization-tabs card-style\")}\n      data-test=\"QueryPageVisualizationTabs\"\n      animated={false}\n      tabBarGutter={0}\n      onChange={activeKey => onChangeTab(+activeKey)}\n      destroyInactiveTabPane>\n      {orderedVisualizations.map(visualization => (\n        <TabPane\n          key={`${visualization.id}`}\n          tab={\n            <TabWithDeleteButton\n              data-test={`QueryPageVisualizationTab${visualization.id}`}\n              canDelete={!isMobile && canDeleteVisualizations && !isFirstVisualization(visualization.id)}\n              visualizationName={visualization.name}\n              onDelete={() => onDeleteVisualization(visualization.id)}\n            />\n          }>\n          {queryResult ? (\n            <VisualizationRenderer\n              visualization={visualization}\n              queryResult={queryResult}\n              context=\"query\"\n              filters={filters}\n              onFiltersChange={setFilters}\n            />\n          ) : (\n            <EmptyState\n              title=\"Query has no result\"\n              message={\n                canRefresh\n                  ? \"Execute/Refresh the query to show results.\"\n                  : \"You do not have a permission to execute/refresh this query.\"\n              }\n              refreshButton={refreshButton}\n            />\n          )}\n        </TabPane>\n      ))}\n    </Tabs>\n  );\n}\n\nQueryVisualizationTabs.propTypes = {\n  queryResult: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  visualizations: PropTypes.arrayOf(PropTypes.object),\n  selectedTab: PropTypes.number,\n  showNewVisualizationButton: PropTypes.bool,\n  canDeleteVisualizations: PropTypes.bool,\n  onChangeTab: PropTypes.func,\n  onAddVisualization: PropTypes.func,\n  onDeleteVisualization: PropTypes.func,\n  refreshButton: PropTypes.node,\n  canRefresh: PropTypes.bool,\n};\n\nQueryVisualizationTabs.defaultProps = {\n  queryResult: null,\n  visualizations: [],\n  selectedTab: null,\n  showNewVisualizationButton: false,\n  canDeleteVisualizations: false,\n  onChangeTab: () => {},\n  onAddVisualization: () => {},\n  onDeleteVisualization: () => {},\n  refreshButton: null,\n  canRefresh: true,\n};\n","import { includes } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Alert from \"antd/lib/alert\";\nimport Button from \"antd/lib/button\";\nimport Timer from \"@/components/Timer\";\n\nexport default function QueryExecutionStatus({ status, updatedAt, error, isCancelling, onCancel }) {\n  const alertType = status === \"failed\" ? \"error\" : \"info\";\n  const showTimer = status !== \"failed\" && updatedAt;\n  const isCancelButtonAvailable = includes([\"waiting\", \"processing\"], status);\n  let message = isCancelling ? <React.Fragment>Cancelling&hellip;</React.Fragment> : null;\n\n  switch (status) {\n    case \"waiting\":\n      if (!isCancelling) {\n        message = <React.Fragment>Query in queue&hellip;</React.Fragment>;\n      }\n      break;\n    case \"processing\":\n      if (!isCancelling) {\n        message = <React.Fragment>Executing query&hellip;</React.Fragment>;\n      }\n      break;\n    case \"loading-result\":\n      message = <React.Fragment>Loading results&hellip;</React.Fragment>;\n      break;\n    case \"failed\":\n      message = (\n        <React.Fragment>\n          Error running query: <strong>{error}</strong>\n        </React.Fragment>\n      );\n      break;\n    // no default\n  }\n\n  return (\n    <Alert\n      data-test=\"QueryExecutionStatus\"\n      type={alertType}\n      message={\n        <div className=\"d-flex align-items-center\">\n          <div className=\"flex-fill p-t-5 p-b-5\">\n            {message} {showTimer && <Timer from={updatedAt} />}\n          </div>\n          <div>\n            {isCancelButtonAvailable && (\n              <Button className=\"m-l-10\" type=\"primary\" size=\"small\" disabled={isCancelling} onClick={onCancel}>\n                Cancel\n              </Button>\n            )}\n          </div>\n        </div>\n      }\n    />\n  );\n}\n\nQueryExecutionStatus.propTypes = {\n  status: PropTypes.string,\n  updatedAt: PropTypes.any,\n  error: PropTypes.string,\n  isCancelling: PropTypes.bool,\n  onCancel: PropTypes.func,\n};\n\nQueryExecutionStatus.defaultProps = {\n  status: \"waiting\",\n  updatedAt: null,\n  error: null,\n  isCancelling: true,\n  onCancel: () => {},\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Card from \"antd/lib/card\";\nimport WarningFilledIcon from \"@ant-design/icons/WarningFilled\";\nimport Typography from \"antd/lib/typography\";\nimport Link from \"@/components/Link\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { currentUser } from \"@/services/auth\";\n\nimport useQueryFlags from \"../hooks/useQueryFlags\";\nimport \"./QuerySourceAlerts.less\";\n\nexport default function QuerySourceAlerts({ query, dataSourcesAvailable }) {\n  const queryFlags = useQueryFlags(query); // we don't use flags that depend on data source\n\n  let message = null;\n  if (queryFlags.isNew && !queryFlags.canCreate) {\n    message = (\n      <React.Fragment>\n        <Typography.Title level={4}>\n          You don't have permission to create new queries on any of the data sources available to you.\n        </Typography.Title>\n        <p>\n          <Typography.Text type=\"secondary\">\n            You can either <Link href=\"queries\">browse existing queries</Link>, or ask for additional permissions from\n            your Redash admin.\n          </Typography.Text>\n        </p>\n      </React.Fragment>\n    );\n  } else if (!dataSourcesAvailable) {\n    if (currentUser.isAdmin) {\n      message = (\n        <React.Fragment>\n          <Typography.Title level={4}>\n            Looks like no data sources were created yet or none of them available to the group(s) you're member of.\n          </Typography.Title>\n          <p>\n            <Typography.Text type=\"secondary\">Please create one first, and then start querying.</Typography.Text>\n          </p>\n\n          <div className=\"query-source-alerts-actions\">\n            <Link.Button type=\"primary\" href=\"data_sources/new\">\n              Create Data Source\n            </Link.Button>\n            <Link.Button type=\"default\" href=\"groups\">\n              Manage Group Permissions\n            </Link.Button>\n          </div>\n        </React.Fragment>\n      );\n    } else {\n      message = (\n        <React.Fragment>\n          <Typography.Title level={4}>\n            Looks like no data sources were created yet or none of them available to the group(s) you're member of.\n          </Typography.Title>\n          <p>\n            <Typography.Text type=\"secondary\">Please ask your Redash admin to create one first.</Typography.Text>\n          </p>\n        </React.Fragment>\n      );\n    }\n  }\n\n  if (!message) {\n    return null;\n  }\n\n  return (\n    <div className=\"query-source-alerts\">\n      <Card>\n        <DynamicComponent name=\"QuerySource.Alerts\" query={query} dataSourcesAvailable={dataSourcesAvailable}>\n          <div className=\"query-source-alerts-icon\">\n            <WarningFilledIcon />\n          </div>\n          {message}\n        </DynamicComponent>\n      </Card>\n    </div>\n  );\n}\n\nQuerySourceAlerts.propTypes = {\n  query: PropTypes.object.isRequired,\n  dataSourcesAvailable: PropTypes.bool,\n};\n\nQuerySourceAlerts.defaultProps = {\n  dataSourcesAvailable: false,\n};\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport LoadingState from \"@/components/items-list/components/LoadingState\";\nimport { Query } from \"@/services/query\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\n\nexport default function wrapQueryPage(WrappedComponent) {\n  function QueryPageWrapper({ queryId, onError, ...props }) {\n    const [query, setQuery] = useState(null);\n\n    const handleError = useImmutableCallback(onError);\n\n    useEffect(() => {\n      let isCancelled = false;\n      const promise = queryId ? Query.get({ id: queryId }) : Promise.resolve(Query.newQuery());\n      promise\n        .then(result => {\n          if (!isCancelled) {\n            setQuery(result);\n          }\n        })\n        .catch(handleError);\n\n      return () => {\n        isCancelled = true;\n      };\n    }, [queryId, handleError]);\n\n    if (!query) {\n      return <LoadingState className=\"flex-fill\" />;\n    }\n\n    return <WrappedComponent query={query} onError={onError} {...props} />;\n  }\n\n  QueryPageWrapper.propTypes = {\n    queryId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  };\n\n  QueryPageWrapper.defaultProps = {\n    queryId: null,\n  };\n\n  return QueryPageWrapper;\n}\n","import { isString } from \"lodash\";\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Modal from \"antd/lib/modal\";\nimport Input from \"antd/lib/input\";\nimport List from \"antd/lib/list\";\nimport Link from \"@/components/Link\";\nimport PlainButton from \"@/components/PlainButton\";\nimport CloseOutlinedIcon from \"@ant-design/icons/CloseOutlined\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport { QueryTagsControl } from \"@/components/tags-control/TagsControl\";\nimport { Dashboard } from \"@/services/dashboard\";\nimport notification from \"@/services/notification\";\nimport useSearchResults from \"@/lib/hooks/useSearchResults\";\n\nimport \"./add-to-dashboard-dialog.less\";\n\nfunction AddToDashboardDialog({ dialog, visualization }) {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const [doSearch, dashboards, isLoading] = useSearchResults(\n    term => {\n      if (isString(term) && term !== \"\") {\n        return Dashboard.query({ q: term })\n          .then(results => results.results)\n          .catch(() => []);\n      }\n      return Promise.resolve([]);\n    },\n    { initialResults: [] }\n  );\n\n  const [selectedDashboard, setSelectedDashboard] = useState(null);\n\n  const [saveInProgress, setSaveInProgress] = useState(false);\n\n  useEffect(() => {\n    doSearch(searchTerm);\n  }, [doSearch, searchTerm]);\n\n  function addWidgetToDashboard() {\n    // Load dashboard with all widgets\n    Dashboard.get(selectedDashboard)\n      .then(dashboard => {\n        dashboard.addWidget(visualization);\n        return dashboard;\n      })\n      .then(dashboard => {\n        dialog.close();\n        const key = `notification-${Math.random()\n          .toString(36)\n          .substr(2, 10)}`;\n        notification.success(\n          \"Widget added to dashboard\",\n          <React.Fragment>\n            <Link href={`${dashboard.url}`} onClick={() => notification.close(key)}>\n              {dashboard.name}\n            </Link>\n            <QueryTagsControl isDraft={dashboard.is_draft} tags={dashboard.tags} />\n          </React.Fragment>,\n          { key }\n        );\n      })\n      .catch(() => {\n        notification.error(\"Widget not added.\");\n      })\n      .finally(() => {\n        setSaveInProgress(false);\n      });\n  }\n\n  const items = selectedDashboard ? [selectedDashboard] : dashboards;\n\n  return (\n    <Modal\n      {...dialog.props}\n      title=\"Add to Dashboard\"\n      okButtonProps={{ disabled: !selectedDashboard || saveInProgress, loading: saveInProgress }}\n      cancelButtonProps={{ disabled: saveInProgress }}\n      onOk={addWidgetToDashboard}>\n      <label htmlFor=\"add-to-dashboard-dialog-dashboard\">Choose the dashboard to add this query to:</label>\n\n      {!selectedDashboard && (\n        <Input\n          id=\"add-to-dashboard-dialog-dashboard\"\n          className=\"w-100\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search a dashboard by name\"\n          value={searchTerm}\n          onChange={event => setSearchTerm(event.target.value)}\n          suffix={\n            <PlainButton className={searchTerm === \"\" ? \"hidden\" : null} onClick={() => setSearchTerm(\"\")}>\n              <CloseOutlinedIcon />\n            </PlainButton>\n          }\n        />\n      )}\n\n      {(items.length > 0 || isLoading) && (\n        <List\n          className={selectedDashboard ? \"add-to-dashboard-dialog-selection\" : \"add-to-dashboard-dialog-search-results\"}\n          bordered\n          itemLayout=\"horizontal\"\n          loading={isLoading}\n          dataSource={items}\n          renderItem={d => (\n            <List.Item\n              key={`dashboard-${d.id}`}\n              actions={\n                selectedDashboard\n                  ? [\n                      <PlainButton onClick={() => setSelectedDashboard(null)}>\n                        <CloseOutlinedIcon />\n                      </PlainButton>,\n                    ]\n                  : []\n              }\n              onClick={selectedDashboard ? null : () => setSelectedDashboard(d)}>\n              <div className=\"add-to-dashboard-dialog-item-content\">\n                {d.name}\n                <QueryTagsControl isDraft={d.is_draft} tags={d.tags} />\n              </div>\n            </List.Item>\n          )}\n        />\n      )}\n    </Modal>\n  );\n}\n\nAddToDashboardDialog.propTypes = {\n  dialog: DialogPropType.isRequired,\n  visualization: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nexport default wrapDialog(AddToDashboardDialog);\n","import { uniqueId } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Alert from \"antd/lib/alert\";\nimport Button from \"antd/lib/button\";\nimport Checkbox from \"antd/lib/checkbox\";\nimport Form from \"antd/lib/form\";\nimport InputNumber from \"antd/lib/input-number\";\nimport Modal from \"antd/lib/modal\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport { clientConfig } from \"@/services/auth\";\nimport CodeBlock from \"@/components/CodeBlock\";\n\nimport \"./EmbedQueryDialog.less\";\n\nclass EmbedQueryDialog extends React.Component {\n  static propTypes = {\n    dialog: DialogPropType.isRequired,\n    query: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n    visualization: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  };\n\n  state = {\n    enableChangeIframeSize: false,\n    iframeWidth: 720,\n    iframeHeight: 391,\n  };\n\n  constructor(props) {\n    super(props);\n    const { query, visualization } = props;\n    this.embedUrl = `${clientConfig.basePath}embed/query/${query.id}/visualization/${visualization.id}?api_key=${\n      query.api_key\n    }&${query.getParameters().toUrlParams()}`;\n\n    if (window.snapshotUrlBuilder) {\n      this.snapshotUrl = window.snapshotUrlBuilder(query, visualization);\n    }\n  }\n\n  urlEmbedLabelId = uniqueId(\"url-embed-label\");\n  iframeEmbedLabelId = uniqueId(\"iframe-embed-label\");\n\n  render() {\n    const { query, dialog } = this.props;\n    const { enableChangeIframeSize, iframeWidth, iframeHeight } = this.state;\n\n    return (\n      <Modal\n        {...dialog.props}\n        className=\"embed-query-dialog\"\n        title=\"Embed Query\"\n        footer={<Button onClick={dialog.dismiss}>Close</Button>}>\n        {query.is_safe ? (\n          <React.Fragment>\n            <h5 id={this.urlEmbedLabelId} className=\"m-t-0\">\n              Public URL\n            </h5>\n            <div className=\"m-b-30\">\n              <CodeBlock aria-labelledby={this.urlEmbedLabelId} data-test=\"EmbedIframe\" copyable>\n                {this.embedUrl}\n              </CodeBlock>\n            </div>\n            <h5 id={this.iframeEmbedLabelId} className=\"m-t-0\">\n              IFrame Embed\n            </h5>\n            <div>\n              <CodeBlock aria-labelledby={this.iframeEmbedLabelId} copyable>\n                {`<iframe src=\"${this.embedUrl}\" width=\"${iframeWidth}\" height=\"${iframeHeight}\"></iframe>`}\n              </CodeBlock>\n              <Form className=\"m-t-10\" layout=\"inline\">\n                <Form.Item>\n                  <Checkbox\n                    checked={enableChangeIframeSize}\n                    onChange={e => this.setState({ enableChangeIframeSize: e.target.checked })}\n                  />\n                </Form.Item>\n                <Form.Item label=\"Width\">\n                  <InputNumber\n                    className=\"size-input\"\n                    value={iframeWidth}\n                    onChange={value => this.setState({ iframeWidth: value })}\n                    size=\"small\"\n                    disabled={!enableChangeIframeSize}\n                  />\n                </Form.Item>\n                <Form.Item label=\"Height\">\n                  <InputNumber\n                    className=\"size-input\"\n                    value={iframeHeight}\n                    onChange={value => this.setState({ iframeHeight: value })}\n                    size=\"small\"\n                    disabled={!enableChangeIframeSize}\n                  />\n                </Form.Item>\n              </Form>\n            </div>\n            {this.snapshotUrl && (\n              <React.Fragment>\n                <h5>Image Embed</h5>\n                <CodeBlock copyable>{this.snapshotUrl}</CodeBlock>\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        ) : (\n          <Alert\n            message=\"Currently it is not possible to embed queries that contain text parameters.\"\n            type=\"error\"\n            data-test=\"EmbedErrorAlert\"\n          />\n        )}\n      </Modal>\n    );\n  }\n}\n\nexport default wrapDialog(EmbedQueryDialog);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Link from \"@/components/Link\";\n\nexport default function QueryResultsLink(props) {\n  let href = \"\";\n\n  const { query, queryResult, fileType } = props;\n  const resultId = queryResult.getId && queryResult.getId();\n  const resultData = queryResult.getData && queryResult.getData();\n\n  if (resultId && resultData && query.name) {\n    if (query.id) {\n      href = `api/queries/${query.id}/results/${resultId}.${fileType}${props.embed ? `?api_key=${props.apiKey}` : \"\"}`;\n    } else {\n      href = `api/query_results/${resultId}.${fileType}`;\n    }\n  }\n\n  return (\n    <Link target=\"_blank\" rel=\"noopener noreferrer\" disabled={props.disabled} href={href} download>\n      {props.children}\n    </Link>\n  );\n}\n\nQueryResultsLink.propTypes = {\n  query: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  queryResult: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  fileType: PropTypes.string,\n  disabled: PropTypes.bool.isRequired,\n  embed: PropTypes.bool,\n  apiKey: PropTypes.string,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n};\n\nQueryResultsLink.defaultProps = {\n  queryResult: {},\n  fileType: \"csv\",\n  embed: false,\n  apiKey: \"\",\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Dropdown from \"antd/lib/dropdown\";\nimport Menu from \"antd/lib/menu\";\nimport Button from \"antd/lib/button\";\nimport PlainButton from \"@/components/PlainButton\";\nimport { clientConfig } from \"@/services/auth\";\n\nimport PlusCircleFilledIcon from \"@ant-design/icons/PlusCircleFilled\";\nimport ShareAltOutlinedIcon from \"@ant-design/icons/ShareAltOutlined\";\nimport FileOutlinedIcon from \"@ant-design/icons/FileOutlined\";\nimport FileExcelOutlinedIcon from \"@ant-design/icons/FileExcelOutlined\";\nimport EllipsisOutlinedIcon from \"@ant-design/icons/EllipsisOutlined\";\n\nimport QueryResultsLink from \"./QueryResultsLink\";\n\nexport default function QueryControlDropdown(props) {\n  const menu = (\n    <Menu>\n      {!props.query.isNew() && (!props.query.is_draft || !props.query.is_archived) && (\n        <Menu.Item>\n          <PlainButton onClick={() => props.openAddToDashboardForm(props.selectedTab)}>\n            <PlusCircleFilledIcon /> Add to Dashboard\n          </PlainButton>\n        </Menu.Item>\n      )}\n      {!clientConfig.disablePublicUrls && !props.query.isNew() && (\n        <Menu.Item>\n          <PlainButton\n            onClick={() => props.showEmbedDialog(props.query, props.selectedTab)}\n            data-test=\"ShowEmbedDialogButton\">\n            <ShareAltOutlinedIcon /> Embed Elsewhere\n          </PlainButton>\n        </Menu.Item>\n      )}\n      <Menu.Item>\n        <QueryResultsLink\n          fileType=\"csv\"\n          disabled={props.queryExecuting || !props.queryResult.getData || !props.queryResult.getData()}\n          query={props.query}\n          queryResult={props.queryResult}\n          embed={props.embed}\n          apiKey={props.apiKey}>\n          <FileOutlinedIcon /> Download as CSV File\n        </QueryResultsLink>\n      </Menu.Item>\n      <Menu.Item>\n        <QueryResultsLink\n          fileType=\"tsv\"\n          disabled={props.queryExecuting || !props.queryResult.getData || !props.queryResult.getData()}\n          query={props.query}\n          queryResult={props.queryResult}\n          embed={props.embed}\n          apiKey={props.apiKey}>\n          <FileOutlinedIcon /> Download as TSV File\n        </QueryResultsLink>\n      </Menu.Item>\n      <Menu.Item>\n        <QueryResultsLink\n          fileType=\"xlsx\"\n          disabled={props.queryExecuting || !props.queryResult.getData || !props.queryResult.getData()}\n          query={props.query}\n          queryResult={props.queryResult}\n          embed={props.embed}\n          apiKey={props.apiKey}>\n          <FileExcelOutlinedIcon /> Download as Excel File\n        </QueryResultsLink>\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <Dropdown trigger={[\"click\"]} overlay={menu} overlayClassName=\"query-control-dropdown-overlay\">\n      <Button data-test=\"QueryControlDropdownButton\">\n        <EllipsisOutlinedIcon rotate={90} />\n      </Button>\n    </Dropdown>\n  );\n}\n\nQueryControlDropdown.propTypes = {\n  query: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  queryResult: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  queryExecuting: PropTypes.bool.isRequired,\n  showEmbedDialog: PropTypes.func.isRequired,\n  embed: PropTypes.bool,\n  apiKey: PropTypes.string,\n  selectedTab: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  openAddToDashboardForm: PropTypes.func.isRequired,\n};\n\nQueryControlDropdown.defaultProps = {\n  queryResult: {},\n  embed: false,\n  apiKey: \"\",\n  selectedTab: \"\",\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"antd/lib/button\";\nimport FormOutlinedIcon from \"@ant-design/icons/FormOutlined\";\n\nexport default function EditVisualizationButton(props) {\n  return (\n    <Button\n      data-test=\"EditVisualization\"\n      className=\"edit-visualization\"\n      onClick={() => props.openVisualizationEditor(props.selectedTab)}>\n      <FormOutlinedIcon />\n      <span className=\"hidden-xs hidden-s hidden-m\">Edit Visualization</span>\n    </Button>\n  );\n}\n\nEditVisualizationButton.propTypes = {\n  openVisualizationEditor: PropTypes.func.isRequired,\n  selectedTab: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nEditVisualizationButton.defaultProps = {\n  selectedTab: \"\",\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport WarningTwoTone from \"@ant-design/icons/WarningTwoTone\";\nimport TimeAgo from \"@/components/TimeAgo\";\nimport Tooltip from \"@/components/Tooltip\";\nimport useAddToDashboardDialog from \"../hooks/useAddToDashboardDialog\";\nimport useEmbedDialog from \"../hooks/useEmbedDialog\";\nimport QueryControlDropdown from \"@/components/EditVisualizationButton/QueryControlDropdown\";\nimport EditVisualizationButton from \"@/components/EditVisualizationButton\";\nimport useQueryResultData from \"@/lib/useQueryResultData\";\nimport { durationHumanize, pluralize, prettySize } from \"@/lib/utils\";\n\nimport \"./QueryExecutionMetadata.less\";\n\nexport default function QueryExecutionMetadata({\n  query,\n  queryResult,\n  isQueryExecuting,\n  selectedVisualization,\n  showEditVisualizationButton,\n  onEditVisualization,\n  extraActions,\n}) {\n  const queryResultData = useQueryResultData(queryResult);\n  const openAddToDashboardDialog = useAddToDashboardDialog(query);\n  const openEmbedDialog = useEmbedDialog(query);\n  return (\n    <div className=\"query-execution-metadata\">\n      <span className=\"m-r-5\">\n        <QueryControlDropdown\n          query={query}\n          queryResult={queryResult}\n          queryExecuting={isQueryExecuting}\n          showEmbedDialog={openEmbedDialog}\n          embed={false}\n          apiKey={query.api_key}\n          selectedTab={selectedVisualization}\n          openAddToDashboardForm={openAddToDashboardDialog}\n        />\n      </span>\n      {extraActions}\n      {showEditVisualizationButton && (\n        <EditVisualizationButton openVisualizationEditor={onEditVisualization} selectedTab={selectedVisualization} />\n      )}\n      <span className=\"m-l-5 m-r-10\">\n        <span>\n          {queryResultData.truncated === true && (\n            <span className=\"m-r-5\">\n              <Tooltip\n                title={\n                  \"Result truncated to \" +\n                  queryResultData.rows.length +\n                  \" rows. Databricks may truncate query results that are unstably large.\"\n                }>\n                <WarningTwoTone twoToneColor=\"#FF9800\" />\n              </Tooltip>\n            </span>\n          )}\n          <strong>{queryResultData.rows.length}</strong> {pluralize(\"row\", queryResultData.rows.length)}\n        </span>\n        <span className=\"m-l-5\">\n          {!isQueryExecuting && (\n            <React.Fragment>\n              <strong>{durationHumanize(queryResultData.runtime)}</strong>\n              <span className=\"hidden-xs\"> runtime</span>\n            </React.Fragment>\n          )}\n          {isQueryExecuting && <span>Running&hellip;</span>}\n        </span>\n        {queryResultData.metadata.data_scanned && (\n          <span className=\"m-l-5\">\n            Data Scanned\n            <strong>{prettySize(queryResultData.metadata.data_scanned)}</strong>\n          </span>\n        )}\n      </span>\n      <div>\n        <span className=\"m-r-10\">\n          <span className=\"hidden-xs\">Refreshed </span>\n          <strong>\n            <TimeAgo date={queryResultData.retrievedAt} placeholder=\"-\" />\n          </strong>\n        </span>\n      </div>\n    </div>\n  );\n}\n\nQueryExecutionMetadata.propTypes = {\n  query: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  queryResult: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  isQueryExecuting: PropTypes.bool,\n  selectedVisualization: PropTypes.number,\n  showEditVisualizationButton: PropTypes.bool,\n  onEditVisualization: PropTypes.func,\n  extraActions: PropTypes.node,\n};\n\nQueryExecutionMetadata.defaultProps = {\n  isQueryExecuting: false,\n  selectedVisualization: null,\n  showEditVisualizationButton: false,\n  onEditVisualization: () => {},\n  extraActions: null,\n};\n","import { find } from \"lodash\";\nimport { useCallback } from \"react\";\nimport AddToDashboardDialog from \"@/components/queries/AddToDashboardDialog\";\n\nexport default function useAddToDashboardDialog(query) {\n  return useCallback(\n    visualizationId => {\n      const visualization = find(query.visualizations, { id: visualizationId });\n      AddToDashboardDialog.showModal({ visualization });\n    },\n    [query.visualizations]\n  );\n}\n","import { find } from \"lodash\";\nimport { useCallback } from \"react\";\nimport EmbedQueryDialog from \"@/components/queries/EmbedQueryDialog\";\n\nexport default function useEmbedDialog(query) {\n  return useCallback(\n    (unusedQuery, visualizationId) => {\n      const visualization = find(query.visualizations, { id: visualizationId });\n      EmbedQueryDialog.showModal({ query, visualization });\n    },\n    [query]\n  );\n}\n","import { useCallback, useEffect, useRef, useState, useMemo } from \"react\";\nimport DataSource from \"@/services/data-source\";\nimport notification from \"@/services/notification\";\n\nfunction getSchema(dataSource, refresh = undefined) {\n  if (!dataSource) {\n    return Promise.resolve([]);\n  }\n\n  return DataSource.fetchSchema(dataSource, refresh).catch(() => {\n    notification.error(\"Schema refresh failed.\", \"Please try again later.\");\n    return Promise.resolve([]);\n  });\n}\n\nexport default function useDataSourceSchema(dataSource) {\n  const [schema, setSchema] = useState([]);\n  const [loadingSchema, setLoadingSchema] = useState(true);\n  const refreshSchemaTokenRef = useRef(null);\n\n  const reloadSchema = useCallback(\n    (refresh = undefined) => {\n      setLoadingSchema(true);\n      const refreshToken = Math.random()\n        .toString(36)\n        .substr(2);\n      refreshSchemaTokenRef.current = refreshToken;\n      getSchema(dataSource, refresh)\n        .then(data => {\n          if (refreshSchemaTokenRef.current === refreshToken) {\n            setSchema(data);\n          }\n        })\n        .finally(() => {\n          if (refreshSchemaTokenRef.current === refreshToken) {\n            setLoadingSchema(false);\n          }\n        });\n    },\n    [dataSource]\n  );\n\n  useEffect(() => {\n    reloadSchema();\n  }, [reloadSchema]);\n\n  useEffect(() => {\n    return () => {\n      // cancel pending operations\n      refreshSchemaTokenRef.current = null;\n    };\n  }, []);\n\n  return useMemo(() => [schema, loadingSchema, reloadSchema], [schema, loadingSchema, reloadSchema]);\n}\n","import { isNil, map, filter, some, includes, get } from \"lodash\";\nimport cx from \"classnames\";\nimport React, { useState, useCallback, useMemo, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDebouncedCallback } from \"use-debounce\";\nimport Input from \"antd/lib/input\";\nimport Button from \"antd/lib/button\";\nimport AutoSizer from \"react-virtualized/dist/commonjs/AutoSizer\";\nimport List from \"react-virtualized/dist/commonjs/List\";\nimport PlainButton from \"@/components/PlainButton\";\nimport Tooltip from \"@/components/Tooltip\";\nimport useDataSourceSchema from \"@/pages/queries/hooks/useDataSourceSchema\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\nimport LoadingState from \"../items-list/components/LoadingState\";\n\nconst SchemaItemColumnType = PropTypes.shape({\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string,\n});\n\nexport const SchemaItemType = PropTypes.shape({\n  name: PropTypes.string.isRequired,\n  size: PropTypes.number,\n  loading: PropTypes.bool,\n  columns: PropTypes.arrayOf(SchemaItemColumnType).isRequired,\n});\n\nconst schemaTableHeight = 22;\nconst schemaColumnHeight = 18;\n\nfunction SchemaItem({ item, expanded, onToggle, onSelect, ...props }) {\n  const handleSelect = useCallback(\n    (event, ...args) => {\n      event.preventDefault();\n      event.stopPropagation();\n      onSelect(...args);\n    },\n    [onSelect]\n  );\n\n  if (!item) {\n    return null;\n  }\n\n  const tableDisplayName = item.displayName || item.name;\n\n  return (\n    <div {...props}>\n      <div className=\"schema-list-item\">\n        <PlainButton className=\"table-name\" onClick={onToggle}>\n          <i className=\"fa fa-table m-r-5\" aria-hidden=\"true\" />\n          <strong>\n            <span title={item.name}>{tableDisplayName}</span>\n            {!isNil(item.size) && <span> ({item.size})</span>}\n          </strong>\n        </PlainButton>\n        <Tooltip\n          title=\"Insert table name into query text\"\n          mouseEnterDelay={0}\n          mouseLeaveDelay={0}\n          placement=\"topRight\"\n          arrowPointAtCenter>\n          <PlainButton className=\"copy-to-editor\" onClick={e => handleSelect(e, item.name)}>\n            <i className=\"fa fa-angle-double-right\" aria-hidden=\"true\" />\n          </PlainButton>\n        </Tooltip>\n      </div>\n      {expanded && (\n        <div className=\"table-open\">\n          {item.loading ? (\n            <div className=\"table-open\">Loading...</div>\n          ) : (\n            map(item.columns, column => {\n              const columnName = get(column, \"name\");\n              const columnType = get(column, \"type\");\n              return (\n                <Tooltip\n                  title=\"Insert column name into query text\"\n                  mouseEnterDelay={0}\n                  mouseLeaveDelay={0}\n                  placement=\"rightTop\">\n                  <PlainButton key={columnName} className=\"table-open-item\" onClick={e => handleSelect(e, columnName)}>\n                    <div>\n                      {columnName} {columnType && <span className=\"column-type\">{columnType}</span>}\n                    </div>\n\n                    <div className=\"copy-to-editor\">\n                      <i className=\"fa fa-angle-double-right\" aria-hidden=\"true\" />\n                    </div>\n                  </PlainButton>\n                </Tooltip>\n              );\n            })\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nSchemaItem.propTypes = {\n  item: SchemaItemType,\n  expanded: PropTypes.bool,\n  onToggle: PropTypes.func,\n  onSelect: PropTypes.func,\n};\n\nSchemaItem.defaultProps = {\n  item: null,\n  expanded: false,\n  onToggle: () => {},\n  onSelect: () => {},\n};\n\nfunction SchemaLoadingState() {\n  return (\n    <div className=\"schema-loading-state\">\n      <LoadingState className=\"\" />\n    </div>\n  );\n}\n\nexport function SchemaList({ loading, schema, expandedFlags, onTableExpand, onItemSelect }) {\n  const [listRef, setListRef] = useState(null);\n\n  useEffect(() => {\n    if (listRef) {\n      listRef.recomputeRowHeights();\n    }\n  }, [listRef, schema, expandedFlags]);\n\n  return (\n    <div className=\"schema-browser\">\n      {loading && <SchemaLoadingState />}\n      {!loading && (\n        <AutoSizer>\n          {({ width, height }) => (\n            <List\n              ref={setListRef}\n              width={width}\n              height={height}\n              rowCount={schema.length}\n              rowHeight={({ index }) => {\n                const item = schema[index];\n                const columnsLength = !item.loading ? item.columns.length : 1;\n                let columnCount = expandedFlags[item.name] ? columnsLength : 0;\n                return schemaTableHeight + schemaColumnHeight * columnCount;\n              }}\n              rowRenderer={({ key, index, style }) => {\n                const item = schema[index];\n                return (\n                  <SchemaItem\n                    key={key}\n                    style={style}\n                    item={item}\n                    expanded={expandedFlags[item.name]}\n                    onToggle={() => onTableExpand(item.name)}\n                    onSelect={onItemSelect}\n                  />\n                );\n              }}\n            />\n          )}\n        </AutoSizer>\n      )}\n    </div>\n  );\n}\n\nexport function applyFilterOnSchema(schema, filterString) {\n  const filters = filter(filterString.toLowerCase().split(/\\s+/), s => s.length > 0);\n\n  // Empty string: return original schema\n  if (filters.length === 0) {\n    return schema;\n  }\n\n  // Single word: matches table or column\n  if (filters.length === 1) {\n    const nameFilter = filters[0];\n    const columnFilter = filters[0];\n    return filter(\n      schema,\n      item =>\n        includes(item.name.toLowerCase(), nameFilter) ||\n        some(item.columns, column => includes(get(column, \"name\").toLowerCase(), columnFilter))\n    );\n  }\n\n  // Two (or more) words: first matches table, seconds matches column\n  const nameFilter = filters[0];\n  const columnFilter = filters[1];\n  return filter(\n    map(schema, item => {\n      if (includes(item.name.toLowerCase(), nameFilter)) {\n        item = {\n          ...item,\n          columns: filter(item.columns, column => includes(get(column, \"name\").toLowerCase(), columnFilter)),\n        };\n        return item.columns.length > 0 ? item : null;\n      }\n    })\n  );\n}\n\nexport default function SchemaBrowser({\n  dataSource,\n  onSchemaUpdate,\n  onItemSelect,\n  options,\n  onOptionsUpdate,\n  ...props\n}) {\n  const [schema, isLoading, refreshSchema] = useDataSourceSchema(dataSource);\n  const [filterString, setFilterString] = useState(\"\");\n  const filteredSchema = useMemo(() => applyFilterOnSchema(schema, filterString), [schema, filterString]);\n  const [handleFilterChange] = useDebouncedCallback(setFilterString, 500);\n  const [expandedFlags, setExpandedFlags] = useState({});\n\n  const handleSchemaUpdate = useImmutableCallback(onSchemaUpdate);\n\n  useEffect(() => {\n    setExpandedFlags({});\n    handleSchemaUpdate(schema);\n  }, [schema, handleSchemaUpdate]);\n\n  if (schema.length === 0 && !isLoading) {\n    return null;\n  }\n\n  function toggleTable(tableName) {\n    setExpandedFlags({\n      ...expandedFlags,\n      [tableName]: !expandedFlags[tableName],\n    });\n  }\n\n  return (\n    <div className=\"schema-container\" {...props}>\n      <div className=\"schema-control\">\n        <Input\n          className=\"m-r-5\"\n          placeholder=\"Search schema...\"\n          aria-label=\"Search schema\"\n          disabled={schema.length === 0}\n          onChange={event => handleFilterChange(event.target.value)}\n        />\n\n        <Tooltip title=\"Refresh Schema\">\n          <Button onClick={() => refreshSchema(true)}>\n            <i className={cx(\"zmdi zmdi-refresh\", { \"zmdi-hc-spin\": isLoading })} aria-hidden=\"true\" />\n            <span className=\"sr-only\">{isLoading ? \"Loading, please wait.\" : \"Press to refresh.\"}</span>\n          </Button>\n        </Tooltip>\n      </div>\n      <SchemaList\n        loading={isLoading && schema.length === 0}\n        schema={filteredSchema}\n        expandedFlags={expandedFlags}\n        onTableExpand={toggleTable}\n        onItemSelect={onItemSelect}\n      />\n    </div>\n  );\n}\n\nSchemaBrowser.propTypes = {\n  dataSource: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  onSchemaUpdate: PropTypes.func,\n  onItemSelect: PropTypes.func,\n};\n\nSchemaBrowser.defaultProps = {\n  dataSource: null,\n  onSchemaUpdate: () => {},\n  onItemSelect: () => {},\n};\n","import { capitalize, isNil, map, get } from \"lodash\";\nimport AceEditor from \"react-ace\";\nimport ace from \"ace-builds\";\n\nimport \"ace-builds/src-noconflict/ext-language_tools\";\nimport \"ace-builds/src-noconflict/mode-json\";\nimport \"ace-builds/src-noconflict/mode-python\";\nimport \"ace-builds/src-noconflict/mode-sql\";\nimport \"ace-builds/src-noconflict/mode-yaml\";\nimport \"ace-builds/src-noconflict/theme-textmate\";\nimport \"ace-builds/src-noconflict/ext-searchbox\";\n\nconst langTools = ace.acequire(\"ace/ext/language_tools\");\nconst snippetsModule = ace.acequire(\"ace/snippets\");\n\n// By default Ace will try to load snippet files for the different modes and fail.\n// We don't need them, so we use these placeholders until we define our own.\nfunction defineDummySnippets(mode) {\n  ace.define(`ace/snippets/${mode}`, [\"require\", \"exports\", \"module\"], (require, exports) => {\n    exports.snippetText = \"\";\n    exports.scope = mode;\n  });\n}\n\ndefineDummySnippets(\"python\");\ndefineDummySnippets(\"sql\");\ndefineDummySnippets(\"json\");\ndefineDummySnippets(\"yaml\");\n\n// without this line, ace will try to load a non-existent mode-custom.js file\n// for data sources with syntax = \"custom\"\nace.define(\"ace/mode/custom\", [], () => {});\n\nfunction buildTableColumnKeywords(table) {\n  const keywords = [];\n  table.columns.forEach(column => {\n    const columnName = get(column, \"name\");\n    keywords.push({\n      name: `${table.name}.${columnName}`,\n      value: `${table.name}.${columnName}`,\n      score: 100,\n      meta: capitalize(get(column, \"type\", \"Column\")),\n    });\n  });\n  return keywords;\n}\n\nfunction buildKeywordsFromSchema(schema) {\n  const tableKeywords = [];\n  const columnKeywords = {};\n  const tableColumnKeywords = {};\n\n  schema.forEach(table => {\n    tableKeywords.push({\n      name: table.name,\n      value: table.name,\n      score: 100,\n      meta: \"Table\",\n    });\n    tableColumnKeywords[table.name] = buildTableColumnKeywords(table);\n    table.columns.forEach(c => {\n      const columnName = get(c, \"name\", c);\n      columnKeywords[columnName] = capitalize(get(c, \"type\", \"Column\"));\n    });\n  });\n\n  return {\n    table: tableKeywords,\n    column: map(columnKeywords, (v, k) => ({\n      name: k,\n      value: k,\n      score: 50,\n      meta: v,\n    })),\n    tableColumn: tableColumnKeywords,\n  };\n}\n\nconst schemaCompleterKeywords = {};\n\nexport function updateSchemaCompleter(editorKey, schema = null) {\n  schemaCompleterKeywords[editorKey] = isNil(schema) ? null : buildKeywordsFromSchema(schema);\n}\n\nlangTools.setCompleters([\n  langTools.snippetCompleter,\n  langTools.keyWordCompleter,\n  langTools.textCompleter,\n  {\n    identifierRegexps: [/[a-zA-Z_0-9.\\-\\u00A2-\\uFFFF]/],\n    getCompletions: (editor, session, pos, prefix, callback) => {\n      const { table, column, tableColumn } = schemaCompleterKeywords[editor.id] || {\n        table: [],\n        column: [],\n        tableColumn: [],\n      };\n\n      if (prefix.length === 0 || table.length === 0) {\n        callback(null, []);\n        return;\n      }\n\n      if (prefix[prefix.length - 1] === \".\") {\n        const tableName = prefix.substring(0, prefix.length - 1);\n        callback(null, table.concat(tableColumn[tableName]));\n        return;\n      }\n      callback(null, table.concat(column));\n    },\n  },\n]);\n\nexport { AceEditor, langTools, snippetsModule };\n","import { axios } from \"@/services/axios\";\nimport { extend, map } from \"lodash\";\n\nclass QuerySnippet {\n  constructor(querySnippet) {\n    extend(this, querySnippet);\n  }\n\n  getSnippet() {\n    let name = this.trigger;\n    if (this.description !== \"\") {\n      name = `${this.trigger}: ${this.description}`;\n    }\n\n    return {\n      name,\n      content: this.snippet,\n      tabTrigger: this.trigger,\n    };\n  }\n}\n\nconst getQuerySnippet = querySnippet => new QuerySnippet(querySnippet);\n\nconst QuerySnippetService = {\n  get: data => axios.get(`api/query_snippets/${data.id}`).then(getQuerySnippet),\n  query: () => axios.get(\"api/query_snippets\").then(data => map(data, getQuerySnippet)),\n  create: data => axios.post(\"api/query_snippets\", data).then(getQuerySnippet),\n  save: data => axios.post(`api/query_snippets/${data.id}`, data).then(getQuerySnippet),\n  delete: data => axios.delete(`api/query_snippets/${data.id}`),\n};\n\nexport default QuerySnippetService;\n","import React, { useCallback } from \"react\";\nimport Tooltip from \"@/components/Tooltip\";\nimport Button from \"antd/lib/button\";\nimport PropTypes from \"prop-types\";\nimport \"@/redash-font/style.less\";\nimport recordEvent from \"@/services/recordEvent\";\n\nexport default function AutocompleteToggle({ available, enabled, onToggle }) {\n  let tooltipMessage = \"Live Autocomplete Enabled\";\n  let icon = \"icon-flash\";\n  if (!enabled) {\n    tooltipMessage = \"Live Autocomplete Disabled\";\n    icon = \"icon-flash-off\";\n  }\n\n  if (!available) {\n    tooltipMessage = \"Live Autocomplete Not Available (Use Ctrl+Space to Trigger)\";\n    icon = \"icon-flash-off\";\n  }\n\n  const handleClick = useCallback(() => {\n    recordEvent(\"toggle_autocomplete\", \"screen\", \"query_editor\", { state: !enabled });\n    onToggle(!enabled);\n  }, [enabled, onToggle]);\n\n  return (\n    <Tooltip placement=\"top\" title={tooltipMessage}>\n      <Button\n        className=\"query-editor-controls-button m-r-5\"\n        disabled={!available}\n        onClick={handleClick}\n        aria-label={enabled ? \"Disable live autocomplete\" : \"Enable live autocomplete\"}>\n        <i className={\"icon \" + icon} aria-hidden=\"true\" />\n      </Button>\n    </Tooltip>\n  );\n}\n\nAutocompleteToggle.propTypes = {\n  available: PropTypes.bool.isRequired,\n  enabled: PropTypes.bool.isRequired,\n  onToggle: PropTypes.func.isRequired,\n};\n","import React, { useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport recordEvent from \"@/services/recordEvent\";\nimport Checkbox from \"antd/lib/checkbox\";\nimport Tooltip from \"@/components/Tooltip\";\n\nexport default function AutoLimitCheckbox({ available, checked, onChange }) {\n  const handleClick = useCallback(() => {\n    recordEvent(\"checkbox_auto_limit\", \"screen\", \"query_editor\", { state: !checked });\n    onChange(!checked);\n  }, [checked, onChange]);\n\n  let tooltipMessage = null;\n  if (!available) {\n    tooltipMessage = \"Auto limiting is not available for this Data Source type.\";\n  } else {\n    tooltipMessage = \"Auto limit results to first 1000 rows.\";\n  }\n\n  return (\n    <Tooltip placement=\"top\" title={tooltipMessage}>\n      <Checkbox\n        className=\"query-editor-controls-checkbox\"\n        disabled={!available}\n        onClick={handleClick}\n        checked={available && checked}>\n        LIMIT 1000\n      </Checkbox>\n    </Tooltip>\n  );\n}\n\nAutoLimitCheckbox.propTypes = {\n  available: PropTypes.bool,\n  checked: PropTypes.bool.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import { isFunction, map, filter, fromPairs, noop } from \"lodash\";\nimport React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Tooltip from \"@/components/Tooltip\";\nimport Button from \"antd/lib/button\";\nimport Select from \"antd/lib/select\";\nimport KeyboardShortcuts, { humanReadableShortcut } from \"@/services/KeyboardShortcuts\";\n\nimport AutocompleteToggle from \"./AutocompleteToggle\";\nimport \"./QueryEditorControls.less\";\nimport AutoLimitCheckbox from \"@/components/queries/QueryEditor/AutoLimitCheckbox\";\n\nexport function ButtonTooltip({ title, shortcut, ...props }) {\n  shortcut = humanReadableShortcut(shortcut, 1); // show only primary shortcut\n  title =\n    title && shortcut ? (\n      <React.Fragment>\n        {title} (<i>{shortcut}</i>)\n      </React.Fragment>\n    ) : (\n      title || shortcut\n    );\n  return <Tooltip placement=\"top\" title={title} {...props} />;\n}\n\nButtonTooltip.propTypes = {\n  title: PropTypes.node,\n  shortcut: PropTypes.string,\n};\n\nButtonTooltip.defaultProps = {\n  title: null,\n  shortcut: null,\n};\n\nexport default function EditorControl({\n  addParameterButtonProps,\n  formatButtonProps,\n  saveButtonProps,\n  executeButtonProps,\n  autocompleteToggleProps,\n  autoLimitCheckboxProps,\n  dataSourceSelectorProps,\n}) {\n  useEffect(() => {\n    const buttons = filter(\n      [addParameterButtonProps, formatButtonProps, saveButtonProps, executeButtonProps],\n      b => b.shortcut && isFunction(b.onClick)\n    );\n    if (buttons.length > 0) {\n      const shortcuts = fromPairs(map(buttons, b => [b.shortcut, b.disabled ? noop : b.onClick]));\n      KeyboardShortcuts.bind(shortcuts);\n      return () => {\n        KeyboardShortcuts.unbind(shortcuts);\n      };\n    }\n  }, [addParameterButtonProps, formatButtonProps, saveButtonProps, executeButtonProps]);\n\n  return (\n    <div className=\"query-editor-controls\">\n      {addParameterButtonProps !== false && (\n        <ButtonTooltip title={addParameterButtonProps.title} shortcut={addParameterButtonProps.shortcut}>\n          <Button\n            className=\"query-editor-controls-button m-r-5\"\n            disabled={addParameterButtonProps.disabled}\n            onClick={addParameterButtonProps.onClick}>\n            {\"{{\"}&nbsp;{\"}}\"}\n          </Button>\n        </ButtonTooltip>\n      )}\n      {formatButtonProps !== false && (\n        <ButtonTooltip title={formatButtonProps.title} shortcut={formatButtonProps.shortcut}>\n          <Button\n            className=\"query-editor-controls-button m-r-5\"\n            disabled={formatButtonProps.disabled}\n            onClick={formatButtonProps.onClick}>\n            <span className=\"zmdi zmdi-format-indent-increase\" />\n            {formatButtonProps.text}\n          </Button>\n        </ButtonTooltip>\n      )}\n      {autocompleteToggleProps !== false && (\n        <AutocompleteToggle\n          available={autocompleteToggleProps.available}\n          enabled={autocompleteToggleProps.enabled}\n          onToggle={autocompleteToggleProps.onToggle}\n        />\n      )}\n      {autoLimitCheckboxProps !== false && <AutoLimitCheckbox {...autoLimitCheckboxProps} />}\n      {dataSourceSelectorProps === false && <span className=\"query-editor-controls-spacer\" />}\n      {dataSourceSelectorProps !== false && (\n        <Select\n          className=\"w-100 flex-fill datasource-small\"\n          disabled={dataSourceSelectorProps.disabled}\n          value={dataSourceSelectorProps.value}\n          onChange={dataSourceSelectorProps.onChange}>\n          {map(dataSourceSelectorProps.options, option => (\n            <Select.Option key={`option-${option.value}`} value={option.value}>\n              {option.label}\n            </Select.Option>\n          ))}\n        </Select>\n      )}\n      {saveButtonProps !== false && (\n        <ButtonTooltip title={saveButtonProps.title} shortcut={saveButtonProps.shortcut}>\n          <Button\n            className=\"query-editor-controls-button m-l-5\"\n            disabled={saveButtonProps.disabled}\n            loading={saveButtonProps.loading}\n            onClick={saveButtonProps.onClick}\n            data-test=\"SaveButton\">\n            {!saveButtonProps.loading && <span className=\"fa fa-floppy-o\" />}\n            {saveButtonProps.text}\n          </Button>\n        </ButtonTooltip>\n      )}\n      {executeButtonProps !== false && (\n        <ButtonTooltip title={executeButtonProps.title} shortcut={executeButtonProps.shortcut}>\n          <Button\n            className=\"query-editor-controls-button m-l-5\"\n            type=\"primary\"\n            disabled={executeButtonProps.disabled}\n            onClick={executeButtonProps.onClick}\n            data-test=\"ExecuteButton\">\n            <span className=\"zmdi zmdi-play\" />\n            {executeButtonProps.text}\n          </Button>\n        </ButtonTooltip>\n      )}\n    </div>\n  );\n}\n\nconst ButtonPropsPropType = PropTypes.oneOfType([\n  PropTypes.bool, // `false` to hide button\n  PropTypes.shape({\n    title: PropTypes.node,\n    disabled: PropTypes.bool,\n    loading: PropTypes.bool,\n    onClick: PropTypes.func,\n    text: PropTypes.node,\n    shortcut: PropTypes.string,\n  }),\n]);\n\nEditorControl.propTypes = {\n  addParameterButtonProps: ButtonPropsPropType,\n  formatButtonProps: ButtonPropsPropType,\n  saveButtonProps: ButtonPropsPropType,\n  executeButtonProps: ButtonPropsPropType,\n  autocompleteToggleProps: PropTypes.oneOfType([\n    PropTypes.bool, // `false` to hide\n    PropTypes.shape({\n      available: PropTypes.bool,\n      enabled: PropTypes.bool,\n      onToggle: PropTypes.func,\n    }),\n  ]),\n  autoLimitCheckboxProps: PropTypes.oneOfType([\n    PropTypes.bool, // `false` to hide\n    PropTypes.shape(AutoLimitCheckbox.propTypes),\n  ]),\n  dataSourceSelectorProps: PropTypes.oneOfType([\n    PropTypes.bool, // `false` to hide\n    PropTypes.shape({\n      disabled: PropTypes.bool,\n      value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      options: PropTypes.arrayOf(\n        PropTypes.shape({\n          value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n          label: PropTypes.node,\n        })\n      ),\n      onChange: PropTypes.func,\n    }),\n  ]),\n};\n\nEditorControl.defaultProps = {\n  addParameterButtonProps: false,\n  formatButtonProps: false,\n  saveButtonProps: false,\n  executeButtonProps: false,\n  autocompleteToggleProps: false,\n  autoLimitCheckboxProps: false,\n  dataSourceSelectorProps: false,\n};\n","import React, { useEffect, useMemo, useState, useCallback, useImperativeHandle } from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\nimport { AceEditor, snippetsModule, updateSchemaCompleter } from \"./ace\";\nimport { srNotify } from \"@/lib/accessibility\";\nimport { SchemaItemType } from \"@/components/queries/SchemaBrowser\";\nimport resizeObserver from \"@/services/resizeObserver\";\nimport QuerySnippet from \"@/services/query-snippet\";\n\nimport QueryEditorControls from \"./QueryEditorControls\";\nimport \"./index.less\";\n\nconst editorProps = { $blockScrolling: Infinity };\n\nconst QueryEditor = React.forwardRef(function(\n  { className, syntax, value, autocompleteEnabled, schema, onChange, onSelectionChange, ...props },\n  ref\n) {\n  const [container, setContainer] = useState(null);\n  const [editorRef, setEditorRef] = useState(null);\n\n  // For some reason, value for AceEditor should be managed in this way - otherwise it goes berserk when selecting text\n  const [currentValue, setCurrentValue] = useState(value);\n\n  useEffect(() => {\n    setCurrentValue(value);\n  }, [value]);\n\n  const handleChange = useCallback(\n    str => {\n      setCurrentValue(str);\n      onChange(str);\n    },\n    [onChange]\n  );\n\n  const editorOptions = useMemo(\n    () => ({\n      behavioursEnabled: true,\n      enableSnippets: true,\n      enableBasicAutocompletion: true,\n      enableLiveAutocompletion: autocompleteEnabled,\n      autoScrollEditorIntoView: true,\n    }),\n    [autocompleteEnabled]\n  );\n\n  useEffect(() => {\n    if (editorRef) {\n      const editorId = editorRef.editor.id;\n      updateSchemaCompleter(editorId, schema);\n      return () => {\n        updateSchemaCompleter(editorId, null);\n      };\n    }\n  }, [schema, editorRef]);\n\n  useEffect(() => {\n    function resize() {\n      if (editorRef) {\n        editorRef.editor.resize();\n      }\n    }\n\n    if (container) {\n      resize();\n      const unwatch = resizeObserver(container, resize);\n      return unwatch;\n    }\n  }, [container, editorRef]);\n\n  const handleSelectionChange = useCallback(\n    selection => {\n      const rawSelectedQueryText = editorRef.editor.session.doc.getTextRange(selection.getRange());\n      const selectedQueryText = rawSelectedQueryText.length > 1 ? rawSelectedQueryText : null;\n      onSelectionChange(selectedQueryText);\n    },\n    [editorRef, onSelectionChange]\n  );\n\n  const initEditor = useCallback(editor => {\n    // Release Cmd/Ctrl+L to the browser\n    editor.commands.bindKey({ win: \"Ctrl+L\", mac: \"Cmd+L\" }, null);\n\n    // Release Cmd/Ctrl+Shift+F for format query action\n    editor.commands.bindKey({ win: \"Ctrl+Shift+F\", mac: \"Cmd+Shift+F\" }, null);\n\n    // Release Ctrl+P for open new parameter dialog\n    editor.commands.bindKey({ win: \"Ctrl+P\", mac: null }, null);\n    // Lineup only mac\n    editor.commands.bindKey({ win: null, mac: \"Ctrl+P\" }, \"golineup\");\n\n    // Esc for exiting\n    editor.commands.bindKey({ win: \"Esc\", mac: \"Esc\" }, () => {\n      editor.blur();\n    });\n\n    let notificationCleanup = null;\n    editor.on(\"focus\", () => {\n      notificationCleanup = srNotify({\n        text: \"You've entered the SQL editor. To exit press the ESC key.\",\n        politeness: \"assertive\",\n      });\n    });\n\n    editor.on(\"blur\", () => {\n      if (notificationCleanup) {\n        notificationCleanup();\n      }\n    });\n\n    // Reset Completer in case dot is pressed\n    editor.commands.on(\"afterExec\", e => {\n      if (e.command.name === \"insertstring\" && e.args === \".\" && editor.completer) {\n        editor.completer.showPopup(editor);\n      }\n    });\n\n    QuerySnippet.query().then(snippets => {\n      const snippetManager = snippetsModule.snippetManager;\n      const m = {\n        snippetText: \"\",\n      };\n      m.snippets = snippetManager.parseSnippetFile(m.snippetText);\n      snippets.forEach(snippet => {\n        m.snippets.push(snippet.getSnippet());\n      });\n      snippetManager.register(m.snippets || [], m.scope);\n    });\n\n    editor.focus();\n  }, []);\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      paste: text => {\n        if (editorRef) {\n          const { editor } = editorRef;\n          editor.session.doc.replace(editor.selection.getRange(), text);\n          const range = editor.selection.getRange();\n          onChange(editor.session.getValue());\n          editor.selection.setRange(range);\n        }\n      },\n      focus: () => {\n        if (editorRef) {\n          editorRef.editor.focus();\n        }\n      },\n    }),\n    [editorRef, onChange]\n  );\n\n  return (\n    <div className={cx(\"query-editor-container\", className)} {...props} ref={setContainer}>\n      <AceEditor\n        ref={setEditorRef}\n        theme=\"textmate\"\n        mode={syntax || \"sql\"}\n        value={currentValue}\n        editorProps={editorProps}\n        width=\"100%\"\n        height=\"100%\"\n        setOptions={editorOptions}\n        showPrintMargin={false}\n        wrapEnabled={false}\n        onLoad={initEditor}\n        onChange={handleChange}\n        onSelectionChange={handleSelectionChange}\n      />\n    </div>\n  );\n});\n\nQueryEditor.propTypes = {\n  className: PropTypes.string,\n  syntax: PropTypes.string,\n  value: PropTypes.string,\n  autocompleteEnabled: PropTypes.bool,\n  schema: PropTypes.arrayOf(SchemaItemType),\n  onChange: PropTypes.func,\n  onSelectionChange: PropTypes.func,\n};\n\nQueryEditor.defaultProps = {\n  className: null,\n  syntax: null,\n  value: null,\n  autocompleteEnabled: true,\n  schema: [],\n  onChange: () => {},\n  onSelectionChange: () => {},\n};\n\nQueryEditor.Controls = QueryEditorControls;\n\nexport default QueryEditor;\n","import { HTMLAttributes } from \"react\";\n\ninterface SrNotifyProps {\n  text: string;\n  expiry: number;\n  container: HTMLElement;\n  politeness: HTMLAttributes<HTMLDivElement>[\"aria-live\"];\n}\n\nexport function srNotify({ text, expiry = 1000, container = document.body, politeness = \"polite\" }: SrNotifyProps) {\n  const element = document.createElement(\"div\");\n  const id = `speak-${Date.now()}`;\n\n  element.id = id;\n  element.className = \"sr-only\";\n  element.textContent = text;\n\n  element.setAttribute(\"role\", \"alert\");\n  element.setAttribute(\"aria-live\", politeness);\n\n  container.appendChild(element);\n\n  let timer: null | number = null;\n  let isDone = false;\n  const cleanupFn = () => {\n    if (isDone) {\n      return;\n    }\n    isDone = true;\n\n    try {\n      container.removeChild(element);\n    } catch (e) {\n      console.error(e);\n    }\n\n    if (timer) {\n      window.clearTimeout(timer);\n    }\n  };\n\n  timer = window.setTimeout(cleanupFn, expiry);\n\n  return cleanupFn;\n}\n","import { has } from \"lodash\";\nimport { axios } from \"@/services/axios\";\nimport DataSource from \"@/services/data-source\";\nimport { fetchDataFromJob } from \"@/services/query-result\";\n\nfunction fetchDataFromJobOrReturnData(data) {\n  return has(data, \"job.id\") ? fetchDataFromJob(data.job.id, 1000) : data;\n}\n\nfunction rejectErrorResponse(data) {\n  return has(data, \"error\") ? Promise.reject(new Error(data.error.message)) : data;\n}\n\nexport default {\n  ...DataSource,\n  getDatabases: ({ id }, refresh = false) => {\n    const params = {};\n\n    if (refresh) {\n      params.refresh = true;\n    }\n    return axios\n      .get(`api/databricks/databases/${id}`, { params })\n      .then(fetchDataFromJobOrReturnData)\n      .then(rejectErrorResponse);\n  },\n  getDatabaseTables: (data, databaseName, refresh = false) => {\n    const params = {};\n\n    if (refresh) {\n      params.refresh = true;\n    }\n    return axios\n      .get(`api/databricks/databases/${data.id}/${databaseName}/tables`, { params })\n      .then(fetchDataFromJobOrReturnData)\n      .then(rejectErrorResponse);\n  },\n  getTableColumns: (data, databaseName, tableName) =>\n    axios\n      .get(`api/databricks/databases/${data.id}/${databaseName}/columns/${tableName}`)\n      .then(fetchDataFromJobOrReturnData)\n      .then(rejectErrorResponse),\n};\n","import { includes, has, get, map, first, isFunction, isEmpty, startsWith } from \"lodash\";\nimport { useEffect, useState, useMemo, useCallback, useRef } from \"react\";\nimport notification from \"@/services/notification\";\nimport DatabricksDataSource from \"@/services/databricks-data-source\";\n\nfunction getDatabases(dataSource, refresh = false) {\n  if (!dataSource) {\n    return Promise.resolve([]);\n  }\n\n  return DatabricksDataSource.getDatabases(dataSource, refresh).catch(() => {\n    notification.error(\"Failed to load Database list.\", \"Please try again later.\");\n    return Promise.reject();\n  });\n}\n\nfunction getSchema(dataSource, databaseName, refresh = false) {\n  if (!dataSource || !databaseName) {\n    return Promise.resolve([]);\n  }\n\n  return DatabricksDataSource.getDatabaseTables(dataSource, databaseName, refresh).catch(() => {\n    notification.error(`Failed to load tables for ${databaseName}.`, \"Please try again later.\");\n    return Promise.reject();\n  });\n}\n\nfunction addDisplayNameWithoutDatabaseName(schema, databaseName) {\n  if (!databaseName) {\n    return schema;\n  }\n  // add display name without {databaseName} + \".\"\n  return map(schema, table => {\n    const databaseNamePrefix = databaseName + \".\";\n    let displayName = table.name;\n    if (startsWith(table.name, databaseNamePrefix)) {\n      displayName = table.name.slice(databaseNamePrefix.length);\n    }\n    return { ...table, displayName };\n  });\n}\n\nexport default function useDatabricksSchema(dataSource, options = null, onOptionsUpdate = null) {\n  const [databases, setDatabases] = useState([]);\n  const [loadingDatabases, setLoadingDatabases] = useState(true);\n  const [currentDatabaseName, setCurrentDatabaseName] = useState();\n  const [schemas, setSchemas] = useState({});\n  const [loadingSchema, setLoadingSchema] = useState(false);\n  const [refreshing, setRefreshing] = useState(false);\n\n  const setCurrentSchema = useCallback(\n    schema =>\n      setSchemas(currentSchemas => ({\n        ...currentSchemas,\n        [currentDatabaseName]: schema,\n      })),\n    [currentDatabaseName]\n  );\n\n  const currentDatabaseNameRef = useRef();\n  currentDatabaseNameRef.current = currentDatabaseName;\n  const loadTableColumns = useCallback(\n    tableName => {\n      // remove [databaseName.] from the tableName\n      DatabricksDataSource.getTableColumns(\n        dataSource,\n        currentDatabaseName,\n        tableName.substring(currentDatabaseName.length + 1)\n      ).then(columns => {\n        if (currentDatabaseNameRef.current === currentDatabaseName) {\n          setSchemas(currentSchemas => {\n            const schema = get(currentSchemas, currentDatabaseName, []);\n            const updatedSchema = map(schema, table => {\n              if (table.name === tableName) {\n                return { ...table, columns, loading: false };\n              }\n              return table;\n            });\n            return {\n              ...currentSchemas,\n              [currentDatabaseName]: updatedSchema,\n            };\n          });\n        }\n      });\n    },\n    [dataSource, currentDatabaseName]\n  );\n\n  const schema = useMemo(() => {\n    const currentSchema = get(schemas, currentDatabaseName, []);\n    return addDisplayNameWithoutDatabaseName(currentSchema, currentDatabaseName);\n  }, [schemas, currentDatabaseName]);\n\n  const refreshAll = useCallback(() => {\n    if (!refreshing) {\n      setRefreshing(true);\n      const getDatabasesPromise = getDatabases(dataSource, true).then(setDatabases);\n      const getSchemasPromise = getSchema(dataSource, currentDatabaseName, true).then(({ schema }) =>\n        setCurrentSchema(schema)\n      );\n\n      Promise.all([getSchemasPromise.catch(() => {}), getDatabasesPromise.catch(() => {})]).then(() =>\n        setRefreshing(false)\n      );\n    }\n  }, [dataSource, currentDatabaseName, setCurrentSchema, refreshing]);\n\n  const schemasRef = useRef();\n  schemasRef.current = schemas;\n  useEffect(() => {\n    let isCancelled = false;\n    if (currentDatabaseName && !has(schemasRef.current, currentDatabaseName)) {\n      setLoadingSchema(true);\n      getSchema(dataSource, currentDatabaseName)\n        .catch(() => Promise.resolve({ schema: [], has_columns: true }))\n        .then(({ schema, has_columns }) => {\n          if (!isCancelled) {\n            if (!has_columns && !isEmpty(schema)) {\n              schema = map(schema, table => ({ ...table, loading: true }));\n              getSchema(dataSource, currentDatabaseName, true).then(({ schema }) => {\n                if (!isCancelled) {\n                  setCurrentSchema(schema);\n                }\n              });\n            }\n            setCurrentSchema(schema);\n          }\n        })\n        .finally(() => {\n          if (!isCancelled) {\n            setLoadingSchema(false);\n          }\n        });\n    }\n    return () => {\n      isCancelled = true;\n    };\n  }, [dataSource, currentDatabaseName, setCurrentSchema]);\n\n  const defaultDatabaseNameRef = useRef();\n  defaultDatabaseNameRef.current = get(options, \"selectedDatabase\", null);\n  useEffect(() => {\n    let isCancelled = false;\n    setLoadingDatabases(true);\n    setCurrentDatabaseName(undefined);\n    setSchemas({});\n    getDatabases(dataSource)\n      .catch(() => Promise.resolve([]))\n      .then(data => {\n        if (!isCancelled) {\n          setDatabases(data);\n\n          // We set the database using this order:\n          // 1. Currently selected value.\n          // 2. Last used stored in localStorage.\n          // 3. default database.\n          // 4. first database in the list.\n          let lastUsedDatabase =\n            defaultDatabaseNameRef.current || localStorage.getItem(`lastSelectedDatabricksDatabase_${dataSource.id}`);\n\n          if (!lastUsedDatabase) {\n            lastUsedDatabase = includes(data, \"default\") ? \"default\" : first(data) || null;\n          }\n\n          setCurrentDatabaseName(lastUsedDatabase);\n        }\n      })\n      .finally(() => {\n        if (!isCancelled) {\n          setLoadingDatabases(false);\n        }\n      });\n    return () => {\n      isCancelled = true;\n    };\n  }, [dataSource]);\n\n  const setCurrentDatabase = useCallback(\n    databaseName => {\n      if (databaseName) {\n        try {\n          localStorage.setItem(`lastSelectedDatabricksDatabase_${dataSource.id}`, databaseName);\n        } catch (e) {\n          // `localStorage.setItem` may throw exception if there are no enough space - in this case it could be ignored\n        }\n      }\n      setCurrentDatabaseName(databaseName);\n      if (isFunction(onOptionsUpdate) && databaseName !== defaultDatabaseNameRef.current) {\n        onOptionsUpdate({\n          ...options,\n          selectedDatabase: databaseName,\n        });\n      }\n    },\n    [dataSource.id, options, onOptionsUpdate]\n  );\n\n  return {\n    databases,\n    loadingDatabases,\n    schema,\n    loadingSchema,\n    currentDatabaseName,\n    setCurrentDatabase,\n    loadTableColumns,\n    refreshAll,\n    refreshing,\n  };\n}\n","import React, { useState, useMemo, useEffect, useCallback } from \"react\";\nimport { filter, includes, get, find } from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport { useDebouncedCallback } from \"use-debounce\";\nimport Button from \"antd/lib/button\";\nimport SyncOutlinedIcon from \"@ant-design/icons/SyncOutlined\";\nimport Input from \"antd/lib/input\";\nimport Select from \"antd/lib/select\";\nimport Tooltip from \"@/components/Tooltip\";\nimport { SchemaList, applyFilterOnSchema } from \"@/components/queries/SchemaBrowser\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\nimport useDatabricksSchema from \"./useDatabricksSchema\";\n\nimport \"./DatabricksSchemaBrowser.less\";\n\nexport default function DatabricksSchemaBrowser({\n  dataSource,\n  options,\n  onOptionsUpdate,\n  onSchemaUpdate,\n  onItemSelect,\n  ...props\n}) {\n  const {\n    databases,\n    loadingDatabases,\n    schema,\n    loadingSchema,\n    loadTableColumns,\n    currentDatabaseName,\n    setCurrentDatabase,\n    refreshAll,\n    refreshing,\n  } = useDatabricksSchema(dataSource, options, onOptionsUpdate);\n  const [filterString, setFilterString] = useState(\"\");\n  const [databaseFilterString, setDatabaseFilterString] = useState(\"\");\n  const filteredSchema = useMemo(() => applyFilterOnSchema(schema, filterString), [schema, filterString]);\n  const [isDatabaseSelectOpen, setIsDatabaseSelectOpen] = useState(false);\n  const [expandedFlags, setExpandedFlags] = useState({});\n  const [handleFilterChange] = useDebouncedCallback(setFilterString, 500);\n  const [handleDatabaseFilterChange, cancelHandleDatabaseFilterChange] = useDebouncedCallback(\n    setDatabaseFilterString,\n    500\n  );\n\n  const handleDatabaseSelection = useCallback(\n    databaseName => {\n      setCurrentDatabase(databaseName);\n      cancelHandleDatabaseFilterChange();\n      setDatabaseFilterString(\"\");\n    },\n    [cancelHandleDatabaseFilterChange, setCurrentDatabase]\n  );\n\n  const filteredDatabases = useMemo(\n    () => filter(databases, database => includes(database.toLowerCase(), databaseFilterString.toLowerCase())),\n    [databases, databaseFilterString]\n  );\n\n  const handleSchemaUpdate = useImmutableCallback(onSchemaUpdate);\n\n  useEffect(() => {\n    handleSchemaUpdate(schema);\n  }, [schema, handleSchemaUpdate]);\n\n  useEffect(() => {\n    setExpandedFlags({});\n  }, [currentDatabaseName]);\n\n  function toggleTable(tableName) {\n    const table = find(schema, { name: tableName });\n    if (!expandedFlags[tableName] && get(table, \"loading\", false)) {\n      loadTableColumns(tableName);\n    }\n    setExpandedFlags({\n      ...expandedFlags,\n      [tableName]: !expandedFlags[tableName],\n    });\n  }\n\n  return (\n    <div className=\"databricks-schema-browser schema-container\" {...props}>\n      <div className=\"schema-control\">\n        <Input\n          className={isDatabaseSelectOpen ? \"database-select-open\" : \"\"}\n          placeholder=\"Filter tables & columns...\"\n          aria-label=\"Search schema\"\n          disabled={loadingDatabases || loadingSchema}\n          onChange={event => handleFilterChange(event.target.value)}\n          addonBefore={\n            <Select\n              dropdownClassName=\"databricks-schema-browser-db-dropdown\"\n              loading={loadingDatabases}\n              disabled={loadingDatabases}\n              onChange={handleDatabaseSelection}\n              value={currentDatabaseName}\n              showSearch\n              onSearch={handleDatabaseFilterChange}\n              onDropdownVisibleChange={setIsDatabaseSelectOpen}\n              placeholder={\n                <>\n                  <i className=\"fa fa-database m-r-5\" aria-hidden=\"true\" /> Database\n                </>\n              }>\n              {filteredDatabases.map(database => (\n                <Select.Option key={database}>\n                  <i className=\"fa fa-database m-r-5\" aria-hidden=\"true\" />\n                  {database}\n                </Select.Option>\n              ))}\n            </Select>\n          }\n        />\n      </div>\n      <div className=\"schema-list-wrapper\">\n        <SchemaList\n          loading={loadingDatabases || loadingSchema}\n          schema={filteredSchema}\n          expandedFlags={expandedFlags}\n          onTableExpand={toggleTable}\n          onItemSelect={onItemSelect}\n        />\n        {!(loadingSchema || loadingDatabases) && (\n          <div className=\"load-button\">\n            <Tooltip title={!refreshing ? \"Refresh Databases and Current Schema\" : null}>\n              <Button type=\"link\" onClick={refreshAll} disabled={refreshing}>\n                <SyncOutlinedIcon spin={refreshing} />\n              </Button>\n            </Tooltip>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nDatabricksSchemaBrowser.propTypes = {\n  dataSource: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  options: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  onOptionsUpdate: PropTypes.func,\n  onSchemaUpdate: PropTypes.func,\n  onItemSelect: PropTypes.func,\n};\n\nDatabricksSchemaBrowser.defaultProps = {\n  dataSource: null,\n  options: null,\n  onOptionsUpdate: () => {},\n  onSchemaUpdate: () => {},\n  onItemSelect: () => {},\n};\n","import { isArray, isNil, each } from \"lodash\";\n\nconst componentsRegistry = new Map();\n\nexport const QueryEditorComponents = {\n  SCHEMA_BROWSER: \"SchemaBrowser\",\n  QUERY_EDITOR: \"QueryEditor\",\n};\n\nexport function registerEditorComponent(componentName, component, dataSourceTypes) {\n  if (isNil(dataSourceTypes)) {\n    dataSourceTypes = [null]; // use `null` entry for the default set of components\n  }\n\n  if (!isArray(dataSourceTypes)) {\n    dataSourceTypes = [dataSourceTypes];\n  }\n\n  each(dataSourceTypes, dataSourceType => {\n    componentsRegistry.set(dataSourceType, { ...componentsRegistry.get(dataSourceType), [componentName]: component });\n  });\n}\n\nexport function getEditorComponents(dataSourceType) {\n  return { ...componentsRegistry.get(null), ...componentsRegistry.get(dataSourceType) };\n}\n","import { useState, useEffect, useMemo } from \"react\";\nimport { first, orderBy, find } from \"lodash\";\nimport location from \"@/services/location\";\n\nexport default function useVisualizationTabHandler(visualizations) {\n  const firstVisualization = useMemo(() => first(orderBy(visualizations, [\"id\"])) || {}, [visualizations]);\n  const [selectedTab, setSelectedTab] = useState(+location.hash || firstVisualization.id);\n\n  useEffect(() => {\n    const hashValue = selectedTab !== firstVisualization.id ? `${selectedTab}` : null;\n    if (location.hash !== hashValue) {\n      location.setHash(hashValue);\n    }\n\n    const unlisten = location.listen(() => {\n      if (location.hash !== hashValue) {\n        setSelectedTab(+location.hash || firstVisualization.id);\n      }\n    });\n    return unlisten;\n  }, [firstVisualization.id, selectedTab]);\n\n  // make sure selectedTab is in visualizations\n  useEffect(() => {\n    if (!find(visualizations, { id: selectedTab })) {\n      setSelectedTab(firstVisualization.id);\n    }\n  }, [firstVisualization.id, selectedTab, visualizations]);\n\n  return useMemo(() => [selectedTab, setSelectedTab], [selectedTab]);\n}\n","import { useCallback, useMemo, useState } from \"react\";\nimport { reduce } from \"lodash\";\nimport localOptions from \"@/lib/localOptions\";\n\nfunction calculateTokensCount(schema) {\n  return reduce(schema, (totalLength, table) => totalLength + table.columns.length, 0);\n}\n\nexport default function useAutocompleteFlags(schema) {\n  const isAvailable = useMemo(() => calculateTokensCount(schema) <= 5000, [schema]);\n  const [isEnabled, setIsEnabled] = useState(localOptions.get(\"liveAutocomplete\", true));\n\n  const toggleAutocomplete = useCallback(state => {\n    setIsEnabled(state);\n    localOptions.set(\"liveAutocomplete\", state);\n  }, []);\n\n  return useMemo(() => [isAvailable, isEnabled, toggleAutocomplete], [isAvailable, isEnabled, toggleAutocomplete]);\n}\n","import { useCallback, useState } from \"react\";\nimport localOptions from \"@/lib/localOptions\";\nimport { get, extend } from \"lodash\";\n\nfunction isAutoLimitAvailable(dataSource) {\n  return get(dataSource, \"supports_auto_limit\", false);\n}\n\nexport default function useAutoLimitFlags(dataSource, query, setQuery) {\n  const isAvailable = isAutoLimitAvailable(dataSource);\n  const [isChecked, setIsChecked] = useState(query.options.apply_auto_limit);\n  query.options.apply_auto_limit = isChecked;\n\n  const setAutoLimit = useCallback(\n    state => {\n      setIsChecked(state);\n      localOptions.set(\"applyAutoLimit\", state);\n      setQuery(extend(query.clone(), { options: { ...query.options, apply_auto_limit: state } }));\n    },\n    [query, setQuery]\n  );\n\n  return [isAvailable, isChecked, setAutoLimit];\n}\n","import SchemaBrowser from \"@/components/queries/SchemaBrowser\";\nimport QueryEditor from \"@/components/queries/QueryEditor\";\nimport DatabricksSchemaBrowser from \"./databricks/DatabricksSchemaBrowser\";\n\nimport { registerEditorComponent, getEditorComponents, QueryEditorComponents } from \"./editorComponents\";\n\n// default\nregisterEditorComponent(QueryEditorComponents.SCHEMA_BROWSER, SchemaBrowser);\nregisterEditorComponent(QueryEditorComponents.QUERY_EDITOR, QueryEditor);\n\n// databricks\nregisterEditorComponent(QueryEditorComponents.SCHEMA_BROWSER, DatabricksSchemaBrowser, [\n  \"databricks\",\n  \"databricks_internal\",\n]);\n\nexport { getEditorComponents };\n","import { find } from \"lodash\";\nimport debug from \"debug\";\nimport recordEvent from \"@/services/recordEvent\";\nimport redashIconUrl from \"@/assets/images/redash_icon_small.png\";\n\nconst logger = debug(\"redash:notifications\");\n\nconst Notification = window.Notification || null;\nif (!Notification) {\n  logger(\"HTML5 notifications are not supported.\");\n}\n\nconst hidden = find([\"hidden\", \"webkitHidden\", \"mozHidden\", \"msHidden\"], prop => prop in document);\n\nfunction isPageVisible() {\n  return !document[hidden];\n}\n\nfunction getPermissions() {\n  if (Notification && Notification.permission === \"default\") {\n    Notification.requestPermission();\n  }\n}\n\nfunction showNotification(title, content) {\n  if (!Notification || isPageVisible() || Notification.permission !== \"granted\") {\n    return;\n  }\n\n  // using the 'tag' to avoid showing duplicate notifications\n  const notification = new Notification(title, {\n    tag: title + content,\n    body: content,\n    icon: redashIconUrl,\n  });\n  notification.onclick = function onClick() {\n    window.focus();\n    this.close();\n    recordEvent(\"click\", \"notification\");\n  };\n}\n\nexport default {\n  getPermissions,\n  showNotification,\n};\n","import { useReducer, useEffect, useRef } from \"react\";\nimport location from \"@/services/location\";\nimport recordEvent from \"@/services/recordEvent\";\nimport { ExecutionStatus } from \"@/services/query-result\";\nimport notifications from \"@/services/notifications\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\n\nfunction getMaxAge() {\n  const { maxAge } = location.search;\n  return maxAge !== undefined ? maxAge : -1;\n}\n\nconst reducer = (prevState, updatedProperty) => ({\n  ...prevState,\n  ...updatedProperty,\n});\n\n// This is currently specific to a Query page, we can refactor\n// it slightly to make it suitable for dashboard widgets instead of the other solution it\n// has in there.\nexport default function useQueryExecute(query) {\n  const [executionState, setExecutionState] = useReducer(reducer, {\n    queryResult: null,\n    isExecuting: false,\n    loadedInitialResults: false,\n    executionStatus: null,\n    isCancelling: false,\n    cancelCallback: null,\n    error: null,\n  });\n\n  const queryResultInExecution = useRef(null);\n  // Clear executing queryResult when component is unmounted to avoid errors\n  useEffect(() => {\n    return () => {\n      queryResultInExecution.current = null;\n    };\n  }, []);\n\n  const executeQuery = useImmutableCallback((maxAge = 0, queryExecutor) => {\n    let newQueryResult;\n    if (queryExecutor) {\n      newQueryResult = queryExecutor();\n    } else {\n      newQueryResult = query.getQueryResult(maxAge);\n    }\n\n    recordEvent(\"execute\", \"query\", query.id);\n    notifications.getPermissions();\n\n    queryResultInExecution.current = newQueryResult;\n\n    setExecutionState({\n      updatedAt: newQueryResult.getUpdatedAt(),\n      executionStatus: newQueryResult.getStatus(),\n      isExecuting: true,\n      cancelCallback: () => {\n        recordEvent(\"cancel_execute\", \"query\", query.id);\n        setExecutionState({ isCancelling: true });\n        newQueryResult.cancelExecution();\n      },\n    });\n\n    const onStatusChange = status => {\n      if (queryResultInExecution.current === newQueryResult) {\n        setExecutionState({ updatedAt: newQueryResult.getUpdatedAt(), executionStatus: status });\n      }\n    };\n\n    newQueryResult\n      .toPromise(onStatusChange)\n      .then(queryResult => {\n        if (queryResultInExecution.current === newQueryResult) {\n          // TODO: this should probably belong in the QueryEditor page.\n          if (queryResult && queryResult.query_result.query === query.query) {\n            query.latest_query_data_id = queryResult.getId();\n            query.queryResult = queryResult;\n          }\n\n          if (executionState.loadedInitialResults) {\n            notifications.showNotification(\"Redash\", `${query.name} updated.`);\n          }\n\n          setExecutionState({\n            queryResult,\n            loadedInitialResults: true,\n            error: null,\n            isExecuting: false,\n            isCancelling: false,\n            executionStatus: null,\n          });\n        }\n      })\n      .catch(queryResult => {\n        if (queryResultInExecution.current === newQueryResult) {\n          if (executionState.loadedInitialResults) {\n            notifications.showNotification(\"Redash\", `${query.name} failed to run: ${queryResult.getError()}`);\n          }\n\n          setExecutionState({\n            queryResult,\n            loadedInitialResults: true,\n            error: queryResult.getError(),\n            isExecuting: false,\n            isCancelling: false,\n            executionStatus: ExecutionStatus.FAILED,\n          });\n        }\n      });\n  });\n\n  const queryRef = useRef(query);\n  queryRef.current = query;\n\n  useEffect(() => {\n    // TODO: this belongs on the query page?\n    // loadedInitialResults can be removed if so\n    if (queryRef.current.hasResult() || queryRef.current.paramsRequired()) {\n      executeQuery(getMaxAge());\n    } else {\n      setExecutionState({ loadedInitialResults: true });\n    }\n  }, [executeQuery]);\n\n  return { ...executionState, ...{ executeQuery } };\n}\n","import { isUndefined } from \"lodash\";\nimport { useEffect, useMemo, useState, useCallback } from \"react\";\n\nexport default function useQueryParameters(query) {\n  const parameters = useMemo(() => query.getParametersDefs(), [query]);\n  const [dirtyFlag, setDirtyFlag] = useState(query.getParameters().hasPendingValues());\n\n  const updateDirtyFlag = useCallback(\n    flag => {\n      flag = isUndefined(flag) ? query.getParameters().hasPendingValues() : flag;\n      setDirtyFlag(flag);\n    },\n    [query]\n  );\n\n  useEffect(() => {\n    const updatedDirtyParameters = query.getParameters().hasPendingValues();\n    if (updatedDirtyParameters !== dirtyFlag) {\n      setDirtyFlag(updatedDirtyParameters);\n    }\n  }, [query, parameters, dirtyFlag]);\n\n  return useMemo(() => [parameters, dirtyFlag, updateDirtyFlag], [parameters, dirtyFlag, updateDirtyFlag]);\n}\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Modal from \"antd/lib/modal\";\nimport DatePicker from \"antd/lib/date-picker\";\nimport TimePicker from \"antd/lib/time-picker\";\nimport Select from \"antd/lib/select\";\nimport Radio from \"antd/lib/radio\";\nimport { capitalize, clone, isEqual, omitBy, isNil, isEmpty } from \"lodash\";\nimport moment from \"moment\";\nimport { secondsToInterval, durationHumanize, pluralize, IntervalEnum, localizeTime } from \"@/lib/utils\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport { RefreshScheduleType, RefreshScheduleDefault, Moment } from \"../proptypes\";\n\nimport \"./ScheduleDialog.css\";\n\nconst WEEKDAYS_SHORT = moment.weekdaysShort();\nconst WEEKDAYS_FULL = moment.weekdays();\nconst DATE_FORMAT = \"YYYY-MM-DD\";\nconst HOUR_FORMAT = \"HH:mm\";\nconst { Option, OptGroup } = Select;\n\nexport function TimeEditor(props) {\n  const [time, setTime] = useState(props.defaultValue);\n  const showUtc = time && !time.isUTC();\n\n  function onChange(newTime) {\n    setTime(newTime);\n    props.onChange(newTime);\n  }\n\n  return (\n    <React.Fragment>\n      <TimePicker allowClear={false} value={time} format={HOUR_FORMAT} minuteStep={5} onChange={onChange} />\n      {showUtc && (\n        <span className=\"utc\" data-testid=\"utc\">\n          ({moment.utc(time).format(HOUR_FORMAT)} UTC)\n        </span>\n      )}\n    </React.Fragment>\n  );\n}\n\nTimeEditor.propTypes = {\n  defaultValue: Moment,\n  onChange: PropTypes.func.isRequired,\n};\n\nTimeEditor.defaultProps = {\n  defaultValue: null,\n};\n\nclass ScheduleDialog extends React.Component {\n  static propTypes = {\n    schedule: RefreshScheduleType,\n    refreshOptions: PropTypes.arrayOf(PropTypes.number).isRequired,\n    dialog: DialogPropType.isRequired,\n  };\n\n  static defaultProps = {\n    schedule: RefreshScheduleDefault,\n  };\n\n  state = this.getState();\n\n  getState() {\n    const newSchedule = clone(this.props.schedule || ScheduleDialog.defaultProps.schedule);\n    const { time, interval: seconds, day_of_week: day } = newSchedule;\n    const { interval } = secondsToInterval(seconds);\n    const [hour, minute] = time ? localizeTime(time).split(\":\") : [null, null];\n\n    return {\n      hour,\n      minute,\n      seconds,\n      interval,\n      dayOfWeek: day ? WEEKDAYS_SHORT[WEEKDAYS_FULL.indexOf(day)] : null,\n      newSchedule,\n    };\n  }\n\n  get intervals() {\n    const ret = {\n      [IntervalEnum.NEVER]: [],\n    };\n    this.props.refreshOptions.forEach(seconds => {\n      const { count, interval } = secondsToInterval(seconds);\n      if (!(interval in ret)) {\n        ret[interval] = [];\n      }\n      ret[interval].push([count, seconds]);\n    });\n\n    Object.defineProperty(this, \"intervals\", { value: ret }); // memoize\n\n    return ret;\n  }\n\n  set newSchedule(newProps) {\n    this.setState(prevState => ({\n      newSchedule: Object.assign(prevState.newSchedule, newProps),\n    }));\n  }\n\n  setTime = time => {\n    this.newSchedule = {\n      time: moment(time)\n        .utc()\n        .format(HOUR_FORMAT),\n    };\n  };\n\n  setInterval = newSeconds => {\n    const { newSchedule } = this.state;\n    const { interval: newInterval } = secondsToInterval(newSeconds);\n\n    // resets to defaults\n    if (newInterval === IntervalEnum.NEVER) {\n      newSchedule.until = null;\n    }\n    if ([IntervalEnum.NEVER, IntervalEnum.MINUTES, IntervalEnum.HOURS].indexOf(newInterval) !== -1) {\n      newSchedule.time = null;\n    }\n    if (newInterval !== IntervalEnum.WEEKS) {\n      newSchedule.day_of_week = null;\n    }\n    if (\n      (newInterval === IntervalEnum.DAYS || newInterval === IntervalEnum.WEEKS) &&\n      (!this.state.minute || !this.state.hour)\n    ) {\n      newSchedule.time = moment()\n        .hour(\"00\")\n        .minute(\"15\")\n        .utc()\n        .format(HOUR_FORMAT);\n    }\n    if (newInterval === IntervalEnum.WEEKS && !this.state.dayOfWeek) {\n      newSchedule.day_of_week = WEEKDAYS_FULL[0];\n    }\n\n    newSchedule.interval = newSeconds;\n\n    const [hour, minute] = newSchedule.time ? localizeTime(newSchedule.time).split(\":\") : [null, null];\n\n    this.setState({\n      interval: newInterval,\n      seconds: newSeconds,\n      hour,\n      minute,\n      dayOfWeek: newSchedule.day_of_week ? WEEKDAYS_SHORT[WEEKDAYS_FULL.indexOf(newSchedule.day_of_week)] : null,\n    });\n\n    this.newSchedule = newSchedule;\n  };\n\n  setScheduleUntil = (_, date) => {\n    this.newSchedule = { until: date };\n  };\n\n  setWeekday = e => {\n    const dayOfWeek = e.target.value;\n    this.setState({ dayOfWeek });\n    this.newSchedule = {\n      day_of_week: dayOfWeek ? WEEKDAYS_FULL[WEEKDAYS_SHORT.indexOf(dayOfWeek)] : null,\n    };\n  };\n\n  setUntilToggle = e => {\n    const date = e.target.value ? moment().format(DATE_FORMAT) : null;\n    this.setScheduleUntil(null, date);\n  };\n\n  save() {\n    const { newSchedule } = this.state;\n    const hasChanged = () => {\n      const newCompact = omitBy(newSchedule, isNil);\n      const oldCompact = omitBy(this.props.schedule, isNil);\n      return !isEqual(newCompact, oldCompact);\n    };\n\n    // save if changed\n    if (hasChanged()) {\n      if (newSchedule.interval) {\n        this.props.dialog.close(clone(newSchedule));\n      } else {\n        this.props.dialog.close(null);\n      }\n    }\n    this.props.dialog.dismiss();\n  }\n\n  render() {\n    const { dialog } = this.props;\n    const {\n      interval,\n      minute,\n      hour,\n      seconds,\n      newSchedule: { until },\n    } = this.state;\n\n    return (\n      <Modal {...dialog.props} title=\"Refresh Schedule\" className=\"schedule\" onOk={() => this.save()}>\n        <div className=\"schedule-component\">\n          <h5>Refresh every</h5>\n          <div data-testid=\"interval\">\n            <Select className=\"input\" value={seconds} onChange={this.setInterval} dropdownMatchSelectWidth={false}>\n              <Option value={null} key=\"never\">\n                Never\n              </Option>\n              {Object.keys(this.intervals)\n                .filter(int => !isEmpty(this.intervals[int]))\n                .map(int => (\n                  <OptGroup label={capitalize(pluralize(int))} key={int}>\n                    {this.intervals[int].map(([cnt, secs]) => (\n                      <Option value={secs} key={`${int}-${cnt}`}>\n                        {durationHumanize(secs)}\n                      </Option>\n                    ))}\n                  </OptGroup>\n                ))}\n            </Select>\n          </div>\n        </div>\n        {[IntervalEnum.DAYS, IntervalEnum.WEEKS].indexOf(interval) !== -1 ? (\n          <div className=\"schedule-component\">\n            <h5>On time</h5>\n            <div data-testid=\"time\">\n              <TimeEditor\n                defaultValue={\n                  hour\n                    ? moment()\n                        .hour(hour)\n                        .minute(minute)\n                    : null\n                }\n                onChange={this.setTime}\n              />\n            </div>\n          </div>\n        ) : null}\n        {IntervalEnum.WEEKS === interval ? (\n          <div className=\"schedule-component\">\n            <h5>On day</h5>\n            <div data-testid=\"weekday\">\n              <Radio.Group size=\"medium\" defaultValue={this.state.dayOfWeek} onChange={this.setWeekday}>\n                {WEEKDAYS_SHORT.map(day => (\n                  <Radio.Button value={day} key={day} className=\"input\">\n                    {day[0]}\n                  </Radio.Button>\n                ))}\n              </Radio.Group>\n            </div>\n          </div>\n        ) : null}\n        {interval !== IntervalEnum.NEVER ? (\n          <div className=\"schedule-component\">\n            <h5>Ends</h5>\n            <div className=\"ends\" data-testid=\"ends\">\n              <Radio.Group size=\"medium\" value={!!until} onChange={this.setUntilToggle}>\n                <Radio value={false}>Never</Radio>\n                <Radio value>On</Radio>\n              </Radio.Group>\n              {until ? (\n                <DatePicker\n                  size=\"small\"\n                  className=\"datepicker\"\n                  value={moment(until)}\n                  allowClear={false}\n                  format={DATE_FORMAT}\n                  onChange={this.setScheduleUntil}\n                />\n              ) : null}\n            </div>\n          </div>\n        ) : null}\n      </Modal>\n    );\n  }\n}\n\nexport default wrapDialog(ScheduleDialog);\n","import { isArray, intersection } from \"lodash\";\nimport { useCallback } from \"react\";\nimport ScheduleDialog from \"@/components/queries/ScheduleDialog\";\nimport { clientConfig } from \"@/services/auth\";\nimport { policy } from \"@/services/policy\";\nimport useUpdateQuery from \"./useUpdateQuery\";\nimport useQueryFlags from \"./useQueryFlags\";\nimport recordEvent from \"@/services/recordEvent\";\n\nexport default function useEditScheduleDialog(query, onChange) {\n  // We won't use flags that depend on data source\n  const queryFlags = useQueryFlags(query);\n\n  const updateQuery = useUpdateQuery(query, onChange);\n\n  return useCallback(() => {\n    if (!queryFlags.canEdit || !queryFlags.canSchedule) {\n      return;\n    }\n\n    const intervals = clientConfig.queryRefreshIntervals;\n    const allowedIntervals = policy.getQueryRefreshIntervals();\n    const refreshOptions = isArray(allowedIntervals) ? intersection(intervals, allowedIntervals) : intervals;\n\n    ScheduleDialog.showModal({\n      schedule: query.schedule,\n      refreshOptions,\n    }).onClose(schedule => {\n      recordEvent(\"edit_schedule\", \"query\", query.id);\n      updateQuery({ schedule });\n    });\n  }, [query.id, query.schedule, queryFlags.canEdit, queryFlags.canSchedule, updateQuery]);\n}\n","import { axios } from \"@/services/axios\";\n\nconst saveOrCreateUrl = data => (data.id ? `api/visualizations/${data.id}` : \"api/visualizations\");\n\nconst Visualization = {\n  save: data => axios.post(saveOrCreateUrl(data), data),\n  delete: data => axios.delete(`api/visualizations/${data.id}`),\n};\n\nexport default Visualization;\n","import { isEqual, extend, map, sortBy, findIndex, filter, pick, omit } from \"lodash\";\nimport React, { useState, useMemo, useRef, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Modal from \"antd/lib/modal\";\nimport Select from \"antd/lib/select\";\nimport Input from \"antd/lib/input\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport Filters, { filterData } from \"@/components/Filters\";\nimport notification from \"@/services/notification\";\nimport Visualization from \"@/services/visualization\";\nimport recordEvent from \"@/services/recordEvent\";\nimport useQueryResultData from \"@/lib/useQueryResultData\";\nimport { useUniqueId } from \"@/lib/hooks/useUniqueId\";\nimport {\n  registeredVisualizations,\n  getDefaultVisualization,\n  newVisualization,\n  VisualizationType,\n} from \"@redash/viz/lib\";\nimport { Renderer, Editor } from \"@/components/visualizations/visualizationComponents\";\n\nimport \"./EditVisualizationDialog.less\";\n\nfunction updateQueryVisualizations(query, visualization) {\n  const index = findIndex(query.visualizations, v => v.id === visualization.id);\n  if (index > -1) {\n    query.visualizations[index] = visualization;\n  } else {\n    // new visualization\n    query.visualizations.push(visualization);\n  }\n  query.visualizations = [...query.visualizations]; // clone array\n}\n\nfunction saveVisualization(visualization) {\n  if (visualization.id) {\n    recordEvent(\"update\", \"visualization\", visualization.id, { type: visualization.type });\n  } else {\n    recordEvent(\"create\", \"visualization\", null, { type: visualization.type });\n  }\n\n  return Visualization.save(visualization)\n    .then(result => {\n      notification.success(\"Visualization saved\");\n      return result;\n    })\n    .catch(error => {\n      notification.error(\"Visualization could not be saved\");\n      return Promise.reject(error);\n    });\n}\n\nfunction confirmDialogClose(isDirty) {\n  return new Promise((resolve, reject) => {\n    if (isDirty) {\n      Modal.confirm({\n        title: \"Visualization Editor\",\n        content: \"Are you sure you want to close the editor without saving?\",\n        okText: \"Yes\",\n        cancelText: \"No\",\n        onOk: () => resolve(),\n        onCancel: () => reject(),\n      });\n    } else {\n      resolve();\n    }\n  });\n}\n\nfunction EditVisualizationDialog({ dialog, visualization, query, queryResult }) {\n  const errorHandlerRef = useRef();\n\n  const isNew = !visualization;\n\n  const data = useQueryResultData(queryResult);\n  const [filters, setFilters] = useState(data.filters);\n\n  const filteredData = useMemo(\n    () => ({\n      columns: data.columns,\n      rows: filterData(data.rows, filters),\n    }),\n    [data, filters]\n  );\n\n  const defaultState = useMemo(() => {\n    const config = visualization ? registeredVisualizations[visualization.type] : getDefaultVisualization();\n    const options = config.getOptions(isNew ? {} : visualization.options, data);\n    return {\n      type: config.type,\n      name: isNew ? config.name : visualization.name,\n      options,\n      originalOptions: options,\n    };\n  }, [data, isNew, visualization]);\n\n  const [type, setType] = useState(defaultState.type);\n  const [name, setName] = useState(defaultState.name);\n  const [nameChanged, setNameChanged] = useState(false);\n  const [options, setOptions] = useState(defaultState.options);\n\n  const [saveInProgress, setSaveInProgress] = useState(false);\n\n  useEffect(() => {\n    if (errorHandlerRef.current) {\n      errorHandlerRef.current.reset();\n    }\n  }, [data, options]);\n\n  function onTypeChanged(newType) {\n    setType(newType);\n\n    const config = registeredVisualizations[newType];\n    if (!nameChanged) {\n      setName(config.name);\n    }\n\n    setOptions(config.getOptions(isNew ? {} : visualization.options, data));\n  }\n\n  function onNameChanged(newName) {\n    setName(newName);\n    setNameChanged(newName !== name);\n  }\n\n  function onOptionsChanged(newOptions) {\n    const config = registeredVisualizations[type];\n    setOptions(config.getOptions(newOptions, data));\n  }\n\n  function save() {\n    setSaveInProgress(true);\n    let visualizationOptions = options;\n    if (type === \"TABLE\") {\n      visualizationOptions = omit(visualizationOptions, [\"paginationSize\"]);\n    }\n\n    const visualizationData = extend(newVisualization(type), visualization, {\n      name,\n      options: visualizationOptions,\n      query_id: query.id,\n    });\n    saveVisualization(visualizationData).then(savedVisualization => {\n      updateQueryVisualizations(query, savedVisualization);\n      dialog.close(savedVisualization);\n    });\n  }\n\n  function dismiss() {\n    const optionsChanged = !isEqual(options, defaultState.originalOptions);\n    confirmDialogClose(nameChanged || optionsChanged)\n      .then(dialog.dismiss)\n      .catch(() => {});\n  }\n\n  // When editing existing visualization chart type selector is disabled, so add only existing visualization's\n  // descriptor there (to properly render the component). For new visualizations show all types except of deprecated\n  const availableVisualizations = isNew\n    ? filter(sortBy(registeredVisualizations, [\"name\"]), vis => !vis.isDeprecated)\n    : pick(registeredVisualizations, [type]);\n\n  const vizTypeId = useUniqueId(\"visualization-type\");\n  const vizNameId = useUniqueId(\"visualization-name\");\n\n  return (\n    <Modal\n      {...dialog.props}\n      wrapClassName=\"ant-modal-fullscreen\"\n      title=\"Visualization Editor\"\n      okText=\"Save\"\n      okButtonProps={{\n        loading: saveInProgress,\n        disabled: saveInProgress,\n      }}\n      onOk={save}\n      onCancel={dismiss}\n      wrapProps={{ \"data-test\": \"EditVisualizationDialog\" }}>\n      <div className=\"edit-visualization-dialog\">\n        <div className=\"visualization-settings\">\n          <div className=\"m-b-15\">\n            <label htmlFor={vizTypeId}>Visualization Type</label>\n            <Select\n              data-test=\"VisualizationType\"\n              id={vizTypeId}\n              className=\"w-100\"\n              disabled={!isNew}\n              value={type}\n              onChange={onTypeChanged}>\n              {map(availableVisualizations, vis => (\n                <Select.Option key={vis.type} data-test={\"VisualizationType.\" + vis.type}>\n                  {vis.name}\n                </Select.Option>\n              ))}\n            </Select>\n          </div>\n          <div className=\"m-b-15\">\n            <label htmlFor={vizNameId}>Visualization Name</label>\n            <Input\n              data-test=\"VisualizationName\"\n              id={vizNameId}\n              className=\"w-100\"\n              value={name}\n              onChange={event => onNameChanged(event.target.value)}\n            />\n          </div>\n          <div data-test=\"VisualizationEditor\">\n            <Editor\n              type={type}\n              data={data}\n              options={options}\n              visualizationName={name}\n              onOptionsChange={onOptionsChanged}\n            />\n          </div>\n        </div>\n        <div className=\"visualization-preview\">\n          <label htmlFor=\"visualization-preview\" className=\"invisible hidden-xs\">\n            Preview\n          </label>\n          <Filters filters={filters} onChange={setFilters} />\n          <div className=\"scrollbox\" data-test=\"VisualizationPreview\">\n            <Renderer\n              type={type}\n              data={filteredData}\n              options={options}\n              visualizationName={name}\n              onOptionsChange={onOptionsChanged}\n            />\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n\nEditVisualizationDialog.propTypes = {\n  dialog: DialogPropType.isRequired,\n  query: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  visualization: VisualizationType,\n  queryResult: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nEditVisualizationDialog.defaultProps = {\n  visualization: null,\n};\n\nexport default wrapDialog(EditVisualizationDialog);\n","import { extend, filter, find } from \"lodash\";\nimport { useCallback } from \"react\";\nimport EditVisualizationDialog from \"@/components/visualizations/EditVisualizationDialog\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\n\nexport default function useEditVisualizationDialog(query, queryResult, onChange) {\n  const handleChange = useImmutableCallback(onChange);\n\n  return useCallback(\n    (visualizationId = null) => {\n      const visualization = find(query.visualizations, { id: visualizationId }) || null;\n      EditVisualizationDialog.showModal({\n        query,\n        visualization,\n        queryResult,\n      }).onClose(updatedVisualization => {\n        const filteredVisualizations = filter(query.visualizations, v => v.id !== updatedVisualization.id);\n        handleChange(\n          extend(query.clone(), { visualizations: [...filteredVisualizations, updatedVisualization] }),\n          updatedVisualization\n        );\n      });\n    },\n    [query, queryResult, handleChange]\n  );\n}\n","import { extend, filter } from \"lodash\";\nimport { useCallback } from \"react\";\nimport Visualization from \"@/services/visualization\";\nimport notification from \"@/services/notification\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\n\nexport default function useDeleteVisualization(query, onChange) {\n  const handleChange = useImmutableCallback(onChange);\n\n  return useCallback(\n    visualizationId =>\n      Visualization.delete({ id: visualizationId })\n        .then(() => {\n          const filteredVisualizations = filter(query.visualizations, v => v.id !== visualizationId);\n          handleChange(extend(query.clone(), { visualizations: filteredVisualizations }));\n        })\n        .catch(() => {\n          notification.error(\"Error deleting visualization.\", \"Maybe it's used in a dashboard?\");\n        }),\n    [query, handleChange]\n  );\n}\n","import { useCallback } from \"react\";\nimport useUpdateQuery from \"./useUpdateQuery\";\nimport recordEvent from \"@/services/recordEvent\";\n\nexport default function useUpdateQueryDescription(query, onChange) {\n  const updateQuery = useUpdateQuery(query, onChange);\n\n  return useCallback(\n    description => {\n      recordEvent(\"edit_description\", \"query\", query.id);\n      updateQuery({ description });\n    },\n    [query.id, updateQuery]\n  );\n}\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nexport function QuerySourceTypeIcon(props) {\n  return <img src={`static/images/db-logos/${props.type}.png`} width=\"20\" alt={props.alt} />;\n}\n\nQuerySourceTypeIcon.propTypes = {\n  type: PropTypes.string,\n  alt: PropTypes.string,\n};\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { registerComponent } from \"@/components/DynamicComponent\";\nimport { QuerySourceTypeIcon } from \"@/pages/queries/components/QuerySourceTypeIcon\";\n\nexport function QuerySourceDropdownItem({ dataSource, children }) {\n  return (\n    <React.Fragment>\n      <QuerySourceTypeIcon type={dataSource.type} aria-label={dataSource.name} title={dataSource.name} />\n      {children ? children : <span>{dataSource.name}</span>}\n    </React.Fragment>\n  );\n}\n\nQuerySourceDropdownItem.propTypes = {\n  dataSource: PropTypes.shape({\n    name: PropTypes.string,\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    type: PropTypes.string,\n  }).isRequired,\n  children: PropTypes.element,\n};\n\nregisterComponent(\"QuerySourceDropdownItem\", QuerySourceDropdownItem);\n","import Select from \"antd/lib/select\";\nimport { map } from \"lodash\";\nimport DynamicComponent, { registerComponent } from \"@/components/DynamicComponent\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport \"./QuerySourceDropdownItem\"; // register QuerySourceDropdownItem\n\nexport function QuerySourceDropdown(props) {\n  return (\n    <Select\n      className=\"w-100\"\n      data-test=\"SelectDataSource\"\n      placeholder=\"Choose data source...\"\n      value={props.value}\n      disabled={props.disabled}\n      loading={props.loading}\n      optionFilterProp=\"data-name\"\n      showSearch\n      onChange={props.onChange}>\n      {map(props.dataSources, ds => (\n        <Select.Option key={`ds-${ds.id}`} value={ds.id} data-name={ds.name} data-test={`SelectDataSource${ds.id}`}>\n          <DynamicComponent name={\"QuerySourceDropdownItem\"} dataSource={ds} />\n        </Select.Option>\n      ))}\n    </Select>\n  );\n}\n\nQuerySourceDropdown.propTypes = {\n  dataSources: PropTypes.any,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  disabled: PropTypes.bool,\n  loading: PropTypes.bool,\n  onChange: PropTypes.func,\n};\n\nregisterComponent(\"QuerySourceDropdown\", QuerySourceDropdown);\n","import { extend, find, includes, isEmpty, map } from \"lodash\";\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\nimport { useDebouncedCallback } from \"use-debounce\";\nimport useMedia from \"use-media\";\nimport Button from \"antd/lib/button\";\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport Resizable from \"@/components/Resizable\";\nimport Parameters from \"@/components/Parameters\";\nimport EditInPlace from \"@/components/EditInPlace\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport recordEvent from \"@/services/recordEvent\";\nimport { ExecutionStatus } from \"@/services/query-result\";\nimport routes from \"@/services/routes\";\nimport notification from \"@/services/notification\";\nimport * as queryFormat from \"@/lib/queryFormat\";\n\nimport QueryPageHeader from \"./components/QueryPageHeader\";\nimport QueryMetadata from \"./components/QueryMetadata\";\nimport QueryVisualizationTabs from \"./components/QueryVisualizationTabs\";\nimport QueryExecutionStatus from \"./components/QueryExecutionStatus\";\nimport QuerySourceAlerts from \"./components/QuerySourceAlerts\";\nimport wrapQueryPage from \"./components/wrapQueryPage\";\nimport QueryExecutionMetadata from \"./components/QueryExecutionMetadata\";\n\nimport { getEditorComponents } from \"@/components/queries/editor-components\";\nimport useQuery from \"./hooks/useQuery\";\nimport useVisualizationTabHandler from \"./hooks/useVisualizationTabHandler\";\nimport useAutocompleteFlags from \"./hooks/useAutocompleteFlags\";\nimport useAutoLimitFlags from \"./hooks/useAutoLimitFlags\";\nimport useQueryExecute from \"./hooks/useQueryExecute\";\nimport useQueryResultData from \"@/lib/useQueryResultData\";\nimport useQueryDataSources from \"./hooks/useQueryDataSources\";\nimport useQueryFlags from \"./hooks/useQueryFlags\";\nimport useQueryParameters from \"./hooks/useQueryParameters\";\nimport useAddNewParameterDialog from \"./hooks/useAddNewParameterDialog\";\nimport useEditScheduleDialog from \"./hooks/useEditScheduleDialog\";\nimport useAddVisualizationDialog from \"./hooks/useAddVisualizationDialog\";\nimport useEditVisualizationDialog from \"./hooks/useEditVisualizationDialog\";\nimport useDeleteVisualization from \"./hooks/useDeleteVisualization\";\nimport useUpdateQuery from \"./hooks/useUpdateQuery\";\nimport useUpdateQueryDescription from \"./hooks/useUpdateQueryDescription\";\nimport useUnsavedChangesAlert from \"./hooks/useUnsavedChangesAlert\";\n\nimport \"./components/QuerySourceDropdown\"; // register QuerySourceDropdown\nimport \"./QuerySource.less\";\n\nfunction chooseDataSourceId(dataSourceIds, availableDataSources) {\n  availableDataSources = map(availableDataSources, ds => ds.id);\n  return find(dataSourceIds, id => includes(availableDataSources, id)) || null;\n}\n\nfunction QuerySource(props) {\n  const { query, setQuery, isDirty, saveQuery } = useQuery(props.query);\n  const { dataSourcesLoaded, dataSources, dataSource } = useQueryDataSources(query);\n  const [schema, setSchema] = useState([]);\n  const queryFlags = useQueryFlags(query, dataSource);\n  const [parameters, areParametersDirty, updateParametersDirtyFlag] = useQueryParameters(query);\n  const [selectedVisualization, setSelectedVisualization] = useVisualizationTabHandler(query.visualizations);\n  const { QueryEditor, SchemaBrowser } = getEditorComponents(dataSource && dataSource.type);\n  const isMobile = !useMedia({ minWidth: 768 });\n\n  useUnsavedChangesAlert(isDirty);\n\n  const {\n    queryResult,\n    isExecuting: isQueryExecuting,\n    executionStatus,\n    executeQuery,\n    error: executionError,\n    cancelCallback: cancelExecution,\n    isCancelling: isExecutionCancelling,\n    updatedAt,\n    loadedInitialResults,\n  } = useQueryExecute(query);\n\n  const queryResultData = useQueryResultData(queryResult);\n\n  const editorRef = useRef(null);\n  const [autocompleteAvailable, autocompleteEnabled, toggleAutocomplete] = useAutocompleteFlags(schema);\n  const [autoLimitAvailable, autoLimitChecked, setAutoLimit] = useAutoLimitFlags(dataSource, query, setQuery);\n\n  const [handleQueryEditorChange] = useDebouncedCallback(queryText => {\n    setQuery(extend(query.clone(), { query: queryText }));\n  }, 100);\n\n  useEffect(() => {\n    // TODO: ignore new pages?\n    recordEvent(\"view_source\", \"query\", query.id);\n  }, [query.id]);\n\n  useEffect(() => {\n    document.title = query.name;\n  }, [query.name]);\n\n  const updateQuery = useUpdateQuery(query, setQuery);\n  const updateQueryDescription = useUpdateQueryDescription(query, setQuery);\n  const querySyntax = dataSource ? dataSource.syntax || \"sql\" : null;\n  const isFormatQueryAvailable = queryFormat.isFormatQueryAvailable(querySyntax);\n  const formatQuery = () => {\n    try {\n      const formattedQueryText = queryFormat.formatQuery(query.query, querySyntax);\n      setQuery(extend(query.clone(), { query: formattedQueryText }));\n    } catch (err) {\n      notification.error(String(err));\n    }\n  };\n\n  const handleDataSourceChange = useCallback(\n    dataSourceId => {\n      if (dataSourceId) {\n        try {\n          localStorage.setItem(\"lastSelectedDataSourceId\", dataSourceId);\n        } catch (e) {\n          // `localStorage.setItem` may throw exception if there are no enough space - in this case it could be ignored\n        }\n      }\n      if (query.data_source_id !== dataSourceId) {\n        recordEvent(\"update_data_source\", \"query\", query.id, { dataSourceId });\n        const updates = {\n          data_source_id: dataSourceId,\n          latest_query_data_id: null,\n          latest_query_data: null,\n        };\n        setQuery(extend(query.clone(), updates));\n        updateQuery(updates, { successMessage: null }); // show message only on error\n      }\n    },\n    [query, setQuery, updateQuery]\n  );\n\n  useEffect(() => {\n    // choose data source id for new queries\n    if (dataSourcesLoaded && queryFlags.isNew) {\n      const firstDataSourceId = dataSources.length > 0 ? dataSources[0].id : null;\n      const selectedDataSourceId = parseInt(localStorage.getItem(\"lastSelectedDataSourceId\")) || null;\n\n      handleDataSourceChange(\n        chooseDataSourceId([query.data_source_id, selectedDataSourceId, firstDataSourceId], dataSources)\n      );\n    }\n  }, [query.data_source_id, queryFlags.isNew, dataSourcesLoaded, dataSources, handleDataSourceChange]);\n\n  const editSchedule = useEditScheduleDialog(query, setQuery);\n  const openAddNewParameterDialog = useAddNewParameterDialog(query, (newQuery, param) => {\n    if (editorRef.current) {\n      editorRef.current.paste(param.toQueryTextFragment());\n      editorRef.current.focus();\n    }\n    setQuery(newQuery);\n  });\n\n  const handleSchemaItemSelect = useCallback(schemaItem => {\n    if (editorRef.current) {\n      editorRef.current.paste(schemaItem);\n    }\n  }, []);\n\n  const [selectedText, setSelectedText] = useState(null);\n\n  const doExecuteQuery = useCallback(\n    (skipParametersDirtyFlag = false) => {\n      if (!queryFlags.canExecute || (!skipParametersDirtyFlag && (areParametersDirty || isQueryExecuting))) {\n        return;\n      }\n      if (isDirty || !isEmpty(selectedText)) {\n        executeQuery(null, () => {\n          return query.getQueryResultByText(0, selectedText);\n        });\n      } else {\n        executeQuery();\n      }\n    },\n    [query, queryFlags.canExecute, areParametersDirty, isQueryExecuting, isDirty, selectedText, executeQuery]\n  );\n\n  const [isQuerySaving, setIsQuerySaving] = useState(false);\n\n  const doSaveQuery = useCallback(() => {\n    if (!isQuerySaving) {\n      setIsQuerySaving(true);\n      saveQuery().finally(() => setIsQuerySaving(false));\n    }\n  }, [isQuerySaving, saveQuery]);\n\n  const addVisualization = useAddVisualizationDialog(query, queryResult, doSaveQuery, (newQuery, visualization) => {\n    setQuery(newQuery);\n    setSelectedVisualization(visualization.id);\n  });\n  const editVisualization = useEditVisualizationDialog(query, queryResult, newQuery => setQuery(newQuery));\n  const deleteVisualization = useDeleteVisualization(query, setQuery);\n\n  return (\n    <div className={cx(\"query-page-wrapper\", { \"query-fixed-layout\": !isMobile })}>\n      <QuerySourceAlerts query={query} dataSourcesAvailable={!dataSourcesLoaded || dataSources.length > 0} />\n      <div className=\"container w-100 p-b-10\">\n        <QueryPageHeader\n          query={query}\n          dataSource={dataSource}\n          sourceMode\n          selectedVisualization={selectedVisualization}\n          headerExtra={<DynamicComponent name=\"QuerySource.HeaderExtra\" query={query} />}\n          onChange={setQuery}\n        />\n      </div>\n      <main className=\"query-fullscreen\">\n        <Resizable direction=\"horizontal\" sizeAttribute=\"flex-basis\" toggleShortcut=\"Alt+Shift+D, Alt+D\">\n          <nav>\n            {dataSourcesLoaded && (\n              <div className=\"editor__left__data-source\">\n                <DynamicComponent\n                  name={\"QuerySourceDropdown\"}\n                  dataSources={dataSources}\n                  value={dataSource ? dataSource.id : undefined}\n                  disabled={!queryFlags.canEdit || !dataSourcesLoaded || dataSources.length === 0}\n                  loading={!dataSourcesLoaded}\n                  onChange={handleDataSourceChange}\n                />\n              </div>\n            )}\n            <div className=\"editor__left__schema\">\n              <SchemaBrowser\n                dataSource={dataSource}\n                options={query.options.schemaOptions}\n                onOptionsUpdate={schemaOptions =>\n                  setQuery(extend(query.clone(), { options: { ...query.options, schemaOptions } }))\n                }\n                onSchemaUpdate={setSchema}\n                onItemSelect={handleSchemaItemSelect}\n              />\n            </div>\n\n            {!query.isNew() && (\n              <div className=\"query-page-query-description\">\n                <EditInPlace\n                  isEditable={queryFlags.canEdit}\n                  markdown\n                  ignoreBlanks={false}\n                  placeholder=\"Add description\"\n                  value={query.description}\n                  onDone={updateQueryDescription}\n                  multiline\n                />\n              </div>\n            )}\n\n            {!query.isNew() && <QueryMetadata layout=\"table\" query={query} onEditSchedule={editSchedule} />}\n          </nav>\n        </Resizable>\n\n        <div className=\"content\">\n          <div className=\"flex-fill p-relative\">\n            <div\n              className=\"p-absolute d-flex flex-column p-l-15 p-r-15\"\n              style={{ left: 0, top: 0, right: 0, bottom: 0, overflow: \"auto\" }}>\n              <Resizable direction=\"vertical\" sizeAttribute=\"flex-basis\">\n                <div className=\"row editor\">\n                  <section className=\"query-editor-wrapper\" data-test=\"QueryEditor\">\n                    <QueryEditor\n                      ref={editorRef}\n                      data-executing={isQueryExecuting ? \"true\" : null}\n                      syntax={dataSource ? dataSource.syntax : null}\n                      value={query.query}\n                      schema={schema}\n                      autocompleteEnabled={autocompleteAvailable && autocompleteEnabled}\n                      onChange={handleQueryEditorChange}\n                      onSelectionChange={setSelectedText}\n                    />\n\n                    <QueryEditor.Controls\n                      addParameterButtonProps={{\n                        title: \"Add New Parameter\",\n                        shortcut: \"mod+p\",\n                        onClick: openAddNewParameterDialog,\n                      }}\n                      formatButtonProps={{\n                        title: isFormatQueryAvailable\n                          ? \"Format Query\"\n                          : \"Query formatting is not supported for your Data Source syntax\",\n                        disabled: !dataSource || !isFormatQueryAvailable,\n                        shortcut: isFormatQueryAvailable ? \"mod+shift+f\" : null,\n                        onClick: formatQuery,\n                      }}\n                      saveButtonProps={\n                        queryFlags.canEdit && {\n                          text: (\n                            <React.Fragment>\n                              <span className=\"hidden-xs\">Save</span>\n                              {isDirty && !isQuerySaving ? \"*\" : null}\n                            </React.Fragment>\n                          ),\n                          shortcut: \"mod+s\",\n                          onClick: doSaveQuery,\n                          loading: isQuerySaving,\n                        }\n                      }\n                      executeButtonProps={{\n                        disabled: !queryFlags.canExecute || isQueryExecuting || areParametersDirty,\n                        shortcut: \"mod+enter, alt+enter, ctrl+enter, shift+enter\",\n                        onClick: doExecuteQuery,\n                        text: (\n                          <span className=\"hidden-xs\">{selectedText === null ? \"Execute\" : \"Execute Selected\"}</span>\n                        ),\n                      }}\n                      autocompleteToggleProps={{\n                        available: autocompleteAvailable,\n                        enabled: autocompleteEnabled,\n                        onToggle: toggleAutocomplete,\n                      }}\n                      autoLimitCheckboxProps={{\n                        available: autoLimitAvailable,\n                        checked: autoLimitChecked,\n                        onChange: setAutoLimit,\n                      }}\n                      dataSourceSelectorProps={\n                        dataSource\n                          ? {\n                              disabled: !queryFlags.canEdit,\n                              value: dataSource.id,\n                              onChange: handleDataSourceChange,\n                              options: map(dataSources, ds => ({ value: ds.id, label: ds.name })),\n                            }\n                          : false\n                      }\n                    />\n                  </section>\n                </div>\n              </Resizable>\n\n              {!queryFlags.isNew && <QueryMetadata layout=\"horizontal\" query={query} onEditSchedule={editSchedule} />}\n\n              <section className=\"query-results-wrapper\">\n                {query.hasParameters() && (\n                  <div className=\"query-parameters-wrapper\">\n                    <Parameters\n                      editable={queryFlags.canEdit}\n                      sortable={queryFlags.canEdit}\n                      disableUrlUpdate={queryFlags.isNew}\n                      parameters={parameters}\n                      onPendingValuesChange={() => updateParametersDirtyFlag()}\n                      onValuesChange={() => {\n                        updateParametersDirtyFlag(false);\n                        doExecuteQuery(true);\n                      }}\n                      onParametersEdit={() => {\n                        // save if query clean\n                        // https://discuss.redash.io/t/query-unsaved-changes-indication/3302/5\n                        if (!isDirty) {\n                          saveQuery();\n                        }\n                      }}\n                    />\n                  </div>\n                )}\n                {(executionError || isQueryExecuting) && (\n                  <div className=\"query-alerts\">\n                    <QueryExecutionStatus\n                      status={executionStatus}\n                      updatedAt={updatedAt}\n                      error={executionError}\n                      isCancelling={isExecutionCancelling}\n                      onCancel={cancelExecution}\n                    />\n                  </div>\n                )}\n\n                <React.Fragment>\n                  {queryResultData.log.length > 0 && (\n                    <div className=\"query-results-log\">\n                      <p>Log Information:</p>\n                      {map(queryResultData.log, (line, index) => (\n                        <p key={`log-line-${index}`} className=\"query-log-line\">\n                          {line}\n                        </p>\n                      ))}\n                    </div>\n                  )}\n                  {loadedInitialResults && !(queryFlags.isNew && !queryResult) && (\n                    <QueryVisualizationTabs\n                      queryResult={queryResult}\n                      visualizations={query.visualizations}\n                      showNewVisualizationButton={queryFlags.canEdit && queryResultData.status === ExecutionStatus.DONE}\n                      canDeleteVisualizations={queryFlags.canEdit}\n                      selectedTab={selectedVisualization}\n                      onChangeTab={setSelectedVisualization}\n                      onAddVisualization={addVisualization}\n                      onDeleteVisualization={deleteVisualization}\n                      refreshButton={\n                        <Button\n                          type=\"primary\"\n                          disabled={!queryFlags.canExecute || areParametersDirty}\n                          loading={isQueryExecuting}\n                          onClick={doExecuteQuery}>\n                          {!isQueryExecuting && <i className=\"zmdi zmdi-refresh m-r-5\" aria-hidden=\"true\" />}\n                          Refresh Now\n                        </Button>\n                      }\n                    />\n                  )}\n                </React.Fragment>\n              </section>\n            </div>\n          </div>\n          {queryResult && !queryResult.getError() && (\n            <div className=\"bottom-controller-container\">\n              <QueryExecutionMetadata\n                query={query}\n                queryResult={queryResult}\n                selectedVisualization={selectedVisualization}\n                isQueryExecuting={isQueryExecuting}\n                showEditVisualizationButton={!queryFlags.isNew && queryFlags.canEdit}\n                onEditVisualization={editVisualization}\n              />\n            </div>\n          )}\n        </div>\n      </main>\n    </div>\n  );\n}\n\nQuerySource.propTypes = {\n  query: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nconst QuerySourcePage = wrapQueryPage(QuerySource);\n\nroutes.register(\n  \"Queries.New\",\n  routeWithUserSession({\n    path: \"/queries/new\",\n    render: pageProps => <QuerySourcePage {...pageProps} />,\n    bodyClass: \"fixed-layout\",\n  })\n);\nroutes.register(\n  \"Queries.Edit\",\n  routeWithUserSession({\n    path: \"/queries/:queryId/source\",\n    render: pageProps => <QuerySourcePage {...pageProps} />,\n    bodyClass: \"fixed-layout\",\n  })\n);\n","import { isEmpty } from \"lodash\";\nimport { useState, useMemo } from \"react\";\nimport useUpdateQuery from \"./useUpdateQuery\";\nimport navigateTo from \"@/components/ApplicationArea/navigateTo\";\n\nexport default function useQuery(originalQuery) {\n  const [query, setQuery] = useState(originalQuery);\n  const [originalQuerySource, setOriginalQuerySource] = useState(originalQuery.query);\n  const [originalAutoLimit, setOriginalAutoLimit] = useState(query.options.apply_auto_limit);\n\n  const updateQuery = useUpdateQuery(query, updatedQuery => {\n    // It's important to update URL first, and only then update state\n    if (updatedQuery.id !== query.id) {\n      // Don't reload page when saving new query\n      navigateTo(updatedQuery.getUrl(true), true);\n    }\n    setQuery(updatedQuery);\n    setOriginalQuerySource(updatedQuery.query);\n    setOriginalAutoLimit(updatedQuery.options.apply_auto_limit);\n  });\n\n  return useMemo(\n    () => ({\n      query,\n      setQuery,\n      isDirty:\n        query.query !== originalQuerySource ||\n        (!isEmpty(query.query) && query.options.apply_auto_limit !== originalAutoLimit),\n      saveQuery: () => updateQuery(),\n    }),\n    [query, originalQuerySource, updateQuery, originalAutoLimit]\n  );\n}\n","import { filter, find, toString } from \"lodash\";\nimport { useState, useMemo, useEffect } from \"react\";\nimport DataSource from \"@/services/data-source\";\n\nexport default function useQueryDataSources(query) {\n  const [allDataSources, setAllDataSources] = useState([]);\n  const [dataSourcesLoaded, setDataSourcesLoaded] = useState(false);\n  const dataSources = useMemo(() => filter(allDataSources, ds => !ds.view_only || ds.id === query.data_source_id), [\n    allDataSources,\n    query.data_source_id,\n  ]);\n  const dataSource = useMemo(\n    () => find(dataSources, ds => toString(ds.id) === toString(query.data_source_id)) || null,\n    [query.data_source_id, dataSources]\n  );\n\n  useEffect(() => {\n    let cancelDataSourceLoading = false;\n    DataSource.query().then(data => {\n      if (!cancelDataSourceLoading) {\n        setDataSourcesLoaded(true);\n        setAllDataSources(data);\n      }\n    });\n\n    return () => {\n      cancelDataSourceLoading = true;\n    };\n  }, []);\n\n  return useMemo(() => ({ dataSourcesLoaded, dataSources, dataSource }), [dataSourcesLoaded, dataSources, dataSource]);\n}\n","import { useRef, useEffect } from \"react\";\nimport location from \"@/services/location\";\n\nexport default function useUnsavedChangesAlert(shouldShowAlert = false) {\n  const shouldShowAlertRef = useRef();\n  shouldShowAlertRef.current = shouldShowAlert;\n\n  useEffect(() => {\n    const unloadMessage = \"You will lose your changes if you leave\";\n    const confirmMessage = `${unloadMessage}\\n\\nAre you sure you want to leave this page?`;\n    // store original handler (if any)\n    const savedOnBeforeUnload = window.onbeforeunload;\n\n    window.onbeforeunload = function onbeforeunload() {\n      return shouldShowAlertRef.current ? unloadMessage : undefined;\n    };\n\n    const unsubscribe = location.confirmChange((nextLocation, currentLocation) => {\n      if (shouldShowAlertRef.current && nextLocation.path !== currentLocation.path) {\n        return confirmMessage;\n      }\n    });\n\n    return () => {\n      window.onbeforeunload = savedOnBeforeUnload;\n      unsubscribe();\n    };\n  }, []);\n}\n","import { map } from \"lodash\";\nimport { useCallback } from \"react\";\nimport EditParameterSettingsDialog from \"@/components/EditParameterSettingsDialog\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\n\nexport default function useAddNewParameterDialog(query, onParameterAdded) {\n  const handleParameterAdded = useImmutableCallback(onParameterAdded);\n\n  return useCallback(() => {\n    EditParameterSettingsDialog.showModal({\n      parameter: {\n        title: null,\n        name: \"\",\n        type: \"text\",\n        value: null,\n      },\n      existingParams: map(query.getParameters().get(), p => p.name),\n    }).onClose(param => {\n      const newQuery = query.clone();\n      param = newQuery.getParameters().add(param);\n      handleParameterAdded(newQuery, param);\n    });\n  }, [query, handleParameterAdded]);\n}\n","import { useState, useCallback, useEffect } from \"react\";\nimport useQueryFlags from \"./useQueryFlags\";\nimport useEditVisualizationDialog from \"./useEditVisualizationDialog\";\n\nexport default function useAddVisualizationDialog(query, queryResult, saveQuery, onChange) {\n  const queryFlags = useQueryFlags(query);\n  const editVisualization = useEditVisualizationDialog(query, queryResult, onChange);\n  const [shouldOpenDialog, setShouldOpenDialog] = useState(false);\n\n  useEffect(() => {\n    if (!queryFlags.isNew && shouldOpenDialog) {\n      setShouldOpenDialog(false);\n      editVisualization();\n    }\n  }, [queryFlags.isNew, shouldOpenDialog, editVisualization]);\n\n  return useCallback(() => {\n    if (queryFlags.isNew) {\n      setShouldOpenDialog(true);\n      saveQuery();\n    } else {\n      editVisualization();\n    }\n  }, [queryFlags.isNew, saveQuery, editVisualization]);\n}\n","import React, { useState, useMemo, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"antd/lib/button\";\nimport KeyboardShortcuts from \"@/services/KeyboardShortcuts\";\nimport { ButtonTooltip } from \"@/components/queries/QueryEditor/QueryEditorControls\";\n\nexport default function QueryViewButton({ title, shortcut, disabled, children, onClick, ...props }) {\n  const [tooltipVisible, setTooltipVisible] = useState(false);\n\n  const eventHandlers = useMemo(\n    () => ({\n      onMouseEnter: () => setTooltipVisible(true),\n      onMouseLeave: () => setTooltipVisible(false),\n    }),\n    []\n  );\n\n  useEffect(() => {\n    if (disabled) {\n      setTooltipVisible(false);\n    }\n  }, [disabled]);\n\n  useEffect(() => {\n    if (shortcut) {\n      const shortcuts = {\n        [shortcut]: onClick,\n      };\n\n      KeyboardShortcuts.bind(shortcuts);\n      return () => {\n        KeyboardShortcuts.unbind(shortcuts);\n      };\n    }\n  }, [shortcut, onClick]);\n\n  return (\n    <ButtonTooltip title={title} shortcut={shortcut} visible={tooltipVisible}>\n      <span {...eventHandlers}>\n        <Button\n          data-test=\"ExecuteButton\"\n          disabled={disabled}\n          onClick={onClick}\n          style={disabled ? { pointerEvents: \"none\" } : {}}\n          {...props}>\n          {children}\n        </Button>\n      </span>\n    </ButtonTooltip>\n  );\n}\n\nQueryViewButton.propTypes = {\n  className: PropTypes.string,\n  shortcut: PropTypes.string,\n  disabled: PropTypes.bool,\n  children: PropTypes.node,\n  onClick: PropTypes.func,\n};\n\nQueryViewButton.defaultProps = {\n  className: null,\n  shortcut: null,\n  disabled: false,\n  children: null,\n  onClick: () => {},\n};\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\nimport useMedia from \"use-media\";\nimport Button from \"antd/lib/button\";\n\nimport FullscreenOutlinedIcon from \"@ant-design/icons/FullscreenOutlined\";\nimport FullscreenExitOutlinedIcon from \"@ant-design/icons/FullscreenExitOutlined\";\n\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport EditInPlace from \"@/components/EditInPlace\";\nimport Parameters from \"@/components/Parameters\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport PlainButton from \"@/components/PlainButton\";\n\nimport DataSource from \"@/services/data-source\";\nimport { ExecutionStatus } from \"@/services/query-result\";\nimport routes from \"@/services/routes\";\nimport { policy } from \"@/services/policy\";\n\nimport useQueryResultData from \"@/lib/useQueryResultData\";\n\nimport QueryPageHeader from \"./components/QueryPageHeader\";\nimport QueryVisualizationTabs from \"./components/QueryVisualizationTabs\";\nimport QueryExecutionStatus from \"./components/QueryExecutionStatus\";\nimport QueryMetadata from \"./components/QueryMetadata\";\nimport wrapQueryPage from \"./components/wrapQueryPage\";\nimport QueryViewButton from \"./components/QueryViewButton\";\nimport QueryExecutionMetadata from \"./components/QueryExecutionMetadata\";\n\nimport useVisualizationTabHandler from \"./hooks/useVisualizationTabHandler\";\nimport useQueryExecute from \"./hooks/useQueryExecute\";\nimport useUpdateQueryDescription from \"./hooks/useUpdateQueryDescription\";\nimport useQueryFlags from \"./hooks/useQueryFlags\";\nimport useQueryParameters from \"./hooks/useQueryParameters\";\nimport useEditScheduleDialog from \"./hooks/useEditScheduleDialog\";\nimport useEditVisualizationDialog from \"./hooks/useEditVisualizationDialog\";\nimport useDeleteVisualization from \"./hooks/useDeleteVisualization\";\nimport useFullscreenHandler from \"../../lib/hooks/useFullscreenHandler\";\n\nimport \"./QueryView.less\";\n\nfunction QueryView(props) {\n  const [query, setQuery] = useState(props.query);\n  const [dataSource, setDataSource] = useState();\n  const queryFlags = useQueryFlags(query, dataSource);\n  const [parameters, areParametersDirty, updateParametersDirtyFlag] = useQueryParameters(query);\n  const [selectedVisualization, setSelectedVisualization] = useVisualizationTabHandler(query.visualizations);\n  const isDesktop = useMedia({ minWidth: 768 });\n  const isFixedLayout = useMedia({ minHeight: 500 }) && isDesktop;\n  const [fullscreen, toggleFullscreen] = useFullscreenHandler(isDesktop);\n  const [addingDescription, setAddingDescription] = useState(false);\n\n  const {\n    queryResult,\n    loadedInitialResults,\n    isExecuting,\n    executionStatus,\n    executeQuery,\n    error: executionError,\n    cancelCallback: cancelExecution,\n    isCancelling: isExecutionCancelling,\n    updatedAt,\n  } = useQueryExecute(query);\n\n  const queryResultData = useQueryResultData(queryResult);\n\n  const updateQueryDescription = useUpdateQueryDescription(query, setQuery);\n  const editSchedule = useEditScheduleDialog(query, setQuery);\n  const addVisualization = useEditVisualizationDialog(query, queryResult, (newQuery, visualization) => {\n    setQuery(newQuery);\n    setSelectedVisualization(visualization.id);\n  });\n  const editVisualization = useEditVisualizationDialog(query, queryResult, newQuery => setQuery(newQuery));\n  const deleteVisualization = useDeleteVisualization(query, setQuery);\n\n  const doExecuteQuery = useCallback(\n    (skipParametersDirtyFlag = false) => {\n      if (!queryFlags.canExecute || (!skipParametersDirtyFlag && (areParametersDirty || isExecuting))) {\n        return;\n      }\n      executeQuery();\n    },\n    [areParametersDirty, executeQuery, isExecuting, queryFlags.canExecute]\n  );\n\n  useEffect(() => {\n    document.title = query.name;\n  }, [query.name]);\n\n  useEffect(() => {\n    DataSource.get({ id: query.data_source_id }).then(setDataSource);\n  }, [query.data_source_id]);\n\n  return (\n    <div\n      className={cx(\"query-page-wrapper\", {\n        \"query-view-fullscreen\": fullscreen,\n        \"query-fixed-layout\": isFixedLayout,\n      })}>\n      <div className=\"container w-100\">\n        <QueryPageHeader\n          query={query}\n          dataSource={dataSource}\n          onChange={setQuery}\n          selectedVisualization={selectedVisualization}\n          headerExtra={\n            <DynamicComponent name=\"QueryView.HeaderExtra\" query={query}>\n              {policy.canRun(query) && (\n                <QueryViewButton\n                  className=\"m-r-5\"\n                  type=\"primary\"\n                  shortcut=\"mod+enter, alt+enter, ctrl+enter\"\n                  disabled={!queryFlags.canExecute || isExecuting || areParametersDirty}\n                  onClick={doExecuteQuery}>\n                  Refresh\n                </QueryViewButton>\n              )}\n            </DynamicComponent>\n          }\n          tagsExtra={\n            !query.description &&\n            queryFlags.canEdit &&\n            !addingDescription &&\n            !fullscreen && (\n              <PlainButton className=\"label label-tag hidden-xs\" role=\"none\" onClick={() => setAddingDescription(true)}>\n                <i className=\"zmdi zmdi-plus m-r-5\" aria-hidden=\"true\" />\n                Add description\n              </PlainButton>\n            )\n          }\n        />\n        {(query.description || addingDescription) && (\n          <div className={cx(\"m-t-5\", { hidden: fullscreen })}>\n            <EditInPlace\n              className=\"w-100\"\n              value={query.description}\n              isEditable={queryFlags.canEdit}\n              onDone={updateQueryDescription}\n              onStopEditing={() => setAddingDescription(false)}\n              placeholder=\"Add description\"\n              ignoreBlanks={false}\n              editorProps={{ autoSize: { minRows: 2, maxRows: 4 } }}\n              defaultEditing={addingDescription}\n              multiline\n            />\n          </div>\n        )}\n      </div>\n      <div className=\"query-view-content\">\n        {query.hasParameters() && (\n          <div className={cx(\"bg-white tiled p-15 m-t-15 m-l-15 m-r-15\", { hidden: fullscreen })}>\n            <Parameters\n              parameters={parameters}\n              onValuesChange={() => {\n                updateParametersDirtyFlag(false);\n                doExecuteQuery(true);\n              }}\n              onPendingValuesChange={() => updateParametersDirtyFlag()}\n            />\n          </div>\n        )}\n        <div className=\"query-results m-t-15\">\n          {loadedInitialResults && (\n            <QueryVisualizationTabs\n              queryResult={queryResult}\n              visualizations={query.visualizations}\n              showNewVisualizationButton={queryFlags.canEdit && queryResultData.status === ExecutionStatus.DONE}\n              canDeleteVisualizations={queryFlags.canEdit}\n              selectedTab={selectedVisualization}\n              onChangeTab={setSelectedVisualization}\n              onAddVisualization={addVisualization}\n              onDeleteVisualization={deleteVisualization}\n              refreshButton={\n                policy.canRun(query) && (\n                  <Button\n                    type=\"primary\"\n                    disabled={!queryFlags.canExecute || areParametersDirty}\n                    loading={isExecuting}\n                    onClick={doExecuteQuery}>\n                    {!isExecuting && <i className=\"zmdi zmdi-refresh m-r-5\" aria-hidden=\"true\" />}\n                    Refresh Now\n                  </Button>\n                )\n              }\n              canRefresh={policy.canRun(query)}\n            />\n          )}\n          <div className=\"query-results-footer\">\n            {queryResult && !queryResult.getError() && (\n              <QueryExecutionMetadata\n                query={query}\n                queryResult={queryResult}\n                selectedVisualization={selectedVisualization}\n                isQueryExecuting={isExecuting}\n                showEditVisualizationButton={queryFlags.canEdit}\n                onEditVisualization={editVisualization}\n                extraActions={\n                  <QueryViewButton\n                    className=\"icon-button m-r-5 hidden-xs\"\n                    title=\"Toggle Fullscreen\"\n                    type=\"default\"\n                    shortcut=\"alt+f\"\n                    onClick={toggleFullscreen}>\n                    {fullscreen ? <FullscreenExitOutlinedIcon /> : <FullscreenOutlinedIcon />}\n                  </QueryViewButton>\n                }\n              />\n            )}\n            {(executionError || isExecuting) && (\n              <div className=\"query-execution-status\">\n                <QueryExecutionStatus\n                  status={executionStatus}\n                  error={executionError}\n                  isCancelling={isExecutionCancelling}\n                  onCancel={cancelExecution}\n                  updatedAt={updatedAt}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n        <div className={cx(\"p-t-15 p-r-15 p-l-15\", { hidden: fullscreen })}>\n          <QueryMetadata layout=\"horizontal\" query={query} dataSource={dataSource} onEditSchedule={editSchedule} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nQueryView.propTypes = { query: PropTypes.object.isRequired }; // eslint-disable-line react/forbid-prop-types\n\nconst QueryViewPage = wrapQueryPage(QueryView);\n\nroutes.register(\n  \"Queries.View\",\n  routeWithUserSession({\n    path: \"/queries/:queryId\",\n    render: pageProps => <QueryViewPage {...pageProps} />,\n  })\n);\n","import { find, has } from \"lodash\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport { markdown } from \"markdown\";\n\nimport Button from \"antd/lib/button\";\nimport Dropdown from \"antd/lib/dropdown\";\nimport Menu from \"antd/lib/menu\";\nimport Tooltip from \"@/components/Tooltip\";\nimport Link from \"@/components/Link\";\nimport routeWithApiKeySession from \"@/components/ApplicationArea/routeWithApiKeySession\";\nimport Parameters from \"@/components/Parameters\";\nimport { Moment } from \"@/components/proptypes\";\nimport TimeAgo from \"@/components/TimeAgo\";\nimport Timer from \"@/components/Timer\";\nimport QueryResultsLink from \"@/components/EditVisualizationButton/QueryResultsLink\";\nimport VisualizationName from \"@/components/visualizations/VisualizationName\";\nimport VisualizationRenderer from \"@/components/visualizations/VisualizationRenderer\";\n\nimport FileOutlinedIcon from \"@ant-design/icons/FileOutlined\";\nimport FileExcelOutlinedIcon from \"@ant-design/icons/FileExcelOutlined\";\n\nimport { VisualizationType } from \"@redash/viz/lib\";\nimport HtmlContent from \"@redash/viz/lib/components/HtmlContent\";\n\nimport { formatDateTime } from \"@/lib/utils\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\nimport { Query } from \"@/services/query\";\nimport location from \"@/services/location\";\nimport routes from \"@/services/routes\";\n\nimport logoUrl from \"@/assets/images/redash_icon_small.png\";\n\nfunction VisualizationEmbedHeader({ queryName, queryDescription, visualization }) {\n  return (\n    <div className=\"embed-heading p-b-10 p-r-15 p-l-15\">\n      <h3>\n        <img src={logoUrl} alt=\"Redash Logo\" style={{ height: \"24px\", verticalAlign: \"text-bottom\" }} />\n        <VisualizationName visualization={visualization} /> {queryName}\n        {queryDescription && (\n          <small>\n            <HtmlContent className=\"markdown text-muted\">{markdown.toHTML(queryDescription || \"\")}</HtmlContent>\n          </small>\n        )}\n      </h3>\n    </div>\n  );\n}\n\nVisualizationEmbedHeader.propTypes = {\n  queryName: PropTypes.string.isRequired,\n  queryDescription: PropTypes.string,\n  visualization: VisualizationType.isRequired,\n};\n\nVisualizationEmbedHeader.defaultProps = { queryDescription: \"\" };\n\nfunction VisualizationEmbedFooter({\n  query,\n  queryResults,\n  updatedAt,\n  refreshStartedAt,\n  queryUrl,\n  hideTimestamp,\n  apiKey,\n}) {\n  const downloadMenu = (\n    <Menu>\n      <Menu.Item>\n        <QueryResultsLink\n          fileType=\"csv\"\n          query={query}\n          queryResult={queryResults}\n          apiKey={apiKey}\n          disabled={!queryResults || !queryResults.getData || !queryResults.getData()}\n          embed>\n          <FileOutlinedIcon /> Download as CSV File\n        </QueryResultsLink>\n      </Menu.Item>\n      <Menu.Item>\n        <QueryResultsLink\n          fileType=\"tsv\"\n          query={query}\n          queryResult={queryResults}\n          apiKey={apiKey}\n          disabled={!queryResults || !queryResults.getData || !queryResults.getData()}\n          embed>\n          <FileOutlinedIcon /> Download as TSV File\n        </QueryResultsLink>\n      </Menu.Item>\n      <Menu.Item>\n        <QueryResultsLink\n          fileType=\"xlsx\"\n          query={query}\n          queryResult={queryResults}\n          apiKey={apiKey}\n          disabled={!queryResults || !queryResults.getData || !queryResults.getData()}\n          embed>\n          <FileExcelOutlinedIcon /> Download as Excel File\n        </QueryResultsLink>\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <div className=\"tile__bottom-control\">\n      {!hideTimestamp && (\n        <span>\n          <span className=\"small hidden-print\">\n            <i className=\"zmdi zmdi-time-restore\" aria-hidden=\"true\" />{\" \"}\n            {refreshStartedAt ? <Timer from={refreshStartedAt} /> : <TimeAgo date={updatedAt} />}\n          </span>\n          <span className=\"small visible-print\">\n            <i className=\"zmdi zmdi-time-restore\" aria-hidden=\"true\" /> {formatDateTime(updatedAt)}\n          </span>\n        </span>\n      )}\n      {queryUrl && (\n        <span className=\"hidden-print\">\n          <Tooltip title=\"Open in Redash\">\n            <Link.Button className=\"icon-button\" href={queryUrl} target=\"_blank\">\n              <i className=\"fa fa-external-link\" aria-hidden=\"true\" />\n              <span className=\"sr-only\">Open in Redash</span>\n            </Link.Button>\n          </Tooltip>\n          {!query.hasParameters() && (\n            <Dropdown overlay={downloadMenu} disabled={!queryResults} trigger={[\"click\"]} placement=\"topLeft\">\n              <Button loading={!queryResults && !!refreshStartedAt} className=\"m-l-5\">\n                Download Dataset\n                <i className=\"fa fa-caret-up m-l-5\" aria-hidden=\"true\" />\n              </Button>\n            </Dropdown>\n          )}\n        </span>\n      )}\n    </div>\n  );\n}\n\nVisualizationEmbedFooter.propTypes = {\n  query: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  queryResults: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  updatedAt: PropTypes.string,\n  refreshStartedAt: Moment,\n  queryUrl: PropTypes.string,\n  hideTimestamp: PropTypes.bool,\n  apiKey: PropTypes.string,\n};\n\nVisualizationEmbedFooter.defaultProps = {\n  queryResults: null,\n  updatedAt: null,\n  refreshStartedAt: null,\n  queryUrl: null,\n  hideTimestamp: false,\n  apiKey: null,\n};\n\nfunction VisualizationEmbed({ queryId, visualizationId, apiKey, onError }) {\n  const [query, setQuery] = useState(null);\n  const [error, setError] = useState(null);\n  const [refreshStartedAt, setRefreshStartedAt] = useState(null);\n  const [queryResults, setQueryResults] = useState(null);\n\n  const handleError = useImmutableCallback(onError);\n\n  useEffect(() => {\n    let isCancelled = false;\n    Query.get({ id: queryId })\n      .then(result => {\n        if (!isCancelled) {\n          setQuery(result);\n        }\n      })\n      .catch(handleError);\n\n    return () => {\n      isCancelled = true;\n    };\n  }, [queryId, handleError]);\n\n  const refreshQueryResults = useCallback(() => {\n    if (query) {\n      setError(null);\n      setRefreshStartedAt(moment());\n      query\n        .getQueryResultPromise()\n        .then(result => {\n          setQueryResults(result);\n        })\n        .catch(err => {\n          setError(err.getError());\n        })\n        .finally(() => setRefreshStartedAt(null));\n    }\n  }, [query]);\n\n  useEffect(() => {\n    document.querySelector(\"body\").classList.add(\"headless\");\n    refreshQueryResults();\n  }, [refreshQueryResults]);\n\n  if (!query) {\n    return null;\n  }\n\n  const hideHeader = has(location.search, \"hide_header\");\n  const hideParametersUI = has(location.search, \"hide_parameters\");\n  const hideQueryLink = has(location.search, \"hide_link\");\n  const hideTimestamp = has(location.search, \"hide_timestamp\");\n\n  const showQueryDescription = has(location.search, \"showDescription\");\n  visualizationId = parseInt(visualizationId, 10);\n  const visualization = find(query.visualizations, vis => vis.id === visualizationId);\n\n  if (!visualization) {\n    // call error handler async, otherwise it will destroy the component on render phase\n    setTimeout(() => {\n      onError(new Error(\"Visualization does not exist\"));\n    }, 10);\n    return null;\n  }\n\n  return (\n    <div className=\"tile m-t-10 m-l-10 m-r-10 p-t-10 embed__vis\" data-test=\"VisualizationEmbed\">\n      {!hideHeader && (\n        <VisualizationEmbedHeader\n          queryName={query.name}\n          queryDescription={showQueryDescription ? query.description : null}\n          visualization={visualization}\n        />\n      )}\n      <div className=\"col-md-12 query__vis\">\n        {!hideParametersUI && query.hasParameters() && (\n          <div className=\"p-t-15 p-b-10\">\n            <Parameters parameters={query.getParametersDefs()} onValuesChange={refreshQueryResults} />\n          </div>\n        )}\n        {error && <div className=\"alert alert-danger\" data-test=\"ErrorMessage\">{`Error: ${error}`}</div>}\n        {!error && queryResults && (\n          <VisualizationRenderer visualization={visualization} queryResult={queryResults} context=\"widget\" />\n        )}\n        {!queryResults && refreshStartedAt && (\n          <div className=\"d-flex justify-content-center\">\n            <div className=\"spinner\">\n              <i className=\"zmdi zmdi-refresh zmdi-hc-spin zmdi-hc-5x\" aria-hidden=\"true\" />\n              <span className=\"sr-only\">Refreshing...</span>\n            </div>\n          </div>\n        )}\n      </div>\n      <VisualizationEmbedFooter\n        query={query}\n        queryResults={queryResults}\n        updatedAt={queryResults ? queryResults.getUpdatedAt() : undefined}\n        refreshStartedAt={refreshStartedAt}\n        queryUrl={!hideQueryLink ? query.getUrl() : null}\n        hideTimestamp={hideTimestamp}\n        apiKey={apiKey}\n      />\n    </div>\n  );\n}\n\nVisualizationEmbed.propTypes = {\n  queryId: PropTypes.string.isRequired,\n  visualizationId: PropTypes.string,\n  apiKey: PropTypes.string.isRequired,\n  onError: PropTypes.func,\n};\n\nVisualizationEmbed.defaultProps = {\n  onError: () => {},\n};\n\nroutes.register(\n  \"Visualizations.ViewShared\",\n  routeWithApiKeySession({\n    path: \"/embed/query/:queryId/visualization/:visualizationId\",\n    render: pageProps => <VisualizationEmbed {...pageProps} />,\n    getApiKey: () => location.search.api_key,\n  })\n);\n","import { isNil, get } from \"lodash\";\nimport React, { useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"antd/lib/button\";\nimport Modal from \"antd/lib/modal\";\nimport DynamicForm from \"@/components/dynamic-form/DynamicForm\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport { useUniqueId } from \"@/lib/hooks/useUniqueId\";\n\nfunction QuerySnippetDialog({ querySnippet, dialog, readOnly }) {\n  const handleSubmit = useCallback(\n    (values, successCallback, errorCallback) => {\n      const querySnippetId = get(querySnippet, \"id\");\n\n      if (isNil(values.description)) {\n        values.description = \"\";\n      }\n\n      dialog\n        .close(querySnippetId ? { id: querySnippetId, ...values } : values)\n        .then(() => successCallback(\"Saved.\"))\n        .catch(() => errorCallback(\"Failed saving snippet.\"));\n    },\n    [dialog, querySnippet]\n  );\n\n  const isEditing = !!get(querySnippet, \"id\");\n\n  const formFields = [\n    { name: \"trigger\", title: \"Trigger\", type: \"text\", required: true, autoFocus: !isEditing },\n    { name: \"description\", title: \"Description\", type: \"text\" },\n    { name: \"snippet\", title: \"Snippet\", type: \"ace\", required: true },\n  ].map(field => ({ ...field, readOnly, initialValue: get(querySnippet, field.name, \"\") }));\n\n  const querySnippetsFormId = useUniqueId(\"querySnippetForm\");\n\n  return (\n    <Modal\n      {...dialog.props}\n      title={isEditing ? querySnippet.trigger : \"Create Query Snippet\"}\n      footer={[\n        <Button key=\"cancel\" {...dialog.props.cancelButtonProps} onClick={dialog.dismiss}>\n          {readOnly ? \"Close\" : \"Cancel\"}\n        </Button>,\n        !readOnly && (\n          <Button\n            key=\"submit\"\n            {...dialog.props.okButtonProps}\n            disabled={readOnly || dialog.props.okButtonProps.disabled}\n            htmlType=\"submit\"\n            type=\"primary\"\n            form={querySnippetsFormId}\n            data-test=\"SaveQuerySnippetButton\">\n            {isEditing ? \"Save\" : \"Create\"}\n          </Button>\n        ),\n      ]}\n      wrapProps={{\n        \"data-test\": \"QuerySnippetDialog\",\n      }}>\n      <DynamicForm\n        id={querySnippetsFormId}\n        fields={formFields}\n        onSubmit={handleSubmit}\n        hideSubmitButton\n        feedbackIcons\n      />\n    </Modal>\n  );\n}\n\nQuerySnippetDialog.propTypes = {\n  dialog: DialogPropType.isRequired,\n  querySnippet: PropTypes.object,\n  readOnly: PropTypes.bool,\n};\n\nQuerySnippetDialog.defaultProps = {\n  querySnippet: null,\n  readOnly: false,\n};\n\nexport default wrapDialog(QuerySnippetDialog);\n","import { get } from \"lodash\";\nimport React from \"react\";\n\nimport Button from \"antd/lib/button\";\nimport Modal from \"antd/lib/modal\";\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport navigateTo from \"@/components/ApplicationArea/navigateTo\";\nimport Paginator from \"@/components/Paginator\";\nimport QuerySnippetDialog from \"@/components/query-snippets/QuerySnippetDialog\";\n\nimport { wrap as itemsList, ControllerType } from \"@/components/items-list/ItemsList\";\nimport { ResourceItemsSource } from \"@/components/items-list/classes/ItemsSource\";\nimport { StateStorage } from \"@/components/items-list/classes/StateStorage\";\n\nimport LoadingState from \"@/components/items-list/components/LoadingState\";\nimport ItemsTable, { Columns } from \"@/components/items-list/components/ItemsTable\";\nimport wrapSettingsTab from \"@/components/SettingsWrapper\";\nimport PlainButton from \"@/components/PlainButton\";\n\nimport QuerySnippet from \"@/services/query-snippet\";\nimport { currentUser } from \"@/services/auth\";\nimport { policy } from \"@/services/policy\";\nimport notification from \"@/services/notification\";\nimport routes from \"@/services/routes\";\n\nimport \"./QuerySnippetsList.less\";\n\nconst canEditQuerySnippet = querySnippet => currentUser.isAdmin || currentUser.id === get(querySnippet, \"user.id\");\n\nclass QuerySnippetsList extends React.Component {\n  static propTypes = {\n    controller: ControllerType.isRequired,\n  };\n\n  listColumns = [\n    Columns.custom.sortable(\n      (text, querySnippet) => (\n        <PlainButton type=\"link\" className=\"table-main-title\" onClick={() => this.showSnippetDialog(querySnippet)}>\n          {querySnippet.trigger}\n        </PlainButton>\n      ),\n      {\n        title: \"Trigger\",\n        field: \"trigger\",\n        className: \"text-nowrap\",\n      }\n    ),\n    Columns.custom.sortable(text => text, {\n      title: \"Description\",\n      field: \"description\",\n      className: \"text-nowrap\",\n    }),\n    Columns.custom(snippet => <code className=\"snippet-content\">{snippet}</code>, {\n      title: \"Snippet\",\n      field: \"snippet\",\n    }),\n    Columns.avatar({ field: \"user\", className: \"p-l-0 p-r-0\" }, name => `Created by ${name}`),\n    Columns.date.sortable({\n      title: \"Created At\",\n      field: \"created_at\",\n      className: \"text-nowrap\",\n      width: \"1%\",\n    }),\n    Columns.custom(\n      (text, querySnippet) =>\n        canEditQuerySnippet(querySnippet) && (\n          <Button type=\"danger\" className=\"w-100\" onClick={e => this.deleteQuerySnippet(e, querySnippet)}>\n            Delete\n          </Button>\n        ),\n      {\n        width: \"1%\",\n      }\n    ),\n  ];\n\n  componentDidMount() {\n    const { isNewOrEditPage, querySnippetId } = this.props.controller.params;\n\n    if (isNewOrEditPage) {\n      if (querySnippetId === \"new\") {\n        if (policy.isCreateQuerySnippetEnabled()) {\n          this.showSnippetDialog();\n        } else {\n          navigateTo(\"query_snippets\", true);\n        }\n      } else {\n        QuerySnippet.get({ id: querySnippetId })\n          .then(this.showSnippetDialog)\n          .catch(error => {\n            this.props.controller.handleError(error);\n          });\n      }\n    }\n  }\n\n  saveQuerySnippet = querySnippet => {\n    const saveSnippet = querySnippet.id ? QuerySnippet.save : QuerySnippet.create;\n    return saveSnippet(querySnippet);\n  };\n\n  deleteQuerySnippet = (event, querySnippet) => {\n    Modal.confirm({\n      title: \"Delete Query Snippet\",\n      content: \"Are you sure you want to delete this query snippet?\",\n      okText: \"Yes\",\n      okType: \"danger\",\n      cancelText: \"No\",\n      onOk: () => {\n        QuerySnippet.delete(querySnippet)\n          .then(() => {\n            notification.success(\"Query snippet deleted successfully.\");\n            this.props.controller.update();\n          })\n          .catch(() => {\n            notification.error(\"Failed deleting query snippet.\");\n          });\n      },\n    });\n  };\n\n  showSnippetDialog = (querySnippet = null) => {\n    const canSave = !querySnippet || canEditQuerySnippet(querySnippet);\n    navigateTo(\"query_snippets/\" + get(querySnippet, \"id\", \"new\"), true);\n    const goToSnippetsList = () => navigateTo(\"query_snippets\", true);\n    QuerySnippetDialog.showModal({\n      querySnippet,\n      readOnly: !canSave,\n    })\n      .onClose(querySnippet =>\n        this.saveQuerySnippet(querySnippet).then(() => {\n          this.props.controller.update();\n          goToSnippetsList();\n        })\n      )\n      .onDismiss(goToSnippetsList);\n  };\n\n  render() {\n    const { controller } = this.props;\n\n    return (\n      <div>\n        <div className=\"m-b-15\">\n          <Button\n            type=\"primary\"\n            onClick={() => this.showSnippetDialog()}\n            disabled={!policy.isCreateQuerySnippetEnabled()}>\n            <i className=\"fa fa-plus m-r-5\" aria-hidden=\"true\" />\n            New Query Snippet\n          </Button>\n        </div>\n\n        {!controller.isLoaded && <LoadingState className=\"\" />}\n        {controller.isLoaded && controller.isEmpty && (\n          <div className=\"text-center\">\n            There are no query snippets yet.\n            {policy.isCreateQuerySnippetEnabled() && (\n              <div className=\"m-t-5\">\n                <PlainButton type=\"link\" onClick={() => this.showSnippetDialog()}>\n                  Click here\n                </PlainButton>{\" \"}\n                to add one.\n              </div>\n            )}\n          </div>\n        )}\n        {controller.isLoaded && !controller.isEmpty && (\n          <div className=\"table-responsive query-snippets-table\">\n            <ItemsTable\n              items={controller.pageItems}\n              columns={this.listColumns}\n              context={this.actions}\n              orderByField={controller.orderByField}\n              orderByReverse={controller.orderByReverse}\n              toggleSorting={controller.toggleSorting}\n            />\n            <Paginator\n              showPageSizeSelect\n              totalCount={controller.totalItemsCount}\n              pageSize={controller.itemsPerPage}\n              onPageSizeChange={itemsPerPage => controller.updatePagination({ itemsPerPage })}\n              page={controller.page}\n              onChange={page => controller.updatePagination({ page })}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst QuerySnippetsListPage = wrapSettingsTab(\n  \"QuerySnippets.List\",\n  {\n    permission: \"create_query\",\n    title: \"Query Snippets\",\n    path: \"query_snippets\",\n    order: 5,\n  },\n  itemsList(\n    QuerySnippetsList,\n    () =>\n      new ResourceItemsSource({\n        isPlainList: true,\n        getRequest() {\n          return {};\n        },\n        getResource() {\n          return QuerySnippet.query.bind(QuerySnippet);\n        },\n      }),\n    () => new StateStorage({ orderByField: \"trigger\", itemsPerPage: 10 })\n  )\n);\n\nroutes.register(\n  \"QuerySnippets.List\",\n  routeWithUserSession({\n    path: \"/query_snippets\",\n    title: \"Query Snippets\",\n    render: pageProps => <QuerySnippetsListPage {...pageProps} currentPage=\"query_snippets\" />,\n  })\n);\nroutes.register(\n  \"QuerySnippets.NewOrEdit\",\n  routeWithUserSession({\n    path: \"/query_snippets/:querySnippetId\",\n    title: \"Query Snippets\",\n    render: pageProps => <QuerySnippetsListPage {...pageProps} currentPage=\"query_snippets\" isNewOrEditPage />,\n  })\n);\n","import { axios } from \"@/services/axios\";\nimport notification from \"@/services/notification\";\n\nexport default {\n  get: () => axios.get(\"api/settings/organization\"),\n  save: (data, message = \"Settings changes saved.\") =>\n    axios\n      .post(\"api/settings/organization\", data)\n      .then(data => {\n        notification.success(message);\n        return data;\n      })\n      .catch(() => {\n        notification.error(\"Failed saving changes.\");\n      }),\n};\n","import { get } from \"lodash\";\nimport { useState, useEffect, useCallback } from \"react\";\nimport recordEvent from \"@/services/recordEvent\";\nimport OrgSettings from \"@/services/organizationSettings\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\nimport { updateClientConfig } from \"@/services/auth\";\n\nexport default function useOrganizationSettings({ onError }) {\n  const [settings, setSettings] = useState({});\n  const [currentValues, setCurrentValues] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSaving, setIsSaving] = useState(false);\n\n  const handleError = useImmutableCallback(onError);\n\n  useEffect(() => {\n    recordEvent(\"view\", \"page\", \"org_settings\");\n\n    let isCancelled = false;\n\n    OrgSettings.get()\n      .then(response => {\n        if (!isCancelled) {\n          const settings = get(response, \"settings\");\n          setSettings(settings);\n          setCurrentValues({ ...settings });\n          setIsLoading(false);\n        }\n      })\n      .catch(error => {\n        if (!isCancelled) {\n          handleError(error);\n        }\n      });\n\n    return () => {\n      isCancelled = true;\n    };\n  }, [handleError]);\n\n  const handleChange = useCallback(changes => {\n    setCurrentValues(currentValues => ({ ...currentValues, ...changes }));\n  }, []);\n\n  const handleSubmit = useCallback(() => {\n    if (!isSaving) {\n      setIsSaving(true);\n      OrgSettings.save(currentValues)\n        .then(response => {\n          const settings = get(response, \"settings\");\n          setSettings(settings);\n          setCurrentValues({ ...settings });\n          updateClientConfig({\n            dateFormat: currentValues.date_format,\n            timeFormat: currentValues.time_format,\n            dateTimeFormat: `${currentValues.date_format} ${currentValues.time_format}`,\n          });\n        })\n        .catch(handleError)\n        .finally(() => setIsSaving(false));\n    }\n  }, [isSaving, currentValues, handleError]);\n\n  return { settings, currentValues, isLoading, isSaving, handleSubmit, handleChange };\n}\n","import PropTypes from \"prop-types\";\n\nexport const SettingsEditorPropTypes = {\n  settings: PropTypes.object,\n  values: PropTypes.object,\n  onChange: PropTypes.func, // (key, value) => void\n  loading: PropTypes.bool,\n};\n\nexport const SettingsEditorDefaultProps = {\n  settings: {},\n  values: {},\n  onChange: () => {},\n  loading: false,\n};\n","import React from \"react\";\nimport { SettingsEditorPropTypes, SettingsEditorDefaultProps } from \"../prop-types\";\nimport Form from \"antd/lib/form\";\nimport Select from \"antd/lib/select\";\nimport Skeleton from \"antd/lib/skeleton\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { clientConfig } from \"@/services/auth\";\n\nexport default function FormatSettings(props) {\n  const { values, onChange, loading } = props;\n\n  return (\n    <DynamicComponent name=\"OrganizationSettings.FormatSettings\" {...props}>\n      <Form.Item label=\"Date Format\">\n        {loading ? (\n          <Skeleton.Input style={{ width: 300 }} active />\n        ) : (\n          <Select\n            value={values.date_format}\n            onChange={value => onChange({ date_format: value })}\n            data-test=\"DateFormatSelect\">\n            {clientConfig.dateFormatList.map(dateFormat => (\n              <Select.Option key={dateFormat} data-test={`DateFormatSelect:${dateFormat}`}>\n                {dateFormat}\n              </Select.Option>\n            ))}\n          </Select>\n        )}\n      </Form.Item>\n      <Form.Item label=\"Time Format\">\n        {loading ? (\n          <Skeleton.Input style={{ width: 300 }} active />\n        ) : (\n          <Select\n            value={values.time_format}\n            onChange={value => onChange({ time_format: value })}\n            data-test=\"TimeFormatSelect\">\n            {clientConfig.timeFormatList.map(timeFormat => (\n              <Select.Option key={timeFormat}>{timeFormat}</Select.Option>\n            ))}\n          </Select>\n        )}\n      </Form.Item>\n    </DynamicComponent>\n  );\n}\n\nFormatSettings.propTypes = SettingsEditorPropTypes;\n\nFormatSettings.defaultProps = SettingsEditorDefaultProps;\n","import React from \"react\";\nimport Checkbox from \"antd/lib/checkbox\";\nimport Form from \"antd/lib/form\";\nimport Skeleton from \"antd/lib/skeleton\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { SettingsEditorPropTypes, SettingsEditorDefaultProps } from \"../prop-types\";\n\nexport default function PlotlySettings(props) {\n  const { values, onChange, loading } = props;\n\n  return (\n    <DynamicComponent name=\"OrganizationSettings.PlotlySettings\" {...props}>\n      <Form.Item label=\"Chart Visualization\">\n        {loading ? (\n          <Skeleton title={{ width: 300 }} paragraph={false} active />\n        ) : (\n          <Checkbox\n            name=\"hide_plotly_mode_bar\"\n            checked={values.hide_plotly_mode_bar}\n            onChange={e => onChange({ hide_plotly_mode_bar: e.target.checked })}>\n            Hide Plotly mode bar\n          </Checkbox>\n        )}\n      </Form.Item>\n    </DynamicComponent>\n  );\n}\n\nPlotlySettings.propTypes = SettingsEditorPropTypes;\n\nPlotlySettings.defaultProps = SettingsEditorDefaultProps;\n","import React from \"react\";\nimport Checkbox from \"antd/lib/checkbox\";\nimport Form from \"antd/lib/form\";\nimport Row from \"antd/lib/row\";\nimport Skeleton from \"antd/lib/skeleton\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { SettingsEditorPropTypes, SettingsEditorDefaultProps } from \"../prop-types\";\n\nexport default function FeatureFlagsSettings(props) {\n  const { values, onChange, loading } = props;\n\n  return (\n    <DynamicComponent name=\"OrganizationSettings.FeatureFlagsSettings\" {...props}>\n      <Form.Item label=\"Feature Flags\">\n        {loading ? (\n          <>\n            <Row>\n              <Skeleton title={false} paragraph={{ width: [300, 300, 300], rows: 3 }} active />\n            </Row>\n          </>\n        ) : (\n          <>\n            <DynamicComponent name=\"OrganizationSettings.FeatureFlagsSettings.PermissionsControl\" {...props}>\n              <Row>\n                <Checkbox\n                  name=\"feature_show_permissions_control\"\n                  checked={values.feature_show_permissions_control}\n                  onChange={e => onChange({ feature_show_permissions_control: e.target.checked })}>\n                  Enable experimental multiple owners support\n                </Checkbox>\n              </Row>\n            </DynamicComponent>\n            <Row>\n              <Checkbox\n                name=\"send_email_on_failed_scheduled_queries\"\n                checked={values.send_email_on_failed_scheduled_queries}\n                onChange={e => onChange({ send_email_on_failed_scheduled_queries: e.target.checked })}>\n                Email query owners when scheduled queries fail\n              </Checkbox>\n            </Row>\n            <Row>\n              <Checkbox\n                name=\"multi_byte_search_enabled\"\n                checked={values.multi_byte_search_enabled}\n                onChange={e => onChange({ multi_byte_search_enabled: e.target.checked })}>\n                Enable multi-byte (Chinese, Japanese, and Korean) search for query names and descriptions (slower)\n              </Checkbox>\n            </Row>\n          </>\n        )}\n      </Form.Item>\n    </DynamicComponent>\n  );\n}\n\nFeatureFlagsSettings.propTypes = SettingsEditorPropTypes;\n\nFeatureFlagsSettings.defaultProps = SettingsEditorDefaultProps;\n","import React from \"react\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\n\nimport FormatSettings from \"./FormatSettings\";\nimport PlotlySettings from \"./PlotlySettings\";\nimport FeatureFlagsSettings from \"./FeatureFlagsSettings\";\n\nexport default function GeneralSettings(props) {\n  return (\n    <DynamicComponent name=\"OrganizationSettings.GeneralSettings\" {...props}>\n      <h3 className=\"m-t-0\">General</h3>\n      <hr />\n      <FormatSettings {...props} />\n      <PlotlySettings {...props} />\n      <FeatureFlagsSettings {...props} />\n    </DynamicComponent>\n  );\n}\n","import React from \"react\";\nimport Alert from \"antd/lib/alert\";\nimport Form from \"antd/lib/form\";\nimport Checkbox from \"antd/lib/checkbox\";\nimport Tooltip from \"@/components/Tooltip\";\nimport Skeleton from \"antd/lib/skeleton\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { clientConfig } from \"@/services/auth\";\nimport { SettingsEditorPropTypes, SettingsEditorDefaultProps } from \"../prop-types\";\n\nexport default function PasswordLoginSettings(props) {\n  const { settings, values, onChange, loading } = props;\n\n  const isTheOnlyAuthMethod =\n    !clientConfig.googleLoginEnabled && !clientConfig.ldapLoginEnabled && !values.auth_saml_enabled;\n\n  return (\n    <DynamicComponent name=\"OrganizationSettings.PasswordLoginSettings\" {...props}>\n      {!loading && !settings.auth_password_login_enabled && (\n        <Alert\n          message=\"Password based login is currently disabled and users will\n            be able to login only with the enabled SSO options.\"\n          type=\"warning\"\n          className=\"m-t-15 m-b-15\"\n        />\n      )}\n      <Form.Item label=\"Password Login\">\n        {loading ? (\n          <Skeleton title={{ width: 300 }} paragraph={false} active />\n        ) : (\n          <Checkbox\n            checked={values.auth_password_login_enabled}\n            disabled={isTheOnlyAuthMethod}\n            onChange={e => onChange({ auth_password_login_enabled: e.target.checked })}>\n            <Tooltip\n              title={\n                isTheOnlyAuthMethod ? \"Password login can be disabled only if another login method is enabled.\" : null\n              }\n              placement=\"right\">\n              Password Login Enabled\n            </Tooltip>\n          </Checkbox>\n        )}\n      </Form.Item>\n    </DynamicComponent>\n  );\n}\n\nPasswordLoginSettings.propTypes = SettingsEditorPropTypes;\n\nPasswordLoginSettings.defaultProps = SettingsEditorDefaultProps;\n","import { isEmpty, join } from \"lodash\";\nimport React from \"react\";\nimport Form from \"antd/lib/form\";\nimport Select from \"antd/lib/select\";\nimport Alert from \"antd/lib/alert\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { clientConfig } from \"@/services/auth\";\nimport { SettingsEditorPropTypes, SettingsEditorDefaultProps } from \"../prop-types\";\n\nexport default function GoogleLoginSettings(props) {\n  const { values, onChange } = props;\n\n  if (!clientConfig.googleLoginEnabled) {\n    return null;\n  }\n\n  return (\n    <DynamicComponent name=\"OrganizationSettings.GoogleLoginSettings\" {...props}>\n      <h4>Google Login</h4>\n      <Form.Item label=\"Allowed Google Apps Domains\">\n        <Select\n          mode=\"tags\"\n          value={values.auth_google_apps_domains}\n          onChange={value => onChange({ auth_google_apps_domains: value })}\n        />\n        {!isEmpty(values.auth_google_apps_domains) && (\n          <Alert\n            message={\n              <p>\n                Any user registered with a <strong>{join(values.auth_google_apps_domains, \", \")}</strong> Google Apps\n                account will be able to login. If they don't have an existing user, a new user will be created and join\n                the <strong>Default</strong> group.\n              </p>\n            }\n            className=\"m-t-15\"\n          />\n        )}\n      </Form.Item>\n    </DynamicComponent>\n  );\n}\n\nGoogleLoginSettings.propTypes = SettingsEditorPropTypes;\n\nGoogleLoginSettings.defaultProps = SettingsEditorDefaultProps;\n","import React from \"react\";\nimport Form from \"antd/lib/form\";\nimport Input from \"antd/lib/input\";\nimport Skeleton from \"antd/lib/skeleton\";\nimport Radio from \"antd/lib/radio\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { SettingsEditorPropTypes, SettingsEditorDefaultProps } from \"../prop-types\";\n\nexport default function SAMLSettings(props) {\n  const { values, onChange, loading } = props;\n\n  const onChangeEnabledStatus = e => {\n    const updates = { auth_saml_enabled: !!e.target.value };\n    if (e.target.value) {\n      updates.auth_saml_type = e.target.value;\n    }\n    onChange(updates);\n  };\n\n  return (\n    <DynamicComponent name=\"OrganizationSettings.SAMLSettings\" {...props}>\n      <h4>SAML</h4>\n      <Form.Item label=\"SAML Enabled\">\n        {loading ? (\n          <Skeleton title={{ width: 300 }} paragraph={false} active />\n        ) : (\n          <Radio.Group\n            onChange={onChangeEnabledStatus}\n            value={values.auth_saml_enabled && (values.auth_saml_type || \"dynamic\")}>\n            <Radio value={false}>Disabled</Radio>\n            <Radio value={\"static\"}>Enabled (Static)</Radio>\n            <Radio value={\"dynamic\"}>Enabled (Dynamic)</Radio>\n          </Radio.Group>\n        )}\n      </Form.Item>\n      {values.auth_saml_enabled && (\n        <>\n          {values.auth_saml_type === \"static\" && (\n            <>\n              <Form.Item label=\"SAML Single Sign-on URL\">\n                <Input\n                  value={values.auth_saml_sso_url}\n                  onChange={e => onChange({ auth_saml_sso_url: e.target.value })}\n                />\n              </Form.Item>\n              <Form.Item label=\"SAML Entity ID\">\n                <Input\n                  value={values.auth_saml_entity_id}\n                  onChange={e => onChange({ auth_saml_entity_id: e.target.value })}\n                />\n              </Form.Item>\n              <Form.Item label=\"SAML x509 cert\">\n                <Input\n                  value={values.auth_saml_x509_cert}\n                  onChange={e => onChange({ auth_saml_x509_cert: e.target.value })}\n                />\n              </Form.Item>\n            </>\n          )}\n          {values.auth_saml_type === \"dynamic\" && (\n            <>\n              <Form.Item label=\"SAML Metadata URL\">\n                <Input\n                  value={values.auth_saml_metadata_url}\n                  onChange={e => onChange({ auth_saml_metadata_url: e.target.value })}\n                />\n              </Form.Item>\n              <Form.Item label=\"SAML Entity ID\">\n                <Input\n                  value={values.auth_saml_entity_id}\n                  onChange={e => onChange({ auth_saml_entity_id: e.target.value })}\n                />\n              </Form.Item>\n              <Form.Item label=\"SAML NameID Format\">\n                <Input\n                  value={values.auth_saml_nameid_format}\n                  onChange={e => onChange({ auth_saml_nameid_format: e.target.value })}\n                />\n              </Form.Item>\n            </>\n          )}\n        </>\n      )}\n    </DynamicComponent>\n  );\n}\n\nSAMLSettings.propTypes = SettingsEditorPropTypes;\n\nSAMLSettings.defaultProps = SettingsEditorDefaultProps;\n","import React, { useCallback } from \"react\";\nimport HelpTrigger from \"@/components/HelpTrigger\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { clientConfig } from \"@/services/auth\";\nimport { SettingsEditorPropTypes, SettingsEditorDefaultProps } from \"../prop-types\";\n\nimport PasswordLoginSettings from \"./PasswordLoginSettings\";\nimport GoogleLoginSettings from \"./GoogleLoginSettings\";\nimport SAMLSettings from \"./SAMLSettings\";\n\nexport default function AuthSettings(props) {\n  const { values, onChange } = props;\n  const handleChange = useCallback(\n    changes => {\n      const allSettings = { ...values, ...changes };\n      const allAuthMethodsDisabled =\n        !clientConfig.googleLoginEnabled && !clientConfig.ldapLoginEnabled && !allSettings.auth_saml_enabled;\n      if (allAuthMethodsDisabled) {\n        changes = { ...changes, auth_password_login_enabled: true };\n      }\n      onChange(changes);\n    },\n    [values, onChange]\n  );\n\n  return (\n    <DynamicComponent name=\"OrganizationSettings.AuthSettings\" {...props}>\n      <h3 className=\"m-t-0\">\n        Authentication <HelpTrigger type=\"AUTHENTICATION_OPTIONS\" />\n      </h3>\n      <hr />\n      <PasswordLoginSettings {...props} onChange={handleChange} />\n      <GoogleLoginSettings {...props} onChange={handleChange} />\n      <SAMLSettings {...props} onChange={handleChange} />\n    </DynamicComponent>\n  );\n}\n\nAuthSettings.propTypes = SettingsEditorPropTypes;\nAuthSettings.defaultProps = SettingsEditorDefaultProps;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Button from \"antd/lib/button\";\nimport Form from \"antd/lib/form\";\nimport Skeleton from \"antd/lib/skeleton\";\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport wrapSettingsTab from \"@/components/SettingsWrapper\";\n\nimport routes from \"@/services/routes\";\nimport { getHorizontalFormProps, getHorizontalFormItemWithoutLabelProps } from \"@/styles/formStyle\";\n\nimport useOrganizationSettings from \"./hooks/useOrganizationSettings\";\nimport GeneralSettings from \"./components/GeneralSettings\";\nimport AuthSettings from \"./components/AuthSettings\";\n\nfunction OrganizationSettings({ onError }) {\n  const { settings, currentValues, isLoading, isSaving, handleSubmit, handleChange } = useOrganizationSettings(onError);\n  return (\n    <div className=\"row\" data-test=\"OrganizationSettings\">\n      <div className=\"m-r-20 m-l-20\">\n        <Form {...getHorizontalFormProps()} onFinish={handleSubmit}>\n          <GeneralSettings loading={isLoading} settings={settings} values={currentValues} onChange={handleChange} />\n          <AuthSettings loading={isLoading} settings={settings} values={currentValues} onChange={handleChange} />\n          <Form.Item {...getHorizontalFormItemWithoutLabelProps()}>\n            {isLoading ? (\n              <Skeleton.Button active />\n            ) : (\n              <Button type=\"primary\" htmlType=\"submit\" loading={isSaving} data-test=\"OrganizationSettingsSaveButton\">\n                Save\n              </Button>\n            )}\n          </Form.Item>\n        </Form>\n      </div>\n    </div>\n  );\n}\n\nOrganizationSettings.propTypes = {\n  onError: PropTypes.func,\n};\n\nOrganizationSettings.defaultProps = {\n  onError: () => {},\n};\n\nconst OrganizationSettingsPage = wrapSettingsTab(\n  \"Settings.Organization\",\n  {\n    permission: \"admin\",\n    title: \"General\",\n    path: \"settings/general\",\n    order: 6,\n  },\n  OrganizationSettings\n);\n\nroutes.register(\n  \"Settings.Organization\",\n  routeWithUserSession({\n    path: \"/settings/general\",\n    title: \"General Settings\",\n    render: pageProps => <OrganizationSettingsPage {...pageProps} />,\n  })\n);\n","import { FormProps } from \"antd/lib/form/Form\";\nimport { FormItemProps } from \"antd/lib/form/FormItem\";\nimport \"./formStyle.less\";\n\nexport function getHorizontalFormProps(): FormProps {\n  return {\n    labelCol: { xs: { span: 24 }, sm: { span: 6 }, lg: { span: 4 } },\n    wrapperCol: { xs: { span: 24 }, sm: { span: 12 }, lg: { span: 10 } },\n    layout: \"horizontal\",\n    className: \"ant-form-horizontal--labels-left\",\n  };\n}\n\nexport function getHorizontalFormItemWithoutLabelProps(): FormItemProps {\n  return {\n    wrapperCol: { xs: { span: 24 }, sm: { span: 12, offset: 6 }, lg: { span: 12, offset: 4 } },\n  };\n}\n","// eslint-disable-next-line import/prefer-default-export\nexport function absoluteUrl(url) {\n  const urlObj = new URL(url, window.location);\n  urlObj.protocol = window.location.protocol;\n  urlObj.host = window.location.host;\n  return urlObj.toString();\n}\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport Button from \"antd/lib/button\";\nimport Modal from \"antd/lib/modal\";\nimport Alert from \"antd/lib/alert\";\nimport DynamicForm from \"@/components/dynamic-form/DynamicForm\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport recordEvent from \"@/services/recordEvent\";\nimport { useUniqueId } from \"@/lib/hooks/useUniqueId\";\n\nconst formFields = [\n  { required: true, name: \"name\", title: \"Name\", type: \"text\", autoFocus: true },\n  { required: true, name: \"email\", title: \"Email\", type: \"email\" },\n];\n\nfunction CreateUserDialog({ dialog }) {\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    recordEvent(\"view\", \"page\", \"users/new\");\n  }, []);\n\n  const handleSubmit = useCallback(values => dialog.close(values).catch(setError), [dialog]);\n  const formId = useUniqueId(\"userForm\");\n\n  return (\n    <Modal\n      {...dialog.props}\n      title=\"Create a New User\"\n      footer={[\n        <Button key=\"cancel\" {...dialog.props.cancelButtonProps} onClick={dialog.dismiss}>\n          Cancel\n        </Button>,\n        <Button\n          key=\"submit\"\n          {...dialog.props.okButtonProps}\n          htmlType=\"submit\"\n          type=\"primary\"\n          form={formId}\n          data-test=\"SaveUserButton\">\n          Create\n        </Button>,\n      ]}\n      wrapProps={{\n        \"data-test\": \"CreateUserDialog\",\n      }}>\n      <DynamicForm id={formId} fields={formFields} onSubmit={handleSubmit} hideSubmitButton />\n      {error && <Alert message={error.message} type=\"error\" showIcon data-test=\"CreateUserErrorAlert\" />}\n    </Modal>\n  );\n}\n\nCreateUserDialog.propTypes = {\n  dialog: DialogPropType.isRequired,\n};\n\nexport default wrapDialog(CreateUserDialog);\n","import { isString, map, get, find } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Button from \"antd/lib/button\";\nimport Modal from \"antd/lib/modal\";\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport Link from \"@/components/Link\";\nimport Paginator from \"@/components/Paginator\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { UserPreviewCard } from \"@/components/PreviewCard\";\nimport InputWithCopy from \"@/components/InputWithCopy\";\n\nimport { wrap as itemsList, ControllerType } from \"@/components/items-list/ItemsList\";\nimport { ResourceItemsSource } from \"@/components/items-list/classes/ItemsSource\";\nimport { UrlStateStorage } from \"@/components/items-list/classes/StateStorage\";\n\nimport LoadingState from \"@/components/items-list/components/LoadingState\";\nimport EmptyState from \"@/components/items-list/components/EmptyState\";\nimport * as Sidebar from \"@/components/items-list/components/Sidebar\";\nimport ItemsTable, { Columns } from \"@/components/items-list/components/ItemsTable\";\n\nimport Layout from \"@/components/layouts/ContentWithSidebar\";\nimport wrapSettingsTab from \"@/components/SettingsWrapper\";\n\nimport { currentUser } from \"@/services/auth\";\nimport { policy } from \"@/services/policy\";\nimport User from \"@/services/user\";\nimport navigateTo from \"@/components/ApplicationArea/navigateTo\";\nimport notification from \"@/services/notification\";\nimport { absoluteUrl } from \"@/services/utils\";\nimport routes from \"@/services/routes\";\n\nimport CreateUserDialog from \"./components/CreateUserDialog\";\n\nfunction UsersListActions({ user, enableUser, disableUser, deleteUser }) {\n  if (user.id === currentUser.id) {\n    return null;\n  }\n  if (user.is_invitation_pending) {\n    return (\n      <Button type=\"danger\" className=\"w-100\" onClick={event => deleteUser(event, user)}>\n        Delete\n      </Button>\n    );\n  }\n  return user.is_disabled ? (\n    <Button type=\"primary\" className=\"w-100\" onClick={event => enableUser(event, user)}>\n      Enable\n    </Button>\n  ) : (\n    <Button className=\"w-100\" onClick={event => disableUser(event, user)}>\n      Disable\n    </Button>\n  );\n}\n\nUsersListActions.propTypes = {\n  user: PropTypes.shape({\n    id: PropTypes.number,\n    is_invitation_pending: PropTypes.bool,\n    is_disabled: PropTypes.bool,\n  }).isRequired,\n  enableUser: PropTypes.func.isRequired,\n  disableUser: PropTypes.func.isRequired,\n  deleteUser: PropTypes.func.isRequired,\n};\n\nclass UsersList extends React.Component {\n  static propTypes = {\n    controller: ControllerType.isRequired,\n  };\n\n  sidebarMenu = [\n    {\n      key: \"active\",\n      href: \"users\",\n      title: \"Active Users\",\n    },\n    {\n      key: \"pending\",\n      href: \"users/pending\",\n      title: \"Pending Invitations\",\n    },\n    {\n      key: \"disabled\",\n      href: \"users/disabled\",\n      title: \"Disabled Users\",\n      isAvailable: () => policy.canCreateUser(),\n    },\n  ];\n\n  listColumns = [\n    Columns.custom.sortable((text, user) => <UserPreviewCard user={user} withLink />, {\n      title: \"Name\",\n      field: \"name\",\n      width: null,\n    }),\n    Columns.custom.sortable(\n      (text, user) =>\n        map(user.groups, group => (\n          <Link key={\"group\" + group.id} className=\"label label-tag\" href={\"groups/\" + group.id}>\n            {group.name}\n          </Link>\n        )),\n      {\n        title: \"Groups\",\n        field: \"groups\",\n      }\n    ),\n    Columns.timeAgo.sortable({\n      title: \"Joined\",\n      field: \"created_at\",\n      className: \"text-nowrap\",\n      width: \"1%\",\n    }),\n    Columns.timeAgo.sortable({\n      title: \"Last Active At\",\n      field: \"active_at\",\n      className: \"text-nowrap\",\n      width: \"1%\",\n    }),\n    Columns.custom(\n      (text, user) => (\n        <UsersListActions\n          user={user}\n          enableUser={this.enableUser}\n          disableUser={this.disableUser}\n          deleteUser={this.deleteUser}\n        />\n      ),\n      {\n        width: \"1%\",\n        isAvailable: () => policy.canCreateUser(),\n      }\n    ),\n  ];\n\n  componentDidMount() {\n    if (this.props.controller.params.isNewUserPage) {\n      this.showCreateUserDialog();\n    }\n  }\n\n  createUser = values =>\n    User.create(values)\n      .then(user => {\n        notification.success(\"Saved.\");\n        if (user.invite_link) {\n          Modal.warning({\n            title: \"Email not sent!\",\n            content: (\n              <React.Fragment>\n                <p>\n                  The mail server is not configured, please send the following link to <b>{user.name}</b>:\n                </p>\n                <InputWithCopy value={absoluteUrl(user.invite_link)} aria-label=\"Invite link\" readOnly />\n              </React.Fragment>\n            ),\n          });\n        }\n      })\n      .catch(error => {\n        const message = find([get(error, \"response.data.message\"), get(error, \"message\"), \"Failed saving.\"], isString);\n        return Promise.reject(new Error(message));\n      });\n\n  showCreateUserDialog = () => {\n    if (policy.isCreateUserEnabled()) {\n      const goToUsersList = () => {\n        if (this.props.controller.params.isNewUserPage) {\n          navigateTo(\"users\");\n        }\n      };\n      CreateUserDialog.showModal()\n        .onClose(values =>\n          this.createUser(values).then(() => {\n            this.props.controller.update();\n            goToUsersList();\n          })\n        )\n        .onDismiss(goToUsersList);\n    }\n  };\n\n  enableUser = (event, user) => User.enableUser(user).then(() => this.props.controller.update());\n\n  disableUser = (event, user) => User.disableUser(user).then(() => this.props.controller.update());\n\n  deleteUser = (event, user) => User.deleteUser(user).then(() => this.props.controller.update());\n\n  // eslint-disable-next-line class-methods-use-this\n  renderPageHeader() {\n    if (!policy.canCreateUser()) {\n      return null;\n    }\n    return (\n      <div className=\"m-b-15\">\n        <Button type=\"primary\" disabled={!policy.isCreateUserEnabled()} onClick={this.showCreateUserDialog}>\n          <i className=\"fa fa-plus m-r-5\" aria-hidden=\"true\" />\n          New User\n        </Button>\n        <DynamicComponent name=\"UsersListExtra\" />\n      </div>\n    );\n  }\n\n  render() {\n    const { controller } = this.props;\n    return (\n      <React.Fragment>\n        {this.renderPageHeader()}\n        <Layout>\n          <Layout.Sidebar className=\"m-b-0\">\n            <Sidebar.SearchInput\n              value={controller.searchTerm}\n              onChange={controller.updateSearch}\n              label=\"Search users\"\n            />\n            <Sidebar.Menu items={this.sidebarMenu} selected={controller.params.currentPage} />\n          </Layout.Sidebar>\n          <Layout.Content>\n            {!controller.isLoaded && <LoadingState className=\"\" />}\n            {controller.isLoaded && controller.isEmpty && <EmptyState className=\"\" />}\n            {controller.isLoaded && !controller.isEmpty && (\n              <div className=\"table-responsive\" data-test=\"UserList\">\n                <ItemsTable\n                  items={controller.pageItems}\n                  columns={this.listColumns}\n                  context={this.actions}\n                  orderByField={controller.orderByField}\n                  orderByReverse={controller.orderByReverse}\n                  toggleSorting={controller.toggleSorting}\n                />\n                <Paginator\n                  showPageSizeSelect\n                  totalCount={controller.totalItemsCount}\n                  pageSize={controller.itemsPerPage}\n                  onPageSizeChange={itemsPerPage => controller.updatePagination({ itemsPerPage })}\n                  page={controller.page}\n                  onChange={page => controller.updatePagination({ page })}\n                />\n              </div>\n            )}\n          </Layout.Content>\n        </Layout>\n      </React.Fragment>\n    );\n  }\n}\n\nconst UsersListPage = wrapSettingsTab(\n  \"Users.List\",\n  {\n    permission: \"list_users\",\n    title: \"Users\",\n    path: \"users\",\n    isActive: path => path.startsWith(\"/users\") && path !== \"/users/me\",\n    order: 2,\n  },\n  itemsList(\n    UsersList,\n    () =>\n      new ResourceItemsSource({\n        getRequest(request, { params: { currentPage } }) {\n          switch (currentPage) {\n            case \"active\":\n              request.pending = false;\n              break;\n            case \"pending\":\n              request.pending = true;\n              break;\n            case \"disabled\":\n              request.disabled = true;\n              break;\n            // no default\n          }\n          return request;\n        },\n        getResource() {\n          return User.query.bind(User);\n        },\n      }),\n    () => new UrlStateStorage({ orderByField: \"created_at\", orderByReverse: true })\n  )\n);\n\nroutes.register(\n  \"Users.New\",\n  routeWithUserSession({\n    path: \"/users/new\",\n    title: \"Users\",\n    render: pageProps => <UsersListPage {...pageProps} currentPage=\"active\" isNewUserPage />,\n  })\n);\nroutes.register(\n  \"Users.List\",\n  routeWithUserSession({\n    path: \"/users\",\n    title: \"Users\",\n    render: pageProps => <UsersListPage {...pageProps} currentPage=\"active\" />,\n  })\n);\nroutes.register(\n  \"Users.Pending\",\n  routeWithUserSession({\n    path: \"/users/pending\",\n    title: \"Pending Invitations\",\n    render: pageProps => <UsersListPage {...pageProps} currentPage=\"pending\" />,\n  })\n);\nroutes.register(\n  \"Users.Disabled\",\n  routeWithUserSession({\n    path: \"/users/disabled\",\n    title: \"Disabled Users\",\n    render: pageProps => <UsersListPage {...pageProps} currentPage=\"disabled\" />,\n  })\n);\n","import { map } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Tag from \"antd/lib/tag\";\nimport Link from \"@/components/Link\";\n\nimport \"./UserGroups.less\";\n\nexport default function UserGroups({ groups, linkGroups, ...props }) {\n  return (\n    <div className=\"user-groups\" {...props}>\n      {map(groups, group => (\n        <Tag key={group.id}>{linkGroups ? <Link href={`groups/${group.id}`}>{group.name}</Link> : group.name}</Tag>\n      ))}\n    </div>\n  );\n}\n\nUserGroups.propTypes = {\n  groups: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n      name: PropTypes.string,\n    })\n  ),\n  linkGroups: PropTypes.bool,\n};\n\nUserGroups.defaultProps = {\n  groups: [],\n  linkGroups: true,\n};\n","import { filter, includes, isArray } from \"lodash\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport Group from \"@/services/group\";\n\nexport default function useUserGroups(user) {\n  const [allGroups, setAllGroups] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const groups = useMemo(() => filter(allGroups, group => includes(user.groupIds, group.id)), [allGroups, user]);\n\n  useEffect(() => {\n    let isCancelled = false;\n\n    Group.query().then(groups => {\n      if (!isCancelled) {\n        setAllGroups(isArray(groups) ? groups : []);\n        setIsLoading(false);\n      }\n    });\n  }, []);\n\n  return useMemo(() => ({ groups, allGroups, isLoading }), [groups, allGroups, isLoading]);\n}\n","import { get, map } from \"lodash\";\nimport React, { useMemo, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { UserProfile } from \"@/components/proptypes\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport DynamicForm from \"@/components/dynamic-form/DynamicForm\";\nimport UserGroups from \"@/components/UserGroups\";\n\nimport User from \"@/services/user\";\nimport { currentUser } from \"@/services/auth\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\n\nimport useUserGroups from \"../hooks/useUserGroups\";\n\nexport default function UserInfoForm(props) {\n  const { user, onChange } = props;\n\n  const { groups, allGroups, isLoading: isLoadingGroups } = useUserGroups(user);\n\n  const handleChange = useImmutableCallback(onChange);\n\n  const saveUser = useCallback(\n    (values, successCallback, errorCallback) => {\n      const data = {\n        ...values,\n        id: user.id,\n      };\n\n      User.save(data)\n        .then(user => {\n          successCallback(\"Saved.\");\n          handleChange(User.convertUserInfo(user));\n        })\n        .catch(error => {\n          errorCallback(get(error, \"response.data.message\", \"Failed saving.\"));\n        });\n    },\n    [user, handleChange]\n  );\n\n  const formFields = useMemo(\n    () =>\n      map(\n        [\n          {\n            name: \"name\",\n            title: \"Name\",\n            type: \"text\",\n            initialValue: user.name,\n          },\n          {\n            name: \"email\",\n            title: \"Email\",\n            type: \"email\",\n            initialValue: user.email,\n          },\n          !user.isDisabled && currentUser.id !== user.id\n            ? {\n                name: \"group_ids\",\n                title: \"Groups\",\n                type: \"select\",\n                mode: \"multiple\",\n                options: map(allGroups, group => ({ name: group.name, value: group.id })),\n                initialValue: user.groupIds,\n                loading: isLoadingGroups,\n                placeholder: isLoadingGroups ? \"Loading...\" : \"\",\n              }\n            : {\n                name: \"group_ids\",\n                title: \"Groups\",\n                type: \"content\",\n                required: false,\n                content: isLoadingGroups ? \"Loading...\" : <UserGroups data-test=\"Groups\" groups={groups} />,\n              },\n        ],\n        field => ({ readOnly: user.isDisabled, required: true, ...field })\n      ),\n    [user, groups, allGroups, isLoadingGroups]\n  );\n\n  return (\n    <DynamicComponent name=\"UserProfile.UserInfoForm\" {...props}>\n      <DynamicForm fields={formFields} onSubmit={saveUser} hideSubmitButton={user.isDisabled} />\n    </DynamicComponent>\n  );\n}\n\nUserInfoForm.propTypes = {\n  user: UserProfile.isRequired,\n  onChange: PropTypes.func,\n};\n\nUserInfoForm.defaultProps = {\n  onChange: () => {},\n};\n","import React, { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"antd/lib/button\";\nimport Form from \"antd/lib/form\";\nimport Modal from \"antd/lib/modal\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport InputWithCopy from \"@/components/InputWithCopy\";\nimport { UserProfile } from \"@/components/proptypes\";\nimport User from \"@/services/user\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\nimport { useUniqueId } from \"@/lib/hooks/useUniqueId\";\n\nexport default function ApiKeyForm(props) {\n  const { user, onChange } = props;\n\n  const [loading, setLoading] = useState(false);\n  const handleChange = useImmutableCallback(onChange);\n  const apiKeyInputId = useUniqueId(\"apiKey\");\n\n  const regenerateApiKey = useCallback(() => {\n    const doRegenerate = () => {\n      setLoading(true);\n      User.regenerateApiKey(user)\n        .then(apiKey => {\n          if (apiKey) {\n            handleChange({ ...user, apiKey });\n          }\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    };\n\n    Modal.confirm({\n      title: \"Regenerate API Key\",\n      content: \"Are you sure you want to regenerate?\",\n      okText: \"Regenerate\",\n      onOk: doRegenerate,\n      maskClosable: true,\n      autoFocusButton: null,\n    });\n  }, [user, handleChange]);\n\n  return (\n    <DynamicComponent name=\"UserProfile.ApiKeyForm\" {...props}>\n      <Form layout=\"vertical\">\n        <hr />\n        <Form.Item label=\"API Key\" className=\"m-b-10\">\n          <InputWithCopy id={apiKeyInputId} className=\"hide-in-percy\" value={user.apiKey} data-test=\"ApiKey\" readOnly />\n        </Form.Item>\n        <Button className=\"w-100\" onClick={regenerateApiKey} loading={loading} data-test=\"RegenerateApiKey\">\n          Regenerate\n        </Button>\n      </Form>\n    </DynamicComponent>\n  );\n}\n\nApiKeyForm.propTypes = {\n  user: UserProfile.isRequired,\n  onChange: PropTypes.func,\n};\n\nApiKeyForm.defaultProps = {\n  onChange: () => {},\n};\n","import { isFunction, get } from \"lodash\";\nimport React from \"react\";\nimport Form from \"antd/lib/form\";\nimport Modal from \"antd/lib/modal\";\nimport Input from \"antd/lib/input\";\nimport { UserProfile } from \"@/components/proptypes\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport User from \"@/services/user\";\nimport notification from \"@/services/notification\";\n\nclass ChangePasswordDialog extends React.Component {\n  static propTypes = {\n    user: UserProfile.isRequired,\n    dialog: DialogPropType.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPassword: { value: \"\", error: null, touched: false },\n      newPassword: { value: \"\", error: null, touched: false },\n      repeatPassword: { value: \"\", error: null, touched: false },\n      updatingPassword: false,\n    };\n  }\n\n  fieldError = (name, value) => {\n    if (value.length === 0) return \"This field is required.\";\n    if (name !== \"currentPassword\" && value.length < 6) return \"This field is too short.\";\n    if (name === \"repeatPassword\" && value !== this.state.newPassword.value) return \"Passwords don't match\";\n    return null;\n  };\n\n  validateFields = callback => {\n    const { currentPassword, newPassword, repeatPassword } = this.state;\n\n    const errors = {\n      currentPassword: this.fieldError(\"currentPassword\", currentPassword.value),\n      newPassword: this.fieldError(\"newPassword\", newPassword.value),\n      repeatPassword: this.fieldError(\"repeatPassword\", repeatPassword.value),\n    };\n\n    this.setState({\n      currentPassword: { ...currentPassword, error: errors.currentPassword },\n      newPassword: { ...newPassword, error: errors.newPassword },\n      repeatPassword: { ...repeatPassword, error: errors.repeatPassword },\n    });\n\n    if (isFunction(callback)) {\n      if (errors.currentPassword || errors.newPassword || errors.repeatPassword) {\n        callback(errors);\n      } else callback(null);\n    }\n  };\n\n  updatePassword = () => {\n    const { currentPassword, newPassword, updatingPassword } = this.state;\n\n    if (!updatingPassword) {\n      this.validateFields(err => {\n        if (!err) {\n          const userData = {\n            id: this.props.user.id,\n            old_password: currentPassword.value,\n            password: newPassword.value,\n          };\n\n          this.setState({ updatingPassword: true });\n\n          User.save(userData)\n            .then(() => {\n              notification.success(\"Saved.\");\n              this.props.dialog.close({ success: true });\n            })\n            .catch(error => {\n              notification.error(get(error, \"response.data.message\", \"Failed saving.\"));\n              this.setState({ updatingPassword: false });\n            });\n        } else {\n          this.setState(prevState => ({\n            currentPassword: { ...prevState.currentPassword, touched: true },\n            newPassword: { ...prevState.newPassword, touched: true },\n            repeatPassword: { ...prevState.repeatPassword, touched: true },\n          }));\n        }\n      });\n    }\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    const { error } = this.state[name];\n\n    this.setState({ [name]: { value, error, touched: true } }, () => {\n      this.validateFields();\n    });\n  };\n\n  render() {\n    const { dialog } = this.props;\n    const { currentPassword, newPassword, repeatPassword, updatingPassword } = this.state;\n\n    const formItemProps = { className: \"m-b-10\", required: true };\n\n    const inputProps = {\n      onChange: this.handleChange,\n      onPressEnter: this.updatePassword,\n    };\n\n    return (\n      <Modal\n        {...dialog.props}\n        okButtonProps={{ loading: updatingPassword }}\n        onOk={this.updatePassword}\n        title=\"Change Password\">\n        <Form layout=\"vertical\">\n          <Form.Item\n            {...formItemProps}\n            validateStatus={currentPassword.touched && currentPassword.error ? \"error\" : null}\n            help={currentPassword.touched ? currentPassword.error : null}\n            label=\"Current Password\">\n            <Input.Password {...inputProps} name=\"currentPassword\" data-test=\"CurrentPassword\" autoFocus />\n          </Form.Item>\n          <Form.Item\n            {...formItemProps}\n            validateStatus={newPassword.touched && newPassword.error ? \"error\" : null}\n            help={newPassword.touched ? newPassword.error : null}\n            label=\"New Password\">\n            <Input.Password {...inputProps} name=\"newPassword\" data-test=\"NewPassword\" />\n          </Form.Item>\n          <Form.Item\n            {...formItemProps}\n            validateStatus={repeatPassword.touched && repeatPassword.error ? \"error\" : null}\n            help={repeatPassword.touched ? repeatPassword.error : null}\n            label=\"Repeat New Password\">\n            <Input.Password {...inputProps} name=\"repeatPassword\" data-test=\"RepeatPassword\" />\n          </Form.Item>\n        </Form>\n      </Modal>\n    );\n  }\n}\n\nexport default wrapDialog(ChangePasswordDialog);\n","import { isString } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Alert from \"antd/lib/alert\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport InputWithCopy from \"@/components/InputWithCopy\";\nimport { UserProfile } from \"@/components/proptypes\";\nimport { absoluteUrl } from \"@/services/utils\";\n\nexport default function PasswordLinkAlert(props) {\n  const { user, passwordLink, ...restProps } = props;\n\n  if (!isString(passwordLink)) {\n    return null;\n  }\n\n  return (\n    <DynamicComponent name=\"UserProfile.PasswordLinkAlert\" {...props}>\n      <Alert\n        message=\"Email not sent!\"\n        description={\n          <React.Fragment>\n            <p>\n              The mail server is not configured, please send the following link to <b>{user.name}</b>:\n            </p>\n            <InputWithCopy value={absoluteUrl(passwordLink)} aria-label=\"Password link\" readOnly />\n          </React.Fragment>\n        }\n        type=\"warning\"\n        className=\"m-t-20\"\n        closable\n        {...restProps}\n      />\n    </DynamicComponent>\n  );\n}\n\nPasswordLinkAlert.propTypes = {\n  user: UserProfile.isRequired,\n  passwordLink: PropTypes.string,\n};\n\nPasswordLinkAlert.defaultProps = {\n  passwordLink: null,\n};\n","import React, { useState, useCallback } from \"react\";\nimport Button from \"antd/lib/button\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { UserProfile } from \"@/components/proptypes\";\nimport User from \"@/services/user\";\nimport PasswordLinkAlert from \"./PasswordLinkAlert\";\n\nexport default function PasswordResetForm(props) {\n  const { user } = props;\n\n  const [loading, setLoading] = useState(false);\n  const [passwordLink, setPasswordLink] = useState(null);\n\n  const sendPasswordReset = useCallback(() => {\n    setLoading(true);\n    User.sendPasswordReset(user)\n      .then(passwordLink => {\n        setPasswordLink(passwordLink);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [user]);\n\n  return (\n    <DynamicComponent name=\"UserProfile.PasswordResetForm\" {...props}>\n      <Button className=\"w-100 m-t-10\" onClick={sendPasswordReset} loading={loading}>\n        Send Password Reset Email\n      </Button>\n      <PasswordLinkAlert user={user} passwordLink={passwordLink} afterClose={() => setPasswordLink(null)} />\n    </DynamicComponent>\n  );\n}\n\nPasswordResetForm.propTypes = {\n  user: UserProfile.isRequired,\n};\n","import React, { useState, useCallback } from \"react\";\nimport Button from \"antd/lib/button\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { UserProfile } from \"@/components/proptypes\";\nimport User from \"@/services/user\";\nimport PasswordLinkAlert from \"./PasswordLinkAlert\";\n\nexport default function ResendInvitationForm(props) {\n  const { user } = props;\n\n  const [loading, setLoading] = useState(false);\n  const [passwordLink, setPasswordLink] = useState(null);\n\n  const resendInvitation = useCallback(() => {\n    setLoading(true);\n\n    User.resendInvitation(user)\n      .then(passwordLink => {\n        setPasswordLink(passwordLink);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [user]);\n\n  return (\n    <DynamicComponent name=\"UserProfile.ResendInvitationForm\" {...props}>\n      <Button className=\"w-100 m-t-10\" onClick={resendInvitation} loading={loading}>\n        Resend Invitation\n      </Button>\n      <PasswordLinkAlert user={user} passwordLink={passwordLink} afterClose={() => setPasswordLink(null)} />\n    </DynamicComponent>\n  );\n}\n\nResendInvitationForm.propTypes = {\n  user: UserProfile.isRequired,\n};\n","import React, { useCallback } from \"react\";\nimport Button from \"antd/lib/button\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { UserProfile } from \"@/components/proptypes\";\nimport { currentUser } from \"@/services/auth\";\n\nimport ChangePasswordDialog from \"./ChangePasswordDialog\";\nimport PasswordResetForm from \"./PasswordResetForm\";\nimport ResendInvitationForm from \"./ResendInvitationForm\";\n\nexport default function PasswordForm(props) {\n  const { user } = props;\n\n  const changePassword = useCallback(() => {\n    ChangePasswordDialog.showModal({ user });\n  }, [user]);\n\n  return (\n    <DynamicComponent name=\"UserProfile.PasswordForm\" {...props}>\n      <h5>Password</h5>\n      {user.id === currentUser.id && (\n        <Button className=\"w-100 m-t-10\" onClick={changePassword} data-test=\"ChangePassword\">\n          Change Password\n        </Button>\n      )}\n      {user.id !== currentUser.id && currentUser.isAdmin && (\n        <React.Fragment>\n          {user.isInvitationPending ? <ResendInvitationForm user={user} /> : <PasswordResetForm user={user} />}\n        </React.Fragment>\n      )}\n    </DynamicComponent>\n  );\n}\n\nPasswordForm.propTypes = {\n  user: UserProfile.isRequired,\n};\n","import React, { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"antd/lib/button\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { UserProfile } from \"@/components/proptypes\";\nimport { currentUser } from \"@/services/auth\";\nimport User from \"@/services/user\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\n\nexport default function ToggleUserForm(props) {\n  const { user, onChange } = props;\n\n  const [loading, setLoading] = useState(false);\n  const handleChange = useImmutableCallback(onChange);\n\n  const toggleUser = useCallback(() => {\n    const action = user.isDisabled ? User.enableUser : User.disableUser;\n    setLoading(true);\n    action(user)\n      .then(data => {\n        if (data) {\n          handleChange(User.convertUserInfo(data));\n        }\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [user, handleChange]);\n\n  if (!currentUser.isAdmin || user.id === currentUser.id) {\n    return null;\n  }\n\n  const buttonProps = {\n    type: user.isDisabled ? \"primary\" : \"danger\",\n    children: user.isDisabled ? \"Enable User\" : \"Disable User\",\n  };\n\n  return (\n    <DynamicComponent name=\"UserProfile.ToggleUserForm\">\n      <Button className=\"w-100 m-t-10\" onClick={toggleUser} loading={loading} {...buttonProps} />\n    </DynamicComponent>\n  );\n}\n\nToggleUserForm.propTypes = {\n  user: UserProfile.isRequired,\n  onChange: PropTypes.func,\n};\n\nToggleUserForm.defaultProps = {\n  onChange: () => {},\n};\n","import React, { useState, useEffect } from \"react\";\nimport { UserProfile } from \"@/components/proptypes\";\n\nimport UserInfoForm from \"./UserInfoForm\";\nimport ApiKeyForm from \"./ApiKeyForm\";\nimport PasswordForm from \"./PasswordForm\";\nimport ToggleUserForm from \"./ToggleUserForm\";\n\nexport default function EditableUserProfile(props) {\n  const [user, setUser] = useState(props.user);\n\n  useEffect(() => {\n    setUser(props.user);\n  }, [props.user]);\n\n  return (\n    <div className=\"col-md-4 col-md-offset-4\">\n      <img alt=\"Profile\" src={user.profileImageUrl} className=\"profile__image\" width=\"40\" />\n      <h3 className=\"profile__h3\">{user.name}</h3>\n      <hr />\n      <UserInfoForm user={user} onChange={setUser} />\n      {!user.isDisabled && (\n        <React.Fragment>\n          <ApiKeyForm user={user} onChange={setUser} />\n          <hr />\n          <PasswordForm user={user} />\n        </React.Fragment>\n      )}\n      <hr />\n      <ToggleUserForm user={user} onChange={setUser} />\n    </div>\n  );\n}\n\nEditableUserProfile.propTypes = {\n  user: UserProfile.isRequired,\n};\n","import React from \"react\";\nimport { UserProfile } from \"@/components/proptypes\";\nimport UserGroups from \"@/components/UserGroups\";\n\nimport useUserGroups from \"../hooks/useUserGroups\";\n\nexport default function ReadOnlyUserProfile({ user }) {\n  const { groups, isLoading: isLoadingGroups } = useUserGroups(user);\n\n  return (\n    <div className=\"col-md-4 col-md-offset-4 profile__container\">\n      <img alt=\"profile\" src={user.profileImageUrl} className=\"profile__image\" width=\"40\" />\n      <h3 className=\"profile__h3\">{user.name}</h3>\n      <hr />\n      <dl className=\"profile__dl\">\n        <dt>Name:</dt>\n        <dd>{user.name}</dd>\n        <dt>Email:</dt>\n        <dd>{user.email}</dd>\n        <dt className=\"m-b-5\">Groups:</dt>\n        <dd>{isLoadingGroups ? \"Loading...\" : <UserGroups groups={groups} />}</dd>\n      </dl>\n    </div>\n  );\n}\n\nReadOnlyUserProfile.propTypes = {\n  user: UserProfile.isRequired,\n};\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport EmailSettingsWarning from \"@/components/EmailSettingsWarning\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport LoadingState from \"@/components/items-list/components/LoadingState\";\nimport wrapSettingsTab from \"@/components/SettingsWrapper\";\n\nimport User from \"@/services/user\";\nimport { currentUser } from \"@/services/auth\";\nimport routes from \"@/services/routes\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\n\nimport EditableUserProfile from \"./components/EditableUserProfile\";\nimport ReadOnlyUserProfile from \"./components/ReadOnlyUserProfile\";\n\nimport \"./settings.less\";\n\nfunction UserProfile({ userId, onError }) {\n  const [user, setUser] = useState(null);\n\n  const handleError = useImmutableCallback(onError);\n\n  useEffect(() => {\n    let isCancelled = false;\n    User.get({ id: userId || currentUser.id })\n      .then(user => {\n        if (!isCancelled) {\n          setUser(User.convertUserInfo(user));\n        }\n      })\n      .catch(error => {\n        if (!isCancelled) {\n          handleError(error);\n        }\n      });\n\n    return () => {\n      isCancelled = true;\n    };\n  }, [userId, handleError]);\n\n  const canEdit = user && (currentUser.isAdmin || currentUser.id === user.id);\n  return (\n    <React.Fragment>\n      <EmailSettingsWarning featureName=\"invite emails\" className=\"m-b-20\" adminOnly />\n      <div className=\"row\">\n        {!user && <LoadingState className=\"\" />}\n        {user && (\n          <DynamicComponent name=\"UserProfile\" user={user}>\n            {!canEdit && <ReadOnlyUserProfile user={user} />}\n            {canEdit && <EditableUserProfile user={user} />}\n          </DynamicComponent>\n        )}\n      </div>\n    </React.Fragment>\n  );\n}\n\nUserProfile.propTypes = {\n  userId: PropTypes.string,\n  onError: PropTypes.func,\n};\n\nUserProfile.defaultProps = {\n  userId: null, // defaults to `currentUser.id`\n  onError: () => {},\n};\n\nconst UserProfilePage = wrapSettingsTab(\n  \"Users.Account\",\n  {\n    title: \"Account\",\n    path: \"users/me\",\n    order: 7,\n  },\n  UserProfile\n);\n\nroutes.register(\n  \"Users.Account\",\n  routeWithUserSession({\n    path: \"/users/me\",\n    title: \"Account\",\n    render: pageProps => <UserProfilePage {...pageProps} />,\n  })\n);\nroutes.register(\n  \"Users.ViewOrEdit\",\n  routeWithUserSession({\n    path: \"/users/:userId\",\n    title: \"Users\",\n    render: pageProps => <UserProfilePage {...pageProps} />,\n  })\n);\n","import moment from \"moment\";\nimport { isFunction } from \"lodash\";\n\n// Ensure that this image will be available in assets folder\nimport \"@/assets/images/avatar.svg\";\n\n// Register visualizations\nimport \"@redash/viz/lib\";\n\n// Register routes before registering extensions as they may want to override some\nimport \"@/pages\";\n\nimport \"./antd-spinner\";\n\nmoment.updateLocale(\"en\", {\n  relativeTime: {\n    future: \"%s\",\n    past: \"%s\",\n    s: \"just now\",\n    m: \"a minute ago\",\n    mm: \"%d minutes ago\",\n    h: \"an hour ago\",\n    hh: \"%d hours ago\",\n    d: \"a day ago\",\n    dd: \"%d days ago\",\n    M: \"a month ago\",\n    MM: \"%d months ago\",\n    y: \"a year ago\",\n    yy: \"%d years ago\",\n  },\n});\n\nfunction requireImages() {\n  // client/app/assets/images/<path> => /images/<path>\n  const ctx = require.context(\"@/assets/images/\", true, /\\.(png|jpe?g|gif|svg)$/);\n  ctx.keys().forEach(ctx);\n}\n\nfunction registerExtensions() {\n  const context = require.context(\"extensions\", true, /^((?![\\\\/.]test[\\\\./]).)*\\.jsx?$/);\n  const modules = context\n    .keys()\n    .map(context)\n    .map(module => module.default);\n\n  return modules\n    .filter(isFunction)\n    .filter(f => f.init)\n    .map(f => f());\n}\n\nrequireImages();\nregisterExtensions();\n","import { isString } from \"lodash\";\nimport navigateTo from \"./navigateTo\";\n\nexport default function handleNavigationIntent(event) {\n  let element = event.target;\n  while (element) {\n    if (element.tagName === \"A\") {\n      break;\n    }\n    element = element.parentNode;\n  }\n  if (!element || !element.hasAttribute(\"href\") || element.hasAttribute(\"download\") || element.dataset.skipRouter) {\n    return;\n  }\n\n  // Keep some default behaviour\n  if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n    return;\n  }\n\n  const target = element.getAttribute(\"target\");\n  if (isString(target) && target.toLowerCase() === \"_blank\") {\n    return;\n  }\n\n  event.preventDefault();\n\n  navigateTo(element.href);\n}\n","import React from \"react\";\nimport Spin from \"antd/lib/spin\";\n\nSpin.setDefaultIndicator(\n  <span role=\"status\" aria-live=\"polite\" aria-relevant=\"additions removals\">\n    <i className=\"fa fa-spinner fa-pulse\" aria-hidden=\"true\" />\n    <span className=\"sr-only\">Loading...</span>\n  </span>\n);\n","import notification from \"@/services/notification\";\n\nfunction addOnlineListener(notificationKey) {\n  function onlineStateHandler() {\n    notification.close(notificationKey);\n    window.removeEventListener(\"online\", onlineStateHandler);\n  }\n  window.addEventListener(\"online\", onlineStateHandler);\n}\n\nexport default {\n  init() {\n    window.addEventListener(\"offline\", () => {\n      notification.warning(\"Please check your Internet connection.\", null, {\n        key: \"connectionNotification\",\n        duration: null,\n      });\n      addOnlineListener(\"connectionNotification\");\n    });\n  },\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"@/config\";\n\nimport ApplicationArea from \"@/components/ApplicationArea\";\nimport offlineListener from \"@/services/offline-listener\";\n\nReactDOM.render(<ApplicationArea />, document.getElementById(\"application-root\"), () => {\n  offlineListener.init();\n});\n","import React, { useState, useEffect } from \"react\";\nimport routes from \"@/services/routes\";\nimport Router from \"./Router\";\nimport handleNavigationIntent from \"./handleNavigationIntent\";\nimport ErrorMessage from \"./ErrorMessage\";\n\nexport default function ApplicationArea() {\n  const [currentRoute, setCurrentRoute] = useState(null);\n  const [unhandledError, setUnhandledError] = useState(null);\n\n  useEffect(() => {\n    if (currentRoute && currentRoute.title) {\n      document.title = currentRoute.title;\n    }\n  }, [currentRoute]);\n\n  useEffect(() => {\n    function globalErrorHandler(event) {\n      event.preventDefault();\n      if (event.message === \"Uncaught SyntaxError: Unexpected token '<'\") {\n        // if we see a javascript error on unexpected token where the unexpected token is '<', this usually means that a fallback html file (like index.html)\n        // was served as content of script rather than the expected script, give a friendlier message in the console on what could be going on\n        console.error(\n          `[Uncaught SyntaxError: Unexpected token '<'] usually means that a fallback html file was returned from server rather than the expected script. Check that the server is properly serving the file ${event.filename}.`\n        );\n      }\n      setUnhandledError(event.error);\n    }\n\n    document.body.addEventListener(\"click\", handleNavigationIntent, false);\n    window.addEventListener(\"error\", globalErrorHandler, false);\n\n    return () => {\n      document.body.removeEventListener(\"click\", handleNavigationIntent, false);\n      window.removeEventListener(\"error\", globalErrorHandler, false);\n    };\n  }, []);\n\n  if (unhandledError) {\n    return <ErrorMessage error={unhandledError} />;\n  }\n\n  return <Router routes={routes.items} onRouteChange={setCurrentRoute} />;\n}\n","export default __webpack_public_path__ + \"images/avatar.svg\";"],"sourceRoot":""}